0.22018806380597428/0.0001
0.04457228061998871/0.0001
2.691172883700121/0.0001
0.22018806380597428/0.0001
5000.0*.0.16677688224562598
5000*0.16677688224562598
5000*0.03218540108616168
Test <- c(10,20,30)
1/Test
3 / (1/Test)
3 / (1/sum(Test))
3 / sum(1/Test)
1/10 + 1/20 + 1/30
3/0.1833333
Test <- c(10,10,10,20,30)
5 / sum(1/Test)
(1/10)^3 + 1/20 + 1/30
5/0.08433333
1/20 + 1/30 + 1/10 + 1/10 + 1/10
(1/10)*3 + 1/20 + 1/30
.0003*10000
25e-5 * 12300
3e-5 * 12300
273*100
31,812/12
31812/12
98297/18
2651*18
47718*2
2651*18
2427.22*2
5555*2
566.55
1050*30
1050*60
566.55+3212.65
566.55+3212.65+638.71
1050/20
52.5*30
52.5*31
52.5*62
566.55+ 3255 +638.71
5555*2
1050*62
65100+11110
638.71+ 3886.29
2427.22*2
10000(20)
10000*20
40000/20
36000/20
1103788/226252
1000*1e-8
exp(-1e-05)
100000*1e-8
1000000*1e-8
exp(0.1)
exp(0.01)
exp(-0.01)
10000000*1e-8
exp(-0.1)
rbinom(100000,1,0.1)
sum(rbinom(100000,1,0.1))
exp(-0.1)
10262/100000
1-0.10262
sum(rbinom(10000000,1,0.1))
1 - 999033/10000000
sum(rbinom(1000000000,1,0.1))
exp(-0.1)
99997936/1000000000
1-0.09999794
exp(-0.01)
sum(rbinom(10000000,1,0.10))
sum(rbinom(10000000,1,0.01))
99765/10000000
1-0.0099765
sum(rbinom(10000000,0,0.01))
exp(-2)
0.1*1000
2*2*2*2*2
2*2*2
3*3*3
500/25
40*25
20*10000*.01
132-103
29/2
(1-0.04)*0.15 + 0.04*0.2*0.3
(1-0.04)*0.05 + 0.04*0.2*0.7
(1-0.04)*0.15 + 0.04*0.8*0.3
(1-0.04)*0.65 + 0.04*0.8*0.7
(1-0.7)*0.15 + 0.7*0.2*0.3
(1-0.7)*0.05 + 0.7*0.2*0.7
(1-0.7)*0.15 + 0.7*0.8*0.3
(1-0.7)*0.65 + 0.7*0.8*0.7
(1-0.96)*0.15 + 0.96*0.2*0.3
(1-0.96)*0.05 + 0.96*0.2*0.7
(1-0.96)*0.15 + 0.96*0.8*0.3
(1-0.96)*0.65 + 0.96*0.8*0.7
(1-0.5)*0.25 + 0.5*0.5*0.5
702*.70
702*.30
9/5
0.12/0.98
41000/6
41000/(6*30)
.75+.5+.75+1+.5+.5+1+.5
6000*20
1+1+.75+1+1+1+1+.75
1+1+.75+1+1+1+1+.75+.5
1+.5+3/8+1+1+7/8+1+1++3/4
1+.5+3/8+1+1+7/8+1+1+3/4+3/4
14000/6
8000/6
100/250000
4e-04/(40000)
100/200000
5e-04/250000
1000/250000
0.004/(200000)
35000/52
1329/52
5241/52
542*52
673*52
35000/52
5242/52
1329/52
59742/52
3612+3638
7250/52
1472+1084
2556/52
5000*100
272-247
25/2
247+12
339*64
2500/18
138.8889*20
368-345
345+12
5+2.25
7.5+1.25
2.5+2.25+1.25
7.5+1.25
133+146+151+125+125
133+146+151+125+62
1.5/30
1.12/24
30/24
26*40
12*4
4000*.01
40*100
factorial(40)/(factorial(38)*factorial(2))
780*100
780*50
780*10
780*20
780*15
780*20
780*50
780*100
780*150
5*60
300/8
factorial(10)/(factorial(8)*factorial(2))
factorial(40)/(factorial(38)*factorial(2))
factorial(40)/(factorial(38)*factorial(2)) *10
factorial(40)/(factorial(38)*factorial(2)) *100
1/200
1/1000
1/200
0.0025/5
100/100000
100/200000
library(viridis)#
library(here)#
#
### P (allele is 2Ns = x | allele is at 1%)#
## This comes from running Results/#
args = commandArgs(trailingOnly=TRUE)#
print(args)#
#
###Example#
#
MaxLLParameters = "../Results/MaxLLEstimatesDFE.txt"#
print (MaxLLParameters)#
LLFile = read.table(MaxLLParameters)#
print (MaxLLParameters)#
Alpha = LLFile$V1#
Gamma = LLFile$V2#
P_allele_at_OnePercent = 3.08e-07#
AllelesWithSelectionCoefficientFile = "ExitOnePercentSValuesPopExpansionBoyko.txt"#
NumberOfChromosomesInMostAncestralEpoch = 10000#
NumberAllelesSimulatedInDemHistory = 2.025e+11#
IntervalLength <- as.double(5)#
IntervalNumber <- as.double(30)
P_Allele_Is_2Ns_given_OnePercent <- c()#
#
# P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,pgamma(0.5,Alpha,scale=Gamma))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*2.5,Alpha,scale=Gamma) - pgamma((i-1)*2.5,Alpha,scale=Gamma)#
    P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,Prob)#
}#
#
#### Number of alleles#
#
Alpha = 0.184#
Beta = 319.8626 * 10#
#
P_Allele_Is_2Ns <- c()#
NumberOfAllelesAt2Ns <- c()#
RealProbs <- c()#
# P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,pgamma(0.5,Alpha,scale=Beta))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*IntervalLength/2,Alpha,scale=Beta) - pgamma((i-1)*IntervalLength/2,Alpha,scale=Beta)#
    P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,Prob)#
    NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*((80000 + (100000/10000)*100)*2500*1000)) # Original Test#
    # NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*(1))#
}#
################################################### Two plots on same place #############################
#
ColorViridis <- viridis(2)#
ViridisColors <- viridis(2)#
#
SelectionCoefficientList <- read.table(AllelesWithSelectionCoefficientFile)#
#
MultipliedValues <- SelectionCoefficientList$V2*NumberOfChromosomesInMostAncestralEpoch#
#
FourNsValues <- MultipliedValues[(MultipliedValues < IntervalLength/2*IntervalNumber)]#
#
Check <- hist(FourNsValues,breaks=c(IntervalLength/2*0:IntervalNumber))#
Counts_At_OnePercent_Given2Ns <- Check$counts#
#
Probabilities_At_One_Percent_Given_2NsMouse= Counts_At_OnePercent_Given2Ns/ (NumberOfAllelesAt2Ns)#
###### The whole stuff#
#
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c("0-5","50-55","100-150","150-155","200-205",Label)#
#
pdf("../Results/DFEf_to_DFE.pdf",width=10,height = 3.5)#
par(mar=c(4.1,5.1,0.6,2.1))#
par(mfrow = c(1,1))#
#
FirstProbsMouse <- ProbsMouse#
#
###### The whole stuff#
if (sum(ProbsMouse) > 1.0){#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:30],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:30]))#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:20])#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / sum (ProbsMouse[1:IntervalNumber] )#
ProbsMouse <- c(ProbsMouse,0)#
#
}else {#
ProbsMouse <- c(ProbsMouse[1:IntervalNumber],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
}#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c(Labels,Label)#
counts <- table(mtcars$vs, mtcars$gear)#
# counts <- rbind(counts,c(1,2,3))#
# counts <- rbind(counts,c(1,2,3))#
for (i in 4:IntervalNumber){#
    counts <- cbind(counts,c(ProbsMouse[i], P_Allele_Is_2Ns_given_OnePercent[i]))#
}#
# counts[1,1] <- P_Allele_Is_2Ns[1]#
# counts[1,2] <- P_Allele_Is_2Ns[2]#
# counts[1,3] <- P_Allele_Is_2Ns[3]#
counts[1,1] <- ProbsMouse[1]#
counts[1,2] <- ProbsMouse[2]#
counts[1,3] <- ProbsMouse[3]#
# counts[3,1] <- ProbsMouse[1]#
# counts[3,2] <- ProbsMouse[2]#
# counts[3,3] <- ProbsMouse[3]#
counts[2,1] <- P_Allele_Is_2Ns_given_OnePercent[1]#
counts[2,2] <- P_Allele_Is_2Ns_given_OnePercent[2]#
counts[2,3] <- P_Allele_Is_2Ns_given_OnePercent[3]#
#
counts <- cbind(counts,c( 1 - sum(ProbsMouse[1:IntervalNumber]), 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber])))#
#
for ( i in 1:2){#
    for (j in 1:(IntervalNumber+1)){#
        if (counts[i,j] <= 1e-8){#
            counts[i,j] = 1e-8#
        }#
    }#
}#
# rownames(counts) <- c(expression("Real P("*bolditalic(s[j])*" | DFE, D)"), expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 4"),expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 5"), expression("P("*bolditalic(s[j])*" | 1%, DFE, D)"))#
#
Label <- paste(">","150",sep="")#
Labels <- c("0-5","50-55","100-105",Label)#
barplot(log10(counts)-log10(0.00000001), main="", ylab="Probability", xlab="4Ns", col=ViridisColors,#
legend = c(expression( expression("Inferred"  ~ 'P'[psi] * "(" * bolditalic(s[j]) * ")"), expression('P'[psi]* "("* bolditalic(s[j])*" | "* italic(f) * ", "* italic(D) *")"))), ylim = c(0, 8), beside=TRUE,cex.lab=2,cex.axis=2,cex.names=2, args.legend = list(x = "top",cex= 0.95), yaxt="n", xaxt = "n", space = c(0, 2))#
#
axis (2,at=c(0,2,4,6,8), labels = c("< 10^-8",10^-6,10^-4,10^-2,10^0), cex.axis = 0.8)#
#
axis(1, at=c(3.5, 53.5, 103.5, 153.5), labels=Labels,cex.lab=1,cex=1,cex.axis=1,col.ticks="red")#
#Expression <- expression("Real " ~ 'P'[psi] ~ "(bolditalic(s[j]), | DFE, D)")#
Expression2 <- expression(paste("Inferred P(",bolditalic(s[j])," | DFE, D)  Equation 5"))#
Expression3 <- expression(paste("P(",bolditalic(s[j])," | 1%, DFE, D)"))#
dev.off()#
#
DataTable = data.frame(#
  P_sj_given_DemHistory_Frequency = P_Allele_Is_2Ns_given_OnePercent[1:31],#
  P_sj = ProbsMouse[1:31]#
)#
#
value <- c()#
for (i in 1:IntervalNumber){#
    Multiplier <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    value <- c(value,Multiplier)#
}#
Multiplier <- paste(">",IntervalNumber*IntervalLength,sep="")#
value <- c(value,Multiplier)#
#
row.names(DataTable) <- value#
#
write.table(DataTable,file="../Results/Probabilities.txt",col.names=NA)
library(viridis)#
library(here)#
#
### P (allele is 2Ns = x | allele is at 1%)#
## This comes from running Results/#
args = commandArgs(trailingOnly=TRUE)#
print(args)#
#
###Example#
#
MaxLLParameters = "../Results/MaxLLEstimatesDFE.txt"#
print (MaxLLParameters)#
LLFile = read.table(MaxLLParameters)#
print (MaxLLParameters)#
Alpha = LLFile$V1#
Gamma = LLFile$V2#
P_allele_at_OnePercent = 3.08e-07#
AllelesWithSelectionCoefficientFile = "ExitOnePercentSValuesPopExpansionBoyko.txt"#
NumberOfChromosomesInMostAncestralEpoch = 10000#
NumberAllelesSimulatedInDemHistory = 2.025e+11#
IntervalLength <- as.double(5)#
IntervalNumber <- as.double(30)
P_Allele_Is_2Ns_given_OnePercent <- c()#
#
# P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,pgamma(0.5,Alpha,scale=Gamma))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*2.5,Alpha,scale=Gamma) - pgamma((i-1)*2.5,Alpha,scale=Gamma)#
    P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,Prob)#
}#
#
#### Number of alleles#
#
Alpha = 0.184#
Beta = 319.8626 * 10#
#
P_Allele_Is_2Ns <- c()#
NumberOfAllelesAt2Ns <- c()#
RealProbs <- c()#
# P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,pgamma(0.5,Alpha,scale=Beta))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*IntervalLength/2,Alpha,scale=Beta) - pgamma((i-1)*IntervalLength/2,Alpha,scale=Beta)#
    P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,Prob)#
    NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*((80000 + (100000/10000)*100)*2500*1000)) # Original Test#
    # NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*(1))#
}#
################################################### Two plots on same place #############################
#
ColorViridis <- viridis(2)#
ViridisColors <- viridis(2)#
#
SelectionCoefficientList <- read.table(AllelesWithSelectionCoefficientFile)#
#
MultipliedValues <- SelectionCoefficientList$V2*NumberOfChromosomesInMostAncestralEpoch#
#
FourNsValues <- MultipliedValues[(MultipliedValues < IntervalLength/2*IntervalNumber)]#
#
Check <- hist(FourNsValues,breaks=c(IntervalLength/2*0:IntervalNumber))#
Counts_At_OnePercent_Given2Ns <- Check$counts#
#
Probabilities_At_One_Percent_Given_2NsMouse= Counts_At_OnePercent_Given2Ns/ (NumberOfAllelesAt2Ns)#
###### The whole stuff#
#
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c("0-5","50-55","100-150","150-155","200-205",Label)#
#
pdf("../Results/DFEf_to_DFE.pdf",width=10,height = 3.5)#
par(mar=c(4.1,5.1,0.6,2.1))#
par(mfrow = c(1,1))#
#
FirstProbsMouse <- ProbsMouse#
#
###### The whole stuff#
if (sum(ProbsMouse) > 1.0){#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:30],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:30]))#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:20])#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / sum (ProbsMouse[1:IntervalNumber] )#
ProbsMouse <- c(ProbsMouse,0)#
#
}else {#
ProbsMouse <- c(ProbsMouse[1:IntervalNumber],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
}#
#
ProbsMouse <- c(1 - sum(ProbsMouse[1:IntervalNumber]),1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c(Labels,Label)#
counts <- table(mtcars$vs, mtcars$gear)#
# counts <- rbind(counts,c(1,2,3))#
# counts <- rbind(counts,c(1,2,3))#
for (i in 4:(IntervalNumber+1)){#
    counts <- cbind(counts,c(ProbsMouse[i], P_Allele_Is_2Ns_given_OnePercent[i]))#
}#
# counts[1,1] <- P_Allele_Is_2Ns[1]#
# counts[1,2] <- P_Allele_Is_2Ns[2]#
# counts[1,3] <- P_Allele_Is_2Ns[3]#
counts[1,1] <- ProbsMouse[1]#
counts[1,2] <- ProbsMouse[2]#
counts[1,3] <- ProbsMouse[3]#
# counts[3,1] <- ProbsMouse[1]#
# counts[3,2] <- ProbsMouse[2]#
# counts[3,3] <- ProbsMouse[3]#
counts[2,1] <- P_Allele_Is_2Ns_given_OnePercent[1]#
counts[2,2] <- P_Allele_Is_2Ns_given_OnePercent[2]#
counts[2,3] <- P_Allele_Is_2Ns_given_OnePercent[3]#
#
# counts <- cbind(counts,c( 1 - sum(ProbsMouse[1:IntervalNumber]), 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber])))#
#
for ( i in 1:2){#
    for (j in 1:(IntervalNumber+1)){#
        if (counts[i,j] <= 1e-8){#
            counts[i,j] = 1e-8#
        }#
    }#
}#
# rownames(counts) <- c(expression("Real P("*bolditalic(s[j])*" | DFE, D)"), expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 4"),expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 5"), expression("P("*bolditalic(s[j])*" | 1%, DFE, D)"))#
#
Label <- paste(">","150",sep="")#
Labels <- c("0-5","50-55","100-105",Label)#
barplot(log10(counts)-log10(0.00000001), main="", ylab="Probability", xlab="4Ns", col=ViridisColors,#
legend = c(expression( expression("Inferred"  ~ 'P'[psi] * "(" * bolditalic(s[j]) * ")"), expression('P'[psi]* "("* bolditalic(s[j])*" | "* italic(f) * ", "* italic(D) *")"))), ylim = c(0, 8), beside=TRUE,cex.lab=2,cex.axis=2,cex.names=2, args.legend = list(x = "top",cex= 0.95), yaxt="n", xaxt = "n", space = c(0, 2))#
#
axis (2,at=c(0,2,4,6,8), labels = c("< 10^-8",10^-6,10^-4,10^-2,10^0), cex.axis = 0.8)#
#
axis(1, at=c(3.5, 53.5, 103.5, 153.5), labels=Labels,cex.lab=1,cex=1,cex.axis=1,col.ticks="red")#
#Expression <- expression("Real " ~ 'P'[psi] ~ "(bolditalic(s[j]), | DFE, D)")#
Expression2 <- expression(paste("Inferred P(",bolditalic(s[j])," | DFE, D)  Equation 5"))#
Expression3 <- expression(paste("P(",bolditalic(s[j])," | 1%, DFE, D)"))#
dev.off()#
#
DataTable = data.frame(#
  P_sj_given_DemHistory_Frequency = P_Allele_Is_2Ns_given_OnePercent[1:31],#
  P_sj = ProbsMouse[1:31]#
)#
#
value <- c()#
for (i in 1:IntervalNumber){#
    Multiplier <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    value <- c(value,Multiplier)#
}#
Multiplier <- paste(">",IntervalNumber*IntervalLength,sep="")#
value <- c(value,Multiplier)#
#
row.names(DataTable) <- value#
#
write.table(DataTable,file="../Results/Probabilities.txt",col.names=NA)
setwd('~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Programs/ExamplePipeline/DFEfToDFE/')
library(viridis)#
library(here)#
#
### P (allele is 2Ns = x | allele is at 1%)#
## This comes from running Results/#
args = commandArgs(trailingOnly=TRUE)#
print(args)#
#
###Example#
#
MaxLLParameters = "../Results/MaxLLEstimatesDFE.txt"#
print (MaxLLParameters)#
LLFile = read.table(MaxLLParameters)#
print (MaxLLParameters)#
Alpha = LLFile$V1#
Gamma = LLFile$V2#
P_allele_at_OnePercent = 3.08e-07#
AllelesWithSelectionCoefficientFile = "ExitOnePercentSValuesPopExpansionBoyko.txt"#
NumberOfChromosomesInMostAncestralEpoch = 10000#
NumberAllelesSimulatedInDemHistory = 2.025e+11#
IntervalLength <- as.double(5)#
IntervalNumber <- as.double(30)
P_Allele_Is_2Ns_given_OnePercent <- c()#
#
# P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,pgamma(0.5,Alpha,scale=Gamma))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*2.5,Alpha,scale=Gamma) - pgamma((i-1)*2.5,Alpha,scale=Gamma)#
    P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,Prob)#
}#
#
#### Number of alleles#
#
Alpha = 0.184#
Beta = 319.8626 * 10#
#
P_Allele_Is_2Ns <- c()#
NumberOfAllelesAt2Ns <- c()#
RealProbs <- c()#
# P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,pgamma(0.5,Alpha,scale=Beta))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*IntervalLength/2,Alpha,scale=Beta) - pgamma((i-1)*IntervalLength/2,Alpha,scale=Beta)#
    P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,Prob)#
    NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*((80000 + (100000/10000)*100)*2500*1000)) # Original Test#
    # NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*(1))#
}#
################################################### Two plots on same place #############################
#
ColorViridis <- viridis(2)#
ViridisColors <- viridis(2)#
#
SelectionCoefficientList <- read.table(AllelesWithSelectionCoefficientFile)#
#
MultipliedValues <- SelectionCoefficientList$V2*NumberOfChromosomesInMostAncestralEpoch#
#
FourNsValues <- MultipliedValues[(MultipliedValues < IntervalLength/2*IntervalNumber)]#
#
Check <- hist(FourNsValues,breaks=c(IntervalLength/2*0:IntervalNumber))#
Counts_At_OnePercent_Given2Ns <- Check$counts#
#
Probabilities_At_One_Percent_Given_2NsMouse= Counts_At_OnePercent_Given2Ns/ (NumberOfAllelesAt2Ns)#
###### The whole stuff#
#
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c("0-5","50-55","100-150","150-155","200-205",Label)#
#
pdf("../Results/DFEf_to_DFE.pdf",width=10,height = 3.5)#
par(mar=c(4.1,5.1,0.6,2.1))#
par(mfrow = c(1,1))#
#
FirstProbsMouse <- ProbsMouse#
#
###### The whole stuff#
if (sum(ProbsMouse) > 1.0){#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:30],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:30]))#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:20])#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / sum (ProbsMouse[1:IntervalNumber] )#
ProbsMouse <- c(ProbsMouse,0)#
#
}else {#
ProbsMouse <- c(ProbsMouse[1:IntervalNumber],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
}#
#
ProbsMouse <- c(1 - sum(ProbsMouse[1:IntervalNumber]),1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c(Labels,Label)#
counts <- table(mtcars$vs, mtcars$gear)#
# counts <- rbind(counts,c(1,2,3))#
# counts <- rbind(counts,c(1,2,3))#
for (i in 4:(IntervalNumber+1)){#
    counts <- cbind(counts,c(ProbsMouse[i], P_Allele_Is_2Ns_given_OnePercent[i]))#
}#
# counts[1,1] <- P_Allele_Is_2Ns[1]#
# counts[1,2] <- P_Allele_Is_2Ns[2]#
# counts[1,3] <- P_Allele_Is_2Ns[3]#
counts[1,1] <- ProbsMouse[1]#
counts[1,2] <- ProbsMouse[2]#
counts[1,3] <- ProbsMouse[3]#
# counts[3,1] <- ProbsMouse[1]#
# counts[3,2] <- ProbsMouse[2]#
# counts[3,3] <- ProbsMouse[3]#
counts[2,1] <- P_Allele_Is_2Ns_given_OnePercent[1]#
counts[2,2] <- P_Allele_Is_2Ns_given_OnePercent[2]#
counts[2,3] <- P_Allele_Is_2Ns_given_OnePercent[3]#
#
# counts <- cbind(counts,c( 1 - sum(ProbsMouse[1:IntervalNumber]), 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber])))#
#
for ( i in 1:2){#
    for (j in 1:(IntervalNumber+1)){#
        if (counts[i,j] <= 1e-8){#
            counts[i,j] = 1e-8#
        }#
    }#
}#
# rownames(counts) <- c(expression("Real P("*bolditalic(s[j])*" | DFE, D)"), expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 4"),expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 5"), expression("P("*bolditalic(s[j])*" | 1%, DFE, D)"))#
#
Label <- paste(">","150",sep="")#
Labels <- c("0-5","50-55","100-105",Label)#
barplot(log10(counts)-log10(0.00000001), main="", ylab="Probability", xlab="4Ns", col=ViridisColors,#
legend = c(expression( expression("Inferred"  ~ 'P'[psi] * "(" * bolditalic(s[j]) * ")"), expression('P'[psi]* "("* bolditalic(s[j])*" | "* italic(f) * ", "* italic(D) *")"))), ylim = c(0, 8), beside=TRUE,cex.lab=2,cex.axis=2,cex.names=2, args.legend = list(x = "top",cex= 0.95), yaxt="n", xaxt = "n", space = c(0, 2))#
#
axis (2,at=c(0,2,4,6,8), labels = c("< 10^-8",10^-6,10^-4,10^-2,10^0), cex.axis = 0.8)#
#
axis(1, at=c(3.5, 53.5, 103.5, 153.5), labels=Labels,cex.lab=1,cex=1,cex.axis=1,col.ticks="red")#
#Expression <- expression("Real " ~ 'P'[psi] ~ "(bolditalic(s[j]), | DFE, D)")#
Expression2 <- expression(paste("Inferred P(",bolditalic(s[j])," | DFE, D)  Equation 5"))#
Expression3 <- expression(paste("P(",bolditalic(s[j])," | 1%, DFE, D)"))#
dev.off()#
#
DataTable = data.frame(#
  P_sj_given_DemHistory_Frequency = P_Allele_Is_2Ns_given_OnePercent[1:31],#
  P_sj = ProbsMouse[1:31]#
)#
#
value <- c()#
for (i in 1:IntervalNumber){#
    Multiplier <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    value <- c(value,Multiplier)#
}#
Multiplier <- paste(">",IntervalNumber*IntervalLength,sep="")#
value <- c(value,Multiplier)#
#
row.names(DataTable) <- value#
#
write.table(DataTable,file="../Results/Probabilities.txt",col.names=NA)
ProbsMouse
library(viridis)#
library(here)#
#
### P (allele is 2Ns = x | allele is at 1%)#
## This comes from running Results/#
args = commandArgs(trailingOnly=TRUE)#
print(args)#
#
###Example#
#
MaxLLParameters = "../Results/MaxLLEstimatesDFE.txt"#
print (MaxLLParameters)#
LLFile = read.table(MaxLLParameters)#
print (MaxLLParameters)#
Alpha = LLFile$V1#
Gamma = LLFile$V2#
P_allele_at_OnePercent = 3.08e-07#
AllelesWithSelectionCoefficientFile = "ExitOnePercentSValuesPopExpansionBoyko.txt"#
NumberOfChromosomesInMostAncestralEpoch = 10000#
NumberAllelesSimulatedInDemHistory = 2.025e+11#
IntervalLength <- as.double(5)#
IntervalNumber <- as.double(30)
P_Allele_Is_2Ns_given_OnePercent <- c()#
#
# P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,pgamma(0.5,Alpha,scale=Gamma))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*2.5,Alpha,scale=Gamma) - pgamma((i-1)*2.5,Alpha,scale=Gamma)#
    P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,Prob)#
}#
#
#### Number of alleles#
#
Alpha = 0.184#
Beta = 319.8626 * 10#
#
P_Allele_Is_2Ns <- c()#
NumberOfAllelesAt2Ns <- c()#
RealProbs <- c()#
# P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,pgamma(0.5,Alpha,scale=Beta))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*IntervalLength/2,Alpha,scale=Beta) - pgamma((i-1)*IntervalLength/2,Alpha,scale=Beta)#
    P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,Prob)#
    NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*((80000 + (100000/10000)*100)*2500*1000)) # Original Test#
    # NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*(1))#
}#
################################################### Two plots on same place #############################
#
ColorViridis <- viridis(2)#
ViridisColors <- viridis(2)#
#
SelectionCoefficientList <- read.table(AllelesWithSelectionCoefficientFile)#
#
MultipliedValues <- SelectionCoefficientList$V2*NumberOfChromosomesInMostAncestralEpoch#
#
FourNsValues <- MultipliedValues[(MultipliedValues < IntervalLength/2*IntervalNumber)]#
#
Check <- hist(FourNsValues,breaks=c(IntervalLength/2*0:IntervalNumber))#
Counts_At_OnePercent_Given2Ns <- Check$counts#
#
Probabilities_At_One_Percent_Given_2NsMouse= Counts_At_OnePercent_Given2Ns/ (NumberOfAllelesAt2Ns)#
###### The whole stuff#
#
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c("0-5","50-55","100-150","150-155","200-205",Label)#
#
pdf("../Results/DFEf_to_DFE.pdf",width=10,height = 3.5)#
par(mar=c(4.1,5.1,0.6,2.1))#
par(mfrow = c(1,1))#
#
FirstProbsMouse <- ProbsMouse#
#
###### The whole stuff#
if (sum(ProbsMouse) > 1.0){#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:30],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:30]))#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:20])#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / sum (ProbsMouse[1:IntervalNumber] )#
ProbsMouse <- c(ProbsMouse,0)#
#
}else {#
ProbsMouse <- c(ProbsMouse[1:IntervalNumber],1-sum(ProbsMouse[1:IntervalNumber]))#
}#
#
# ProbsMouse <- c(1 - sum(ProbsMouse[1:IntervalNumber]),1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber], 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c(Labels,Label)#
counts <- table(mtcars$vs, mtcars$gear)#
# counts <- rbind(counts,c(1,2,3))#
# counts <- rbind(counts,c(1,2,3))#
for (i in 4:(IntervalNumber+1)){#
    counts <- cbind(counts,c(ProbsMouse[i], P_Allele_Is_2Ns_given_OnePercent[i]))#
}#
# counts[1,1] <- P_Allele_Is_2Ns[1]#
# counts[1,2] <- P_Allele_Is_2Ns[2]#
# counts[1,3] <- P_Allele_Is_2Ns[3]#
counts[1,1] <- ProbsMouse[1]#
counts[1,2] <- ProbsMouse[2]#
counts[1,3] <- ProbsMouse[3]#
# counts[3,1] <- ProbsMouse[1]#
# counts[3,2] <- ProbsMouse[2]#
# counts[3,3] <- ProbsMouse[3]#
counts[2,1] <- P_Allele_Is_2Ns_given_OnePercent[1]#
counts[2,2] <- P_Allele_Is_2Ns_given_OnePercent[2]#
counts[2,3] <- P_Allele_Is_2Ns_given_OnePercent[3]#
#
# counts <- cbind(counts,c( 1 - sum(ProbsMouse[1:IntervalNumber]), 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber])))#
#
for ( i in 1:2){#
    for (j in 1:(IntervalNumber+1)){#
        if (counts[i,j] <= 1e-8){#
            counts[i,j] = 1e-8#
        }#
    }#
}#
# rownames(counts) <- c(expression("Real P("*bolditalic(s[j])*" | DFE, D)"), expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 4"),expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 5"), expression("P("*bolditalic(s[j])*" | 1%, DFE, D)"))#
#
Label <- paste(">","150",sep="")#
Labels <- c("0-5","50-55","100-105",Label)#
barplot(log10(counts)-log10(0.00000001), main="", ylab="Probability", xlab="4Ns", col=ViridisColors,#
legend = c(expression( expression("Inferred"  ~ 'P'[psi] * "(" * bolditalic(s[j]) * ")"), expression('P'[psi]* "("* bolditalic(s[j])*" | "* italic(f) * ", "* italic(D) *")"))), ylim = c(0, 8), beside=TRUE,cex.lab=2,cex.axis=2,cex.names=2, args.legend = list(x = "top",cex= 0.95), yaxt="n", xaxt = "n", space = c(0, 2))#
#
axis (2,at=c(0,2,4,6,8), labels = c("< 10^-8",10^-6,10^-4,10^-2,10^0), cex.axis = 0.8)#
#
axis(1, at=c(3.5, 53.5, 103.5, 153.5), labels=Labels,cex.lab=1,cex=1,cex.axis=1,col.ticks="red")#
#Expression <- expression("Real " ~ 'P'[psi] ~ "(bolditalic(s[j]), | DFE, D)")#
Expression2 <- expression(paste("Inferred P(",bolditalic(s[j])," | DFE, D)  Equation 5"))#
Expression3 <- expression(paste("P(",bolditalic(s[j])," | 1%, DFE, D)"))#
dev.off()#
#
DataTable = data.frame(#
  P_sj_given_DemHistory_Frequency = P_Allele_Is_2Ns_given_OnePercent[1:31],#
  P_sj = ProbsMouse[1:31]#
)#
#
value <- c()#
for (i in 1:IntervalNumber){#
    Multiplier <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    value <- c(value,Multiplier)#
}#
Multiplier <- paste(">",IntervalNumber*IntervalLength,sep="")#
value <- c(value,Multiplier)#
#
row.names(DataTable) <- value#
#
write.table(DataTable,file="../Results/Probabilities.txt",col.names=NA)
sum(DataTable)
library(viridis)#
library(here)#
#
### P (allele is 2Ns = x | allele is at 1%)#
## This comes from running Results/#
args = commandArgs(trailingOnly=TRUE)#
print(args)#
#
###Example#
#
MaxLLParameters = "../Results/MaxLLEstimatesDFE.txt"#
print (MaxLLParameters)#
LLFile = read.table(MaxLLParameters)#
print (MaxLLParameters)#
Alpha = LLFile$V1#
Gamma = LLFile$V2#
P_allele_at_OnePercent = 3.08e-07#
AllelesWithSelectionCoefficientFile = "ExitOnePercentSValuesPopExpansionBoyko.txt"#
NumberOfChromosomesInMostAncestralEpoch = 10000#
NumberAllelesSimulatedInDemHistory = 2.025e+11#
IntervalLength <- as.double(5)#
IntervalNumber <- as.double(30)
IntervalNumber <- as.double(50)
print ("Parameters read")#
print (Alpha)#
print (Gamma)#
print (P_allele_at_OnePercent)#
print (AllelesWithSelectionCoefficientFile)#
print (NumberOfChromosomesInMostAncestralEpoch)#
print (NumberAllelesSimulatedInDemHistory)#
print (IntervalLength)#
print (IntervalNumber)#
P_Allele_Is_2Ns_given_OnePercent <- c()#
#
# P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,pgamma(0.5,Alpha,scale=Gamma))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*2.5,Alpha,scale=Gamma) - pgamma((i-1)*2.5,Alpha,scale=Gamma)#
    P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,Prob)#
}#
#
#### Number of alleles#
#
Alpha = 0.184#
Beta = 319.8626 * 10#
#
P_Allele_Is_2Ns <- c()#
NumberOfAllelesAt2Ns <- c()#
RealProbs <- c()#
# P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,pgamma(0.5,Alpha,scale=Beta))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*IntervalLength/2,Alpha,scale=Beta) - pgamma((i-1)*IntervalLength/2,Alpha,scale=Beta)#
    P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,Prob)#
    NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*((80000 + (100000/10000)*100)*2500*1000)) # Original Test#
    # NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*(1))#
}#
################################################### Two plots on same place #############################
#
ColorViridis <- viridis(2)#
ViridisColors <- viridis(2)#
#
SelectionCoefficientList <- read.table(AllelesWithSelectionCoefficientFile)#
#
MultipliedValues <- SelectionCoefficientList$V2*NumberOfChromosomesInMostAncestralEpoch#
#
FourNsValues <- MultipliedValues[(MultipliedValues < IntervalLength/2*IntervalNumber)]#
#
Check <- hist(FourNsValues,breaks=c(IntervalLength/2*0:IntervalNumber))#
Counts_At_OnePercent_Given2Ns <- Check$counts#
#
Probabilities_At_One_Percent_Given_2NsMouse= Counts_At_OnePercent_Given2Ns/ (NumberOfAllelesAt2Ns)#
###### The whole stuff#
#
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c("0-5","50-55","100-150","150-155","200-205",Label)#
#
pdf("../Results/DFEf_to_DFE.pdf",width=10,height = 3.5)#
par(mar=c(4.1,5.1,0.6,2.1))#
par(mfrow = c(1,1))#
#
FirstProbsMouse <- ProbsMouse#
#
###### The whole stuff#
if (sum(ProbsMouse) > 1.0){#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:30],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:30]))#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:20])#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / sum (ProbsMouse[1:IntervalNumber] )#
ProbsMouse <- c(ProbsMouse,0)#
#
}else {#
ProbsMouse <- c(ProbsMouse[1:IntervalNumber],1-sum(ProbsMouse[1:IntervalNumber]))#
}#
#
# ProbsMouse <- c(1 - sum(ProbsMouse[1:IntervalNumber]),1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber], 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c(Labels,Label)#
counts <- table(mtcars$vs, mtcars$gear)#
# counts <- rbind(counts,c(1,2,3))#
# counts <- rbind(counts,c(1,2,3))#
for (i in 4:(IntervalNumber+1)){#
    counts <- cbind(counts,c(ProbsMouse[i], P_Allele_Is_2Ns_given_OnePercent[i]))#
}#
# counts[1,1] <- P_Allele_Is_2Ns[1]#
# counts[1,2] <- P_Allele_Is_2Ns[2]#
# counts[1,3] <- P_Allele_Is_2Ns[3]#
counts[1,1] <- ProbsMouse[1]#
counts[1,2] <- ProbsMouse[2]#
counts[1,3] <- ProbsMouse[3]#
# counts[3,1] <- ProbsMouse[1]#
# counts[3,2] <- ProbsMouse[2]#
# counts[3,3] <- ProbsMouse[3]#
counts[2,1] <- P_Allele_Is_2Ns_given_OnePercent[1]#
counts[2,2] <- P_Allele_Is_2Ns_given_OnePercent[2]#
counts[2,3] <- P_Allele_Is_2Ns_given_OnePercent[3]#
#
# counts <- cbind(counts,c( 1 - sum(ProbsMouse[1:IntervalNumber]), 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber])))#
#
for ( i in 1:2){#
    for (j in 1:(IntervalNumber+1)){#
        if (counts[i,j] <= 1e-8){#
            counts[i,j] = 1e-8#
        }#
    }#
}#
# rownames(counts) <- c(expression("Real P("*bolditalic(s[j])*" | DFE, D)"), expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 4"),expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 5"), expression("P("*bolditalic(s[j])*" | 1%, DFE, D)"))#
#
Label <- paste(">","150",sep="")#
Labels <- c("0-5","50-55","100-105",Label)#
barplot(log10(counts)-log10(0.00000001), main="", ylab="Probability", xlab="4Ns", col=ViridisColors,#
legend = c(expression( expression("Inferred"  ~ 'P'[psi] * "(" * bolditalic(s[j]) * ")"), expression('P'[psi]* "("* bolditalic(s[j])*" | "* italic(f) * ", "* italic(D) *")"))), ylim = c(0, 8), beside=TRUE,cex.lab=2,cex.axis=2,cex.names=2, args.legend = list(x = "top",cex= 0.95), yaxt="n", xaxt = "n", space = c(0, 2))#
#
axis (2,at=c(0,2,4,6,8), labels = c("< 10^-8",10^-6,10^-4,10^-2,10^0), cex.axis = 0.8)#
#
axis(1, at=c(3.5, 53.5, 103.5, 153.5), labels=Labels,cex.lab=1,cex=1,cex.axis=1,col.ticks="red")#
#Expression <- expression("Real " ~ 'P'[psi] ~ "(bolditalic(s[j]), | DFE, D)")#
Expression2 <- expression(paste("Inferred P(",bolditalic(s[j])," | DFE, D)  Equation 5"))#
Expression3 <- expression(paste("P(",bolditalic(s[j])," | 1%, DFE, D)"))#
dev.off()#
#
DataTable = data.frame(#
  P_sj_given_DemHistory_Frequency = P_Allele_Is_2Ns_given_OnePercent[1:(IntervalNumber+1)],#
  P_sj = ProbsMouse[1:(IntervalNumber+1)]#
)#
#
value <- c()#
for (i in 1:IntervalNumber){#
    Multiplier <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    value <- c(value,Multiplier)#
}#
Multiplier <- paste(">",IntervalNumber*IntervalLength,sep="")#
value <- c(value,Multiplier)#
#
row.names(DataTable) <- value#
#
write.table(DataTable,file="../Results/Probabilities.txt",col.names=NA)
counts
P_Allele_Is_2Ns_given_OnePercent
ProbsMouse
FirstProbsMouse
Probabilities_At_One_Percent_Given_2NsMouse
Probabilities_At_One_Percent_Given_2NsMouse == Inf
Probabilities_At_One_Percent_Given_2NsMouse == 'Inf'
is.finite(Probabilities_At_One_Percent_Given_2NsMouse )
is.infinite(Probabilities_At_One_Percent_Given_2NsMouse )
Probabilities_At_One_Percent_Given_2NsMouse
is.infinite(ProbsMouse )
ProbsMouse
is.Nan(ProbsMouse )
is.na(ProbsMouse)
library(viridis)#
library(here)#
#
### P (allele is 2Ns = x | allele is at 1%)#
## This comes from running Results/#
args = commandArgs(trailingOnly=TRUE)#
print(args)#
#
###Example#
#
MaxLLParameters = "../Results/MaxLLEstimatesDFE.txt"#
print (MaxLLParameters)#
LLFile = read.table(MaxLLParameters)#
print (MaxLLParameters)#
Alpha = LLFile$V1#
Gamma = LLFile$V2#
P_allele_at_OnePercent = 3.08e-07#
AllelesWithSelectionCoefficientFile = "ExitOnePercentSValuesPopExpansionBoyko.txt"#
NumberOfChromosomesInMostAncestralEpoch = 10000#
NumberAllelesSimulatedInDemHistory = 2.025e+11#
IntervalLength <- as.double(5)#
IntervalNumber <- as.double(30)
P_Allele_Is_2Ns_given_OnePercent <- c()#
#
# P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,pgamma(0.5,Alpha,scale=Gamma))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*2.5,Alpha,scale=Gamma) - pgamma((i-1)*2.5,Alpha,scale=Gamma)#
    P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,Prob)#
}#
#
#### Number of alleles#
#
Alpha = 0.184#
Beta = 319.8626 * 10#
#
P_Allele_Is_2Ns <- c()#
NumberOfAllelesAt2Ns <- c()#
RealProbs <- c()#
# P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,pgamma(0.5,Alpha,scale=Beta))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*IntervalLength/2,Alpha,scale=Beta) - pgamma((i-1)*IntervalLength/2,Alpha,scale=Beta)#
    P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,Prob)#
    NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*((80000 + (100000/10000)*100)*2500*1000)) # Original Test#
    # NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*(1))#
}#
################################################### Two plots on same place #############################
#
ColorViridis <- viridis(2)#
ViridisColors <- viridis(2)#
#
SelectionCoefficientList <- read.table(AllelesWithSelectionCoefficientFile)#
#
MultipliedValues <- SelectionCoefficientList$V2*NumberOfChromosomesInMostAncestralEpoch#
#
FourNsValues <- MultipliedValues[(MultipliedValues < IntervalLength/2*IntervalNumber)]#
#
Check <- hist(FourNsValues,breaks=c(IntervalLength/2*0:IntervalNumber))#
Counts_At_OnePercent_Given2Ns <- Check$counts#
#
Probabilities_At_One_Percent_Given_2NsMouse= Counts_At_OnePercent_Given2Ns/ (NumberOfAllelesAt2Ns)#
###### The whole stuff#
#
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]#
#
for (i in 1:length(ProbsMouse)){#
    if (is.na(ProbsMouse[i])){#
        ProbsMouse = 0.0#
    }#
}#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c("0-5","50-55","100-150","150-155","200-205",Label)#
#
pdf("../Results/DFEf_to_DFE.pdf",width=10,height = 3.5)#
par(mar=c(4.1,5.1,0.6,2.1))#
par(mfrow = c(1,1))#
#
FirstProbsMouse <- ProbsMouse#
#
###### The whole stuff#
if (sum(ProbsMouse) > 1.0){#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:30],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:30]))#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:20])#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / sum (ProbsMouse[1:IntervalNumber] )#
ProbsMouse <- c(ProbsMouse,0)#
#
}else {#
ProbsMouse <- c(ProbsMouse[1:IntervalNumber],1-sum(ProbsMouse[1:IntervalNumber]))#
}#
#
# ProbsMouse <- c(1 - sum(ProbsMouse[1:IntervalNumber]),1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber], 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c(Labels,Label)#
counts <- table(mtcars$vs, mtcars$gear)#
# counts <- rbind(counts,c(1,2,3))#
# counts <- rbind(counts,c(1,2,3))#
for (i in 4:(IntervalNumber+1)){#
    counts <- cbind(counts,c(ProbsMouse[i], P_Allele_Is_2Ns_given_OnePercent[i]))#
}#
# counts[1,1] <- P_Allele_Is_2Ns[1]#
# counts[1,2] <- P_Allele_Is_2Ns[2]#
# counts[1,3] <- P_Allele_Is_2Ns[3]#
counts[1,1] <- ProbsMouse[1]#
counts[1,2] <- ProbsMouse[2]#
counts[1,3] <- ProbsMouse[3]#
# counts[3,1] <- ProbsMouse[1]#
# counts[3,2] <- ProbsMouse[2]#
# counts[3,3] <- ProbsMouse[3]#
counts[2,1] <- P_Allele_Is_2Ns_given_OnePercent[1]#
counts[2,2] <- P_Allele_Is_2Ns_given_OnePercent[2]#
counts[2,3] <- P_Allele_Is_2Ns_given_OnePercent[3]#
#
# counts <- cbind(counts,c( 1 - sum(ProbsMouse[1:IntervalNumber]), 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber])))#
#
for ( i in 1:2){#
    for (j in 1:(IntervalNumber+1)){#
        if (counts[i,j] <= 1e-8){#
            counts[i,j] = 1e-8#
        }#
    }#
}#
# rownames(counts) <- c(expression("Real P("*bolditalic(s[j])*" | DFE, D)"), expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 4"),expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 5"), expression("P("*bolditalic(s[j])*" | 1%, DFE, D)"))#
#
Label <- paste(">","150",sep="")#
Labels <- c("0-5","50-55","100-105",Label)#
barplot(log10(counts)-log10(0.00000001), main="", ylab="Probability", xlab="4Ns", col=ViridisColors,#
legend = c(expression( expression("Inferred"  ~ 'P'[psi] * "(" * bolditalic(s[j]) * ")"), expression('P'[psi]* "("* bolditalic(s[j])*" | "* italic(f) * ", "* italic(D) *")"))), ylim = c(0, 8), beside=TRUE,cex.lab=2,cex.axis=2,cex.names=2, args.legend = list(x = "top",cex= 0.95), yaxt="n", xaxt = "n", space = c(0, 2))#
#
axis (2,at=c(0,2,4,6,8), labels = c("< 10^-8",10^-6,10^-4,10^-2,10^0), cex.axis = 0.8)#
#
axis(1, at=c(3.5, 53.5, 103.5, 153.5), labels=Labels,cex.lab=1,cex=1,cex.axis=1,col.ticks="red")#
#Expression <- expression("Real " ~ 'P'[psi] ~ "(bolditalic(s[j]), | DFE, D)")#
Expression2 <- expression(paste("Inferred P(",bolditalic(s[j])," | DFE, D)  Equation 5"))#
Expression3 <- expression(paste("P(",bolditalic(s[j])," | 1%, DFE, D)"))#
dev.off()#
#
DataTable = data.frame(#
  P_sj_given_DemHistory_Frequency = P_Allele_Is_2Ns_given_OnePercent[1:(IntervalNumber+1)],#
  P_sj = ProbsMouse[1:(IntervalNumber+1)]#
)#
#
value <- c()#
for (i in 1:IntervalNumber){#
    Multiplier <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    value <- c(value,Multiplier)#
}#
Multiplier <- paste(">",IntervalNumber*IntervalLength,sep="")#
value <- c(value,Multiplier)#
#
row.names(DataTable) <- value#
#
write.table(DataTable,file="../Results/Probabilities.txt",col.names=NA)
IntervalNumber <- 50
P_Allele_Is_2Ns_given_OnePercent <- c()#
#
# P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,pgamma(0.5,Alpha,scale=Gamma))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*2.5,Alpha,scale=Gamma) - pgamma((i-1)*2.5,Alpha,scale=Gamma)#
    P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,Prob)#
}#
#
#### Number of alleles#
#
Alpha = 0.184#
Beta = 319.8626 * 10#
#
P_Allele_Is_2Ns <- c()#
NumberOfAllelesAt2Ns <- c()#
RealProbs <- c()#
# P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,pgamma(0.5,Alpha,scale=Beta))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*IntervalLength/2,Alpha,scale=Beta) - pgamma((i-1)*IntervalLength/2,Alpha,scale=Beta)#
    P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,Prob)#
    NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*((80000 + (100000/10000)*100)*2500*1000)) # Original Test#
    # NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*(1))#
}#
################################################### Two plots on same place #############################
#
ColorViridis <- viridis(2)#
ViridisColors <- viridis(2)#
#
SelectionCoefficientList <- read.table(AllelesWithSelectionCoefficientFile)#
#
MultipliedValues <- SelectionCoefficientList$V2*NumberOfChromosomesInMostAncestralEpoch#
#
FourNsValues <- MultipliedValues[(MultipliedValues < IntervalLength/2*IntervalNumber)]#
#
Check <- hist(FourNsValues,breaks=c(IntervalLength/2*0:IntervalNumber))#
Counts_At_OnePercent_Given2Ns <- Check$counts#
#
Probabilities_At_One_Percent_Given_2NsMouse= Counts_At_OnePercent_Given2Ns/ (NumberOfAllelesAt2Ns)#
###### The whole stuff#
#
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]#
#
for (i in 1:length(ProbsMouse)){#
    if (is.na(ProbsMouse[i])){#
        ProbsMouse = 0.0#
    }#
}#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c("0-5","50-55","100-150","150-155","200-205",Label)#
#
pdf("../Results/DFEf_to_DFE.pdf",width=10,height = 3.5)#
par(mar=c(4.1,5.1,0.6,2.1))#
par(mfrow = c(1,1))#
#
FirstProbsMouse <- ProbsMouse#
#
###### The whole stuff#
if (sum(ProbsMouse) > 1.0){#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:30],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:30]))#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:20])#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / sum (ProbsMouse[1:IntervalNumber] )#
ProbsMouse <- c(ProbsMouse,0)#
#
}else {#
ProbsMouse <- c(ProbsMouse[1:IntervalNumber],1-sum(ProbsMouse[1:IntervalNumber]))#
}#
#
# ProbsMouse <- c(1 - sum(ProbsMouse[1:IntervalNumber]),1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber], 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c(Labels,Label)#
counts <- table(mtcars$vs, mtcars$gear)#
# counts <- rbind(counts,c(1,2,3))#
# counts <- rbind(counts,c(1,2,3))#
for (i in 4:(IntervalNumber+1)){#
    counts <- cbind(counts,c(ProbsMouse[i], P_Allele_Is_2Ns_given_OnePercent[i]))#
}#
# counts[1,1] <- P_Allele_Is_2Ns[1]#
# counts[1,2] <- P_Allele_Is_2Ns[2]#
# counts[1,3] <- P_Allele_Is_2Ns[3]#
counts[1,1] <- ProbsMouse[1]#
counts[1,2] <- ProbsMouse[2]#
counts[1,3] <- ProbsMouse[3]#
# counts[3,1] <- ProbsMouse[1]#
# counts[3,2] <- ProbsMouse[2]#
# counts[3,3] <- ProbsMouse[3]#
counts[2,1] <- P_Allele_Is_2Ns_given_OnePercent[1]#
counts[2,2] <- P_Allele_Is_2Ns_given_OnePercent[2]#
counts[2,3] <- P_Allele_Is_2Ns_given_OnePercent[3]#
#
# counts <- cbind(counts,c( 1 - sum(ProbsMouse[1:IntervalNumber]), 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber])))#
#
for ( i in 1:2){#
    for (j in 1:(IntervalNumber+1)){#
        if (counts[i,j] <= 1e-8){#
            counts[i,j] = 1e-8#
        }#
    }#
}#
# rownames(counts) <- c(expression("Real P("*bolditalic(s[j])*" | DFE, D)"), expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 4"),expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 5"), expression("P("*bolditalic(s[j])*" | 1%, DFE, D)"))#
#
Label <- paste(">","150",sep="")#
Labels <- c("0-5","50-55","100-105",Label)#
barplot(log10(counts)-log10(0.00000001), main="", ylab="Probability", xlab="4Ns", col=ViridisColors,#
legend = c(expression( expression("Inferred"  ~ 'P'[psi] * "(" * bolditalic(s[j]) * ")"), expression('P'[psi]* "("* bolditalic(s[j])*" | "* italic(f) * ", "* italic(D) *")"))), ylim = c(0, 8), beside=TRUE,cex.lab=2,cex.axis=2,cex.names=2, args.legend = list(x = "top",cex= 0.95), yaxt="n", xaxt = "n", space = c(0, 2))#
#
axis (2,at=c(0,2,4,6,8), labels = c("< 10^-8",10^-6,10^-4,10^-2,10^0), cex.axis = 0.8)#
#
axis(1, at=c(3.5, 53.5, 103.5, 153.5), labels=Labels,cex.lab=1,cex=1,cex.axis=1,col.ticks="red")#
#Expression <- expression("Real " ~ 'P'[psi] ~ "(bolditalic(s[j]), | DFE, D)")#
Expression2 <- expression(paste("Inferred P(",bolditalic(s[j])," | DFE, D)  Equation 5"))#
Expression3 <- expression(paste("P(",bolditalic(s[j])," | 1%, DFE, D)"))#
dev.off()#
#
DataTable = data.frame(#
  P_sj_given_DemHistory_Frequency = P_Allele_Is_2Ns_given_OnePercent[1:(IntervalNumber+1)],#
  P_sj = ProbsMouse[1:(IntervalNumber+1)]#
)#
#
value <- c()#
for (i in 1:IntervalNumber){#
    Multiplier <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    value <- c(value,Multiplier)#
}#
Multiplier <- paste(">",IntervalNumber*IntervalLength,sep="")#
value <- c(value,Multiplier)#
#
row.names(DataTable) <- value#
#
write.table(DataTable,file="../Results/Probabilities.txt",col.names=NA)
counts
ProbsMouse
?is.na
is.na(ProbsMouse)
ProbsMouse
for (i in 1:length(ProbsMouse)){#
    if (is.na(ProbsMouse[i])){#
        ProbsMouse = 0.0#
    }#
}
ProbsMouse
library(viridis)#
library(here)#
#
### P (allele is 2Ns = x | allele is at 1%)#
## This comes from running Results/#
args = commandArgs(trailingOnly=TRUE)#
print(args)#
#
###Example#
#
MaxLLParameters = "../Results/MaxLLEstimatesDFE.txt"#
print (MaxLLParameters)#
LLFile = read.table(MaxLLParameters)#
print (MaxLLParameters)#
Alpha = LLFile$V1#
Gamma = LLFile$V2#
P_allele_at_OnePercent = 3.08e-07#
AllelesWithSelectionCoefficientFile = "ExitOnePercentSValuesPopExpansionBoyko.txt"#
NumberOfChromosomesInMostAncestralEpoch = 10000#
NumberAllelesSimulatedInDemHistory = 2.025e+11#
IntervalLength <- as.double(5)#
IntervalNumber <- as.double(50)
print ("Parameters read")#
print (Alpha)#
print (Gamma)#
print (P_allele_at_OnePercent)#
print (AllelesWithSelectionCoefficientFile)#
print (NumberOfChromosomesInMostAncestralEpoch)#
print (NumberAllelesSimulatedInDemHistory)#
print (IntervalLength)#
print (IntervalNumber)#
P_Allele_Is_2Ns_given_OnePercent <- c()#
#
# P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,pgamma(0.5,Alpha,scale=Gamma))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*2.5,Alpha,scale=Gamma) - pgamma((i-1)*2.5,Alpha,scale=Gamma)#
    P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,Prob)#
}#
#
#### Number of alleles#
#
Alpha = 0.184#
Beta = 319.8626 * 10#
#
P_Allele_Is_2Ns <- c()#
NumberOfAllelesAt2Ns <- c()#
RealProbs <- c()#
# P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,pgamma(0.5,Alpha,scale=Beta))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*IntervalLength/2,Alpha,scale=Beta) - pgamma((i-1)*IntervalLength/2,Alpha,scale=Beta)#
    P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,Prob)#
    NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*((80000 + (100000/10000)*100)*2500*1000)) # Original Test#
    # NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*(1))#
}#
################################################### Two plots on same place #############################
#
ColorViridis <- viridis(2)#
ViridisColors <- viridis(2)#
#
SelectionCoefficientList <- read.table(AllelesWithSelectionCoefficientFile)#
#
MultipliedValues <- SelectionCoefficientList$V2*NumberOfChromosomesInMostAncestralEpoch#
#
FourNsValues <- MultipliedValues[(MultipliedValues < IntervalLength/2*IntervalNumber)]#
#
Check <- hist(FourNsValues,breaks=c(IntervalLength/2*0:IntervalNumber))#
Counts_At_OnePercent_Given2Ns <- Check$counts#
#
Probabilities_At_One_Percent_Given_2NsMouse= Counts_At_OnePercent_Given2Ns/ (NumberOfAllelesAt2Ns)#
###### The whole stuff#
#
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]#
#
for (i in 1:length(ProbsMouse)){#
    if (is.na(ProbsMouse[i])){#
        ProbsMouse[i] = 0.0#
    }#
}#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c("0-5","50-55","100-150","150-155","200-205",Label)#
#
pdf("../Results/DFEf_to_DFE.pdf",width=10,height = 3.5)#
par(mar=c(4.1,5.1,0.6,2.1))#
par(mfrow = c(1,1))#
#
FirstProbsMouse <- ProbsMouse#
#
###### The whole stuff#
if (sum(ProbsMouse) > 1.0){#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:30],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:30]))#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:20])#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / sum (ProbsMouse[1:IntervalNumber] )#
ProbsMouse <- c(ProbsMouse,0)#
#
}else {#
ProbsMouse <- c(ProbsMouse[1:IntervalNumber],1-sum(ProbsMouse[1:IntervalNumber]))#
}#
#
# ProbsMouse <- c(1 - sum(ProbsMouse[1:IntervalNumber]),1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber], 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c(Labels,Label)#
counts <- table(mtcars$vs, mtcars$gear)#
# counts <- rbind(counts,c(1,2,3))#
# counts <- rbind(counts,c(1,2,3))#
for (i in 4:(IntervalNumber+1)){#
    counts <- cbind(counts,c(ProbsMouse[i], P_Allele_Is_2Ns_given_OnePercent[i]))#
}#
# counts[1,1] <- P_Allele_Is_2Ns[1]#
# counts[1,2] <- P_Allele_Is_2Ns[2]#
# counts[1,3] <- P_Allele_Is_2Ns[3]#
counts[1,1] <- ProbsMouse[1]#
counts[1,2] <- ProbsMouse[2]#
counts[1,3] <- ProbsMouse[3]#
# counts[3,1] <- ProbsMouse[1]#
# counts[3,2] <- ProbsMouse[2]#
# counts[3,3] <- ProbsMouse[3]#
counts[2,1] <- P_Allele_Is_2Ns_given_OnePercent[1]#
counts[2,2] <- P_Allele_Is_2Ns_given_OnePercent[2]#
counts[2,3] <- P_Allele_Is_2Ns_given_OnePercent[3]#
#
# counts <- cbind(counts,c( 1 - sum(ProbsMouse[1:IntervalNumber]), 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber])))#
#
for ( i in 1:2){#
    for (j in 1:(IntervalNumber+1)){#
        if (counts[i,j] <= 1e-8){#
            counts[i,j] = 1e-8#
        }#
    }#
}#
# rownames(counts) <- c(expression("Real P("*bolditalic(s[j])*" | DFE, D)"), expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 4"),expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 5"), expression("P("*bolditalic(s[j])*" | 1%, DFE, D)"))#
#
Label <- paste(">","150",sep="")#
Labels <- c("0-5","50-55","100-105",Label)#
barplot(log10(counts)-log10(0.00000001), main="", ylab="Probability", xlab="4Ns", col=ViridisColors,#
legend = c(expression( expression("Inferred"  ~ 'P'[psi] * "(" * bolditalic(s[j]) * ")"), expression('P'[psi]* "("* bolditalic(s[j])*" | "* italic(f) * ", "* italic(D) *")"))), ylim = c(0, 8), beside=TRUE,cex.lab=2,cex.axis=2,cex.names=2, args.legend = list(x = "top",cex= 0.95), yaxt="n", xaxt = "n", space = c(0, 2))#
#
axis (2,at=c(0,2,4,6,8), labels = c("< 10^-8",10^-6,10^-4,10^-2,10^0), cex.axis = 0.8)#
#
axis(1, at=c(3.5, 53.5, 103.5, 153.5), labels=Labels,cex.lab=1,cex=1,cex.axis=1,col.ticks="red")#
#Expression <- expression("Real " ~ 'P'[psi] ~ "(bolditalic(s[j]), | DFE, D)")#
Expression2 <- expression(paste("Inferred P(",bolditalic(s[j])," | DFE, D)  Equation 5"))#
Expression3 <- expression(paste("P(",bolditalic(s[j])," | 1%, DFE, D)"))#
dev.off()#
#
DataTable = data.frame(#
  P_sj_given_DemHistory_Frequency = P_Allele_Is_2Ns_given_OnePercent[1:(IntervalNumber+1)],#
  P_sj = ProbsMouse[1:(IntervalNumber+1)]#
)#
#
value <- c()#
for (i in 1:IntervalNumber){#
    Multiplier <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    value <- c(value,Multiplier)#
}#
Multiplier <- paste(">",IntervalNumber*IntervalLength,sep="")#
value <- c(value,Multiplier)#
#
row.names(DataTable) <- value#
#
write.table(DataTable,file="../Results/Probabilities.txt",col.names=NA)
library(viridis)#
library(here)#
#
### P (allele is 2Ns = x | allele is at 1%)#
## This comes from running Results/#
args = commandArgs(trailingOnly=TRUE)#
print(args)#
#
###Example#
#
MaxLLParameters = "../Results/MaxLLEstimatesDFE.txt"#
print (MaxLLParameters)#
LLFile = read.table(MaxLLParameters)#
print (MaxLLParameters)#
Alpha = LLFile$V1#
Gamma = LLFile$V2#
P_allele_at_OnePercent = 3.08e-07#
AllelesWithSelectionCoefficientFile = "ExitOnePercentSValuesPopExpansionBoyko.txt"#
NumberOfChromosomesInMostAncestralEpoch = 10000#
NumberAllelesSimulatedInDemHistory = 2.025e+11#
IntervalLength <- as.double(5)#
IntervalNumber <- as.double(30)
IntervalNumber <- as.double(50)
print ("Parameters read")#
print (Alpha)#
print (Gamma)#
print (P_allele_at_OnePercent)#
print (AllelesWithSelectionCoefficientFile)#
print (NumberOfChromosomesInMostAncestralEpoch)#
print (NumberAllelesSimulatedInDemHistory)#
print (IntervalLength)#
print (IntervalNumber)#
P_Allele_Is_2Ns_given_OnePercent <- c()#
#
# P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,pgamma(0.5,Alpha,scale=Gamma))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*2.5,Alpha,scale=Gamma) - pgamma((i-1)*2.5,Alpha,scale=Gamma)#
    P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,Prob)#
}#
#
#### Number of alleles#
#
Alpha = 0.184#
Beta = 319.8626 * 10#
#
P_Allele_Is_2Ns <- c()#
NumberOfAllelesAt2Ns <- c()#
RealProbs <- c()#
# P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,pgamma(0.5,Alpha,scale=Beta))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*IntervalLength/2,Alpha,scale=Beta) - pgamma((i-1)*IntervalLength/2,Alpha,scale=Beta)#
    P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,Prob)#
    NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*((80000 + (100000/10000)*100)*2500*1000)) # Original Test#
    # NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*(1))#
}#
################################################### Two plots on same place #############################
#
ColorViridis <- viridis(2)#
ViridisColors <- viridis(2)#
#
SelectionCoefficientList <- read.table(AllelesWithSelectionCoefficientFile)#
#
MultipliedValues <- SelectionCoefficientList$V2*NumberOfChromosomesInMostAncestralEpoch#
#
FourNsValues <- MultipliedValues[(MultipliedValues < IntervalLength/2*IntervalNumber)]#
#
Check <- hist(FourNsValues,breaks=c(IntervalLength/2*0:IntervalNumber))#
Counts_At_OnePercent_Given2Ns <- Check$counts#
#
Probabilities_At_One_Percent_Given_2NsMouse= Counts_At_OnePercent_Given2Ns/ (NumberOfAllelesAt2Ns)#
###### The whole stuff#
#
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]#
#
for (i in 1:length(ProbsMouse)){#
    if (is.na(ProbsMouse[i]) == FALSE){#
        ProbsMouse[i] = 0.0#
    }#
}#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c("0-5","50-55","100-150","150-155","200-205",Label)#
#
pdf("../Results/DFEf_to_DFE.pdf",width=10,height = 3.5)#
par(mar=c(4.1,5.1,0.6,2.1))#
par(mfrow = c(1,1))#
#
FirstProbsMouse <- ProbsMouse#
#
###### The whole stuff#
if (sum(ProbsMouse) > 1.0){#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:30],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:30]))#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:20])#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / sum (ProbsMouse[1:IntervalNumber] )#
ProbsMouse <- c(ProbsMouse,0)#
#
}else {#
ProbsMouse <- c(ProbsMouse[1:IntervalNumber],1-sum(ProbsMouse[1:IntervalNumber]))#
}#
#
# ProbsMouse <- c(1 - sum(ProbsMouse[1:IntervalNumber]),1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber], 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c(Labels,Label)#
counts <- table(mtcars$vs, mtcars$gear)#
# counts <- rbind(counts,c(1,2,3))#
# counts <- rbind(counts,c(1,2,3))#
for (i in 4:(IntervalNumber+1)){#
    counts <- cbind(counts,c(ProbsMouse[i], P_Allele_Is_2Ns_given_OnePercent[i]))#
}#
# counts[1,1] <- P_Allele_Is_2Ns[1]#
# counts[1,2] <- P_Allele_Is_2Ns[2]#
# counts[1,3] <- P_Allele_Is_2Ns[3]#
counts[1,1] <- ProbsMouse[1]#
counts[1,2] <- ProbsMouse[2]#
counts[1,3] <- ProbsMouse[3]#
# counts[3,1] <- ProbsMouse[1]#
# counts[3,2] <- ProbsMouse[2]#
# counts[3,3] <- ProbsMouse[3]#
counts[2,1] <- P_Allele_Is_2Ns_given_OnePercent[1]#
counts[2,2] <- P_Allele_Is_2Ns_given_OnePercent[2]#
counts[2,3] <- P_Allele_Is_2Ns_given_OnePercent[3]#
#
# counts <- cbind(counts,c( 1 - sum(ProbsMouse[1:IntervalNumber]), 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber])))#
#
for ( i in 1:2){#
    for (j in 1:(IntervalNumber+1)){#
        if (counts[i,j] <= 1e-8){#
            counts[i,j] = 1e-8#
        }#
    }#
}#
# rownames(counts) <- c(expression("Real P("*bolditalic(s[j])*" | DFE, D)"), expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 4"),expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 5"), expression("P("*bolditalic(s[j])*" | 1%, DFE, D)"))#
#
Label <- paste(">","150",sep="")#
Labels <- c("0-5","50-55","100-105",Label)#
barplot(log10(counts)-log10(0.00000001), main="", ylab="Probability", xlab="4Ns", col=ViridisColors,#
legend = c(expression( expression("Inferred"  ~ 'P'[psi] * "(" * bolditalic(s[j]) * ")"), expression('P'[psi]* "("* bolditalic(s[j])*" | "* italic(f) * ", "* italic(D) *")"))), ylim = c(0, 8), beside=TRUE,cex.lab=2,cex.axis=2,cex.names=2, args.legend = list(x = "top",cex= 0.95), yaxt="n", xaxt = "n", space = c(0, 2))#
#
axis (2,at=c(0,2,4,6,8), labels = c("< 10^-8",10^-6,10^-4,10^-2,10^0), cex.axis = 0.8)#
#
axis(1, at=c(3.5, 53.5, 103.5, 153.5), labels=Labels,cex.lab=1,cex=1,cex.axis=1,col.ticks="red")#
#Expression <- expression("Real " ~ 'P'[psi] ~ "(bolditalic(s[j]), | DFE, D)")#
Expression2 <- expression(paste("Inferred P(",bolditalic(s[j])," | DFE, D)  Equation 5"))#
Expression3 <- expression(paste("P(",bolditalic(s[j])," | 1%, DFE, D)"))#
dev.off()#
#
DataTable = data.frame(#
  P_sj_given_DemHistory_Frequency = P_Allele_Is_2Ns_given_OnePercent[1:(IntervalNumber+1)],#
  P_sj = ProbsMouse[1:(IntervalNumber+1)]#
)#
#
value <- c()#
for (i in 1:IntervalNumber){#
    Multiplier <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    value <- c(value,Multiplier)#
}#
Multiplier <- paste(">",IntervalNumber*IntervalLength,sep="")#
value <- c(value,Multiplier)#
#
row.names(DataTable) <- value#
#
write.table(DataTable,file="../Results/Probabilities.txt",col.names=NA)
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]#
#
for (i in 1:length(ProbsMouse)){#
    if (is.na(ProbsMouse[i]) == FALSE){#
        ProbsMouse[i] = 0.0#
    }#
}
ProbsMouse
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]
ProbsMouse
is.na(ProbsMouse)
is.infinite(ProbsMouse)
library(viridis)#
library(here)#
#
### P (allele is 2Ns = x | allele is at 1%)#
## This comes from running Results/#
args = commandArgs(trailingOnly=TRUE)#
print(args)#
#
###Example#
#
MaxLLParameters = "../Results/MaxLLEstimatesDFE.txt"#
print (MaxLLParameters)#
LLFile = read.table(MaxLLParameters)#
print (MaxLLParameters)#
Alpha = LLFile$V1#
Gamma = LLFile$V2#
P_allele_at_OnePercent = 3.08e-07#
AllelesWithSelectionCoefficientFile = "ExitOnePercentSValuesPopExpansionBoyko.txt"#
NumberOfChromosomesInMostAncestralEpoch = 10000#
NumberAllelesSimulatedInDemHistory = 2.025e+11#
IntervalLength <- as.double(5)#
IntervalNumber <- as.double(30)
IntervalNumber <- as.double(50)
print ("Parameters read")#
print (Alpha)#
print (Gamma)#
print (P_allele_at_OnePercent)#
print (AllelesWithSelectionCoefficientFile)#
print (NumberOfChromosomesInMostAncestralEpoch)#
print (NumberAllelesSimulatedInDemHistory)#
print (IntervalLength)#
print (IntervalNumber)#
P_Allele_Is_2Ns_given_OnePercent <- c()#
#
# P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,pgamma(0.5,Alpha,scale=Gamma))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*2.5,Alpha,scale=Gamma) - pgamma((i-1)*2.5,Alpha,scale=Gamma)#
    P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,Prob)#
}#
#
#### Number of alleles#
#
Alpha = 0.184#
Beta = 319.8626 * 10#
#
P_Allele_Is_2Ns <- c()#
NumberOfAllelesAt2Ns <- c()#
RealProbs <- c()#
# P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,pgamma(0.5,Alpha,scale=Beta))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*IntervalLength/2,Alpha,scale=Beta) - pgamma((i-1)*IntervalLength/2,Alpha,scale=Beta)#
    P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,Prob)#
    NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*((80000 + (100000/10000)*100)*2500*1000)) # Original Test#
    # NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*(1))#
}#
################################################### Two plots on same place #############################
#
ColorViridis <- viridis(2)#
ViridisColors <- viridis(2)#
#
SelectionCoefficientList <- read.table(AllelesWithSelectionCoefficientFile)#
#
MultipliedValues <- SelectionCoefficientList$V2*NumberOfChromosomesInMostAncestralEpoch#
#
FourNsValues <- MultipliedValues[(MultipliedValues < IntervalLength/2*IntervalNumber)]#
#
Check <- hist(FourNsValues,breaks=c(IntervalLength/2*0:IntervalNumber))#
Counts_At_OnePercent_Given2Ns <- Check$counts#
#
Probabilities_At_One_Percent_Given_2NsMouse= Counts_At_OnePercent_Given2Ns/ (NumberOfAllelesAt2Ns)#
###### The whole stuff#
#
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]#
#
for (i in 1:length(ProbsMouse)){#
    if (is.infinite(ProbsMouse[i]) == FALSE){#
        ProbsMouse[i] = 0.0#
    }#
}#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c("0-5","50-55","100-150","150-155","200-205",Label)#
#
pdf("../Results/DFEf_to_DFE.pdf",width=10,height = 3.5)#
par(mar=c(4.1,5.1,0.6,2.1))#
par(mfrow = c(1,1))#
#
FirstProbsMouse <- ProbsMouse#
#
###### The whole stuff#
if (sum(ProbsMouse) > 1.0){#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:30],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:30]))#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:20])#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / sum (ProbsMouse[1:IntervalNumber] )#
ProbsMouse <- c(ProbsMouse,0)#
#
}else {#
ProbsMouse <- c(ProbsMouse[1:IntervalNumber],1-sum(ProbsMouse[1:IntervalNumber]))#
}#
#
# ProbsMouse <- c(1 - sum(ProbsMouse[1:IntervalNumber]),1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber], 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c(Labels,Label)#
counts <- table(mtcars$vs, mtcars$gear)#
# counts <- rbind(counts,c(1,2,3))#
# counts <- rbind(counts,c(1,2,3))#
for (i in 4:(IntervalNumber+1)){#
    counts <- cbind(counts,c(ProbsMouse[i], P_Allele_Is_2Ns_given_OnePercent[i]))#
}#
# counts[1,1] <- P_Allele_Is_2Ns[1]#
# counts[1,2] <- P_Allele_Is_2Ns[2]#
# counts[1,3] <- P_Allele_Is_2Ns[3]#
counts[1,1] <- ProbsMouse[1]#
counts[1,2] <- ProbsMouse[2]#
counts[1,3] <- ProbsMouse[3]#
# counts[3,1] <- ProbsMouse[1]#
# counts[3,2] <- ProbsMouse[2]#
# counts[3,3] <- ProbsMouse[3]#
counts[2,1] <- P_Allele_Is_2Ns_given_OnePercent[1]#
counts[2,2] <- P_Allele_Is_2Ns_given_OnePercent[2]#
counts[2,3] <- P_Allele_Is_2Ns_given_OnePercent[3]#
#
# counts <- cbind(counts,c( 1 - sum(ProbsMouse[1:IntervalNumber]), 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber])))#
#
for ( i in 1:2){#
    for (j in 1:(IntervalNumber+1)){#
        if (counts[i,j] <= 1e-8){#
            counts[i,j] = 1e-8#
        }#
    }#
}#
# rownames(counts) <- c(expression("Real P("*bolditalic(s[j])*" | DFE, D)"), expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 4"),expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 5"), expression("P("*bolditalic(s[j])*" | 1%, DFE, D)"))#
#
Label <- paste(">","150",sep="")#
Labels <- c("0-5","50-55","100-105",Label)#
barplot(log10(counts)-log10(0.00000001), main="", ylab="Probability", xlab="4Ns", col=ViridisColors,#
legend = c(expression( expression("Inferred"  ~ 'P'[psi] * "(" * bolditalic(s[j]) * ")"), expression('P'[psi]* "("* bolditalic(s[j])*" | "* italic(f) * ", "* italic(D) *")"))), ylim = c(0, 8), beside=TRUE,cex.lab=2,cex.axis=2,cex.names=2, args.legend = list(x = "top",cex= 0.95), yaxt="n", xaxt = "n", space = c(0, 2))#
#
axis (2,at=c(0,2,4,6,8), labels = c("< 10^-8",10^-6,10^-4,10^-2,10^0), cex.axis = 0.8)#
#
axis(1, at=c(3.5, 53.5, 103.5, 153.5), labels=Labels,cex.lab=1,cex=1,cex.axis=1,col.ticks="red")#
#Expression <- expression("Real " ~ 'P'[psi] ~ "(bolditalic(s[j]), | DFE, D)")#
Expression2 <- expression(paste("Inferred P(",bolditalic(s[j])," | DFE, D)  Equation 5"))#
Expression3 <- expression(paste("P(",bolditalic(s[j])," | 1%, DFE, D)"))#
dev.off()#
#
DataTable = data.frame(#
  P_sj_given_DemHistory_Frequency = P_Allele_Is_2Ns_given_OnePercent[1:(IntervalNumber+1)],#
  P_sj = ProbsMouse[1:(IntervalNumber+1)]#
)#
#
value <- c()#
for (i in 1:IntervalNumber){#
    Multiplier <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    value <- c(value,Multiplier)#
}#
Multiplier <- paste(">",IntervalNumber*IntervalLength,sep="")#
value <- c(value,Multiplier)#
#
row.names(DataTable) <- value#
#
write.table(DataTable,file="../Results/Probabilities.txt",col.names=NA)
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]#
#
for (i in 1:length(ProbsMouse)){#
    if (is.infinite(ProbsMouse[i]) == FALSE){#
        ProbsMouse[i] = 0.0#
    }#
}
ProbsMouse
library(viridis)#
library(here)#
#
### P (allele is 2Ns = x | allele is at 1%)#
## This comes from running Results/#
args = commandArgs(trailingOnly=TRUE)#
print(args)#
#
###Example#
#
MaxLLParameters = "../Results/MaxLLEstimatesDFE.txt"#
print (MaxLLParameters)#
LLFile = read.table(MaxLLParameters)#
print (MaxLLParameters)#
Alpha = LLFile$V1#
Gamma = LLFile$V2#
P_allele_at_OnePercent = 3.08e-07#
AllelesWithSelectionCoefficientFile = "ExitOnePercentSValuesPopExpansionBoyko.txt"#
NumberOfChromosomesInMostAncestralEpoch = 10000#
NumberAllelesSimulatedInDemHistory = 2.025e+11#
IntervalLength <- as.double(5)#
IntervalNumber <- as.double(50)
print ("Parameters read")#
print (Alpha)#
print (Gamma)#
print (P_allele_at_OnePercent)#
print (AllelesWithSelectionCoefficientFile)#
print (NumberOfChromosomesInMostAncestralEpoch)#
print (NumberAllelesSimulatedInDemHistory)#
print (IntervalLength)#
print (IntervalNumber)#
P_Allele_Is_2Ns_given_OnePercent <- c()#
#
# P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,pgamma(0.5,Alpha,scale=Gamma))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*2.5,Alpha,scale=Gamma) - pgamma((i-1)*2.5,Alpha,scale=Gamma)#
    P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,Prob)#
}#
#
#### Number of alleles#
#
Alpha = 0.184#
Beta = 319.8626 * 10#
#
P_Allele_Is_2Ns <- c()#
NumberOfAllelesAt2Ns <- c()#
RealProbs <- c()#
# P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,pgamma(0.5,Alpha,scale=Beta))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*IntervalLength/2,Alpha,scale=Beta) - pgamma((i-1)*IntervalLength/2,Alpha,scale=Beta)#
    P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,Prob)#
    NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*((80000 + (100000/10000)*100)*2500*1000)) # Original Test#
    # NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*(1))#
}#
################################################### Two plots on same place #############################
#
ColorViridis <- viridis(2)#
ViridisColors <- viridis(2)#
#
SelectionCoefficientList <- read.table(AllelesWithSelectionCoefficientFile)#
#
MultipliedValues <- SelectionCoefficientList$V2*NumberOfChromosomesInMostAncestralEpoch#
#
FourNsValues <- MultipliedValues[(MultipliedValues < IntervalLength/2*IntervalNumber)]#
#
Check <- hist(FourNsValues,breaks=c(IntervalLength/2*0:IntervalNumber))#
Counts_At_OnePercent_Given2Ns <- Check$counts#
#
Probabilities_At_One_Percent_Given_2NsMouse= Counts_At_OnePercent_Given2Ns/ (NumberOfAllelesAt2Ns)#
###### The whole stuff#
#
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]#
#
for (i in 1:length(ProbsMouse)){#
    if (is.infinite(ProbsMouse[i])){#
        ProbsMouse[i] = 0.0#
    }#
}#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c("0-5","50-55","100-150","150-155","200-205",Label)#
#
pdf("../Results/DFEf_to_DFE.pdf",width=10,height = 3.5)#
par(mar=c(4.1,5.1,0.6,2.1))#
par(mfrow = c(1,1))#
#
FirstProbsMouse <- ProbsMouse#
#
###### The whole stuff#
if (sum(ProbsMouse) > 1.0){#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:30],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:30]))#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:20])#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / sum (ProbsMouse[1:IntervalNumber] )#
ProbsMouse <- c(ProbsMouse,0)#
#
}else {#
ProbsMouse <- c(ProbsMouse[1:IntervalNumber],1-sum(ProbsMouse[1:IntervalNumber]))#
}#
#
# ProbsMouse <- c(1 - sum(ProbsMouse[1:IntervalNumber]),1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber], 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c(Labels,Label)#
counts <- table(mtcars$vs, mtcars$gear)#
# counts <- rbind(counts,c(1,2,3))#
# counts <- rbind(counts,c(1,2,3))#
for (i in 4:(IntervalNumber+1)){#
    counts <- cbind(counts,c(ProbsMouse[i], P_Allele_Is_2Ns_given_OnePercent[i]))#
}#
# counts[1,1] <- P_Allele_Is_2Ns[1]#
# counts[1,2] <- P_Allele_Is_2Ns[2]#
# counts[1,3] <- P_Allele_Is_2Ns[3]#
counts[1,1] <- ProbsMouse[1]#
counts[1,2] <- ProbsMouse[2]#
counts[1,3] <- ProbsMouse[3]#
# counts[3,1] <- ProbsMouse[1]#
# counts[3,2] <- ProbsMouse[2]#
# counts[3,3] <- ProbsMouse[3]#
counts[2,1] <- P_Allele_Is_2Ns_given_OnePercent[1]#
counts[2,2] <- P_Allele_Is_2Ns_given_OnePercent[2]#
counts[2,3] <- P_Allele_Is_2Ns_given_OnePercent[3]#
#
# counts <- cbind(counts,c( 1 - sum(ProbsMouse[1:IntervalNumber]), 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber])))#
#
for ( i in 1:2){#
    for (j in 1:(IntervalNumber+1)){#
        if (counts[i,j] <= 1e-8){#
            counts[i,j] = 1e-8#
        }#
    }#
}#
# rownames(counts) <- c(expression("Real P("*bolditalic(s[j])*" | DFE, D)"), expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 4"),expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 5"), expression("P("*bolditalic(s[j])*" | 1%, DFE, D)"))#
#
Label <- paste(">","150",sep="")#
Labels <- c("0-5","50-55","100-105",Label)#
barplot(log10(counts)-log10(0.00000001), main="", ylab="Probability", xlab="4Ns", col=ViridisColors,#
legend = c(expression( expression("Inferred"  ~ 'P'[psi] * "(" * bolditalic(s[j]) * ")"), expression('P'[psi]* "("* bolditalic(s[j])*" | "* italic(f) * ", "* italic(D) *")"))), ylim = c(0, 8), beside=TRUE,cex.lab=2,cex.axis=2,cex.names=2, args.legend = list(x = "top",cex= 0.95), yaxt="n", xaxt = "n", space = c(0, 2))#
#
axis (2,at=c(0,2,4,6,8), labels = c("< 10^-8",10^-6,10^-4,10^-2,10^0), cex.axis = 0.8)#
#
axis(1, at=c(3.5, 53.5, 103.5, 153.5), labels=Labels,cex.lab=1,cex=1,cex.axis=1,col.ticks="red")#
#Expression <- expression("Real " ~ 'P'[psi] ~ "(bolditalic(s[j]), | DFE, D)")#
Expression2 <- expression(paste("Inferred P(",bolditalic(s[j])," | DFE, D)  Equation 5"))#
Expression3 <- expression(paste("P(",bolditalic(s[j])," | 1%, DFE, D)"))#
dev.off()#
#
DataTable = data.frame(#
  P_sj_given_DemHistory_Frequency = P_Allele_Is_2Ns_given_OnePercent[1:(IntervalNumber+1)],#
  P_sj = ProbsMouse[1:(IntervalNumber+1)]#
)#
#
value <- c()#
for (i in 1:IntervalNumber){#
    Multiplier <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    value <- c(value,Multiplier)#
}#
Multiplier <- paste(">",IntervalNumber*IntervalLength,sep="")#
value <- c(value,Multiplier)#
#
row.names(DataTable) <- value#
#
write.table(DataTable,file="../Results/Probabilities.txt",col.names=NA)
sum(DataTable)
DataTable[,2]
DataTable[,1]
library(viridis)#
library(here)#
#
### P (allele is 2Ns = x | allele is at 1%)#
## This comes from running Results/#
args = commandArgs(trailingOnly=TRUE)#
print(args)#
#
###Example#
#
MaxLLParameters = "../Results/MaxLLEstimatesDFE.txt"#
print (MaxLLParameters)#
LLFile = read.table(MaxLLParameters)#
print (MaxLLParameters)#
Alpha = LLFile$V1#
Gamma = LLFile$V2#
P_allele_at_OnePercent = 3.08e-07#
AllelesWithSelectionCoefficientFile = "ExitOnePercentSValuesPopExpansionBoyko.txt"#
NumberOfChromosomesInMostAncestralEpoch = 10000#
NumberAllelesSimulatedInDemHistory = 2.025e+11#
IntervalLength <- as.double(5)#
IntervalNumber <- as.double(50)
print ("Parameters read")#
print (Alpha)#
print (Gamma)#
print (P_allele_at_OnePercent)#
print (AllelesWithSelectionCoefficientFile)#
print (NumberOfChromosomesInMostAncestralEpoch)#
print (NumberAllelesSimulatedInDemHistory)#
print (IntervalLength)#
print (IntervalNumber)#
P_Allele_Is_2Ns_given_OnePercent <- c()#
#
# P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,pgamma(0.5,Alpha,scale=Gamma))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*2.5,Alpha,scale=Gamma) - pgamma((i-1)*2.5,Alpha,scale=Gamma)#
    P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,Prob)#
}#
#
#### Number of alleles#
#
Alpha = 0.184#
Beta = 319.8626 * 10#
#
P_Allele_Is_2Ns <- c()#
NumberOfAllelesAt2Ns <- c()#
RealProbs <- c()#
# P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,pgamma(0.5,Alpha,scale=Beta))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*IntervalLength/2,Alpha,scale=Beta) - pgamma((i-1)*IntervalLength/2,Alpha,scale=Beta)#
    P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,Prob)#
    NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*((80000 + (100000/10000)*100)*2500*1000)) # Original Test#
    # NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*(1))#
}#
################################################### Two plots on same place #############################
#
ColorViridis <- viridis(2)#
ViridisColors <- viridis(2)#
#
SelectionCoefficientList <- read.table(AllelesWithSelectionCoefficientFile)#
#
MultipliedValues <- SelectionCoefficientList$V2*NumberOfChromosomesInMostAncestralEpoch#
#
FourNsValues <- MultipliedValues[(MultipliedValues < IntervalLength/2*IntervalNumber)]#
#
Check <- hist(FourNsValues,breaks=c(IntervalLength/2*0:IntervalNumber))#
Counts_At_OnePercent_Given2Ns <- Check$counts#
#
Probabilities_At_One_Percent_Given_2NsMouse= Counts_At_OnePercent_Given2Ns/ (NumberOfAllelesAt2Ns)#
###### The whole stuff#
#
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]#
#
for (i in 1:length(ProbsMouse)){#
    if (is.infinite(ProbsMouse[i])){#
        ProbsMouse[i] = 0.0#
    }#
}#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c("0-5","50-55","100-150","150-155","200-205",Label)#
#
pdf("../Results/DFEf_to_DFE.pdf",width=10,height = 3.5)#
par(mar=c(4.1,5.1,0.6,2.1))#
par(mfrow = c(1,1))#
#
FirstProbsMouse <- ProbsMouse#
#
###### The whole stuff#
if (sum(ProbsMouse) > 1.0){#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:30],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:30]))#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:20])#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / sum (ProbsMouse[1:IntervalNumber] )#
ProbsMouse <- c(ProbsMouse,0)#
#
}else {#
ProbsMouse <- c(ProbsMouse[1:IntervalNumber],1-sum(ProbsMouse[1:IntervalNumber]))#
}#
#
# ProbsMouse <- c(1 - sum(ProbsMouse[1:IntervalNumber]),1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber], 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c(Labels,Label)#
counts <- table(mtcars$vs, mtcars$gear)#
# counts <- rbind(counts,c(1,2,3))#
# counts <- rbind(counts,c(1,2,3))#
for (i in 4:(IntervalNumber+1)){#
    counts <- cbind(counts,c(ProbsMouse[i], P_Allele_Is_2Ns_given_OnePercent[i]))#
}#
# counts[1,1] <- P_Allele_Is_2Ns[1]#
# counts[1,2] <- P_Allele_Is_2Ns[2]#
# counts[1,3] <- P_Allele_Is_2Ns[3]#
counts[1,1] <- ProbsMouse[1]#
counts[1,2] <- ProbsMouse[2]#
counts[1,3] <- ProbsMouse[3]#
# counts[3,1] <- ProbsMouse[1]#
# counts[3,2] <- ProbsMouse[2]#
# counts[3,3] <- ProbsMouse[3]#
counts[2,1] <- P_Allele_Is_2Ns_given_OnePercent[1]#
counts[2,2] <- P_Allele_Is_2Ns_given_OnePercent[2]#
counts[2,3] <- P_Allele_Is_2Ns_given_OnePercent[3]#
#
# counts <- cbind(counts,c( 1 - sum(ProbsMouse[1:IntervalNumber]), 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber])))#
#
for ( i in 1:2){#
    for (j in 1:(IntervalNumber+1)){#
        if (counts[i,j] <= 1e-8){#
            counts[i,j] = 1e-8#
        }#
    }#
}#
# rownames(counts) <- c(expression("Real P("*bolditalic(s[j])*" | DFE, D)"), expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 4"),expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 5"), expression("P("*bolditalic(s[j])*" | 1%, DFE, D)"))#
#
Label <- c()#
Position <- c()#
for (i in 1:IntervalNumber){#
    ThisLabel <- paste((i-1)*5,"-",i*5, sep = "")#
    Labels <- c(Labels,ThisLabel)#
    Number <- (i-1) * 5 + 3.5#
    Position <- c(Position, Number)#
}#
#
Number <- (i) * 5 + 3.5#
Position <- c(Position, Number)#
#
ThisLabel <- paste(">",i*5, sep = "")#
Labels <- c(Labels,ThisLabel)#
#
# Label <- paste(">","150",sep="")#
# Labels <- c("0-5","50-55","100-105",Label)#
#
barplot(log10(counts)-log10(0.00000001), main="", ylab="Probability", xlab="4Ns", col=ViridisColors,#
legend = c(expression( expression("Inferred"  ~ 'P'[psi] * "(" * bolditalic(s[j]) * ")"), expression('P'[psi]* "("* bolditalic(s[j])*" | "* italic(f) * ", "* italic(D) *")"))), ylim = c(0, 8), beside=TRUE,cex.lab=2,cex.axis=2,cex.names=2, args.legend = list(x = "top",cex= 0.95), yaxt="n", xaxt = "n", space = c(0, 2))#
#
axis (2,at=c(0,2,4,6,8), labels = c("< 10^-8",10^-6,10^-4,10^-2,10^0), cex.axis = 0.8)#
#
axis(1, at=Position, labels=Labels,cex.lab=1,cex=1,cex.axis=1,col.ticks="red")#
#Expression <- expression("Real " ~ 'P'[psi] ~ "(bolditalic(s[j]), | DFE, D)")#
Expression2 <- expression(paste("Inferred P(",bolditalic(s[j])," | DFE, D)  Equation 5"))#
Expression3 <- expression(paste("P(",bolditalic(s[j])," | 1%, DFE, D)"))#
dev.off()#
#
DataTable = data.frame(#
  P_sj_given_DemHistory_Frequency = P_Allele_Is_2Ns_given_OnePercent[1:(IntervalNumber+1)],#
  P_sj = ProbsMouse[1:(IntervalNumber+1)]#
)#
#
value <- c()#
for (i in 1:IntervalNumber){#
    Multiplier <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    value <- c(value,Multiplier)#
}#
Multiplier <- paste(">",IntervalNumber*IntervalLength,sep="")#
value <- c(value,Multiplier)#
#
row.names(DataTable) <- value#
#
write.table(DataTable,file="../Results/Probabilities.txt",col.names=NA, sep = "\t")
Labels
Position
Labels <- c()#
Position <- c()#
for (i in 1:IntervalNumber){#
    ThisLabel <- paste((i-1)*5,"-",i*5, sep = "")#
    Labels <- c(Labels,ThisLabel)#
    Number <- (i-1) * 5 + 3.5#
    Position <- c(Position, Number)#
}#
#
Number <- (i) * 5 + 3.5#
Position <- c(Position, Number)#
#
ThisLabel <- paste(">",i*5, sep = "")#
Labels <- c(Labels,ThisLabel)#
#
# Label <- paste(">","150",sep="")#
# Labels <- c("0-5","50-55","100-105",Label)#
#
barplot(log10(counts)-log10(0.00000001), main="", ylab="Probability", xlab="4Ns", col=ViridisColors,#
legend = c(expression( expression("Inferred"  ~ 'P'[psi] * "(" * bolditalic(s[j]) * ")"), expression('P'[psi]* "("* bolditalic(s[j])*" | "* italic(f) * ", "* italic(D) *")"))), ylim = c(0, 8), beside=TRUE,cex.lab=2,cex.axis=2,cex.names=2, args.legend = list(x = "top",cex= 0.95), yaxt="n", xaxt = "n", space = c(0, 2))#
#
axis (2,at=c(0,2,4,6,8), labels = c("< 10^-8",10^-6,10^-4,10^-2,10^0), cex.axis = 0.8)#
#
axis(1, at=Position, labels=Labels,cex.lab=1,cex=1,cex.axis=1,col.ticks="red")#
#Expression <- expression("Real " ~ 'P'[psi] ~ "(bolditalic(s[j]), | DFE, D)")#
Expression2 <- expression(paste("Inferred P(",bolditalic(s[j])," | DFE, D)  Equation 5"))#
Expression3 <- expression(paste("P(",bolditalic(s[j])," | 1%, DFE, D)"))#
dev.off()#
#
DataTable = data.frame(#
  P_sj_given_DemHistory_Frequency = P_Allele_Is_2Ns_given_OnePercent[1:(IntervalNumber+1)],#
  P_sj = ProbsMouse[1:(IntervalNumber+1)]#
)#
#
value <- c()#
for (i in 1:IntervalNumber){#
    Multiplier <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    value <- c(value,Multiplier)#
}#
Multiplier <- paste(">",IntervalNumber*IntervalLength,sep="")#
value <- c(value,Multiplier)#
#
row.names(DataTable) <- value#
#
write.table(DataTable,file="../Results/Probabilities.txt",col.names=NA, sep = "\t")
barplot(log10(counts)-log10(0.00000001), main="", ylab="Probability", xlab="4Ns", col=ViridisColors,#
legend = c(expression( expression("Inferred"  ~ 'P'[psi] * "(" * bolditalic(s[j]) * ")"), expression('P'[psi]* "("* bolditalic(s[j])*" | "* italic(f) * ", "* italic(D) *")"))), ylim = c(0, 8), beside=TRUE,cex.lab=2,cex.axis=2,cex.names=2, args.legend = list(x = "top",cex= 0.95), yaxt="n", xaxt = "n", space = c(0, 2))#
#
axis (2,at=c(0,2,4,6,8), labels = c("< 10^-8",10^-6,10^-4,10^-2,10^0), cex.axis = 0.8)
axis(1, at=Position, labels=Labels,cex.lab=1,cex=1,cex.axis=1,col.ticks="red")
((80000 + (100000/10000)*100)*2500*1000))
((80000 + (100000/10000)*100)*2500*1000)
0.01049*7242
0.0105*7242
76*75/2
