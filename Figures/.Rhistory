88082.81/1000000
0.2878918*40000
0.08808281*40000
f <- 0.5#
TP3 <- 0.5 * 40000#
TGF <- 0.1 * 40000#
TP2 <- 0.25 * 40000#
N <- 10000#
#
Pr_ABBA <- f * (TP3 - TGF) + (1 - f)* ((1 - 1 / (2*N))**(TP3 - TP2)) * (2*N/3) + f*((1 - 1/(2*N))**(TP3 - TGF))*(2*N/3)#
#
Pr_BABA <- (1 - f)* ((1 - 1 / (2*N))**(TP3 - TP2)) * (2*N/3) + f*((1 - 1/(2*N))**(TP3 - TGF))*(2*N/3)#
#
Proportion <- Pr_ABBA / (Pr_ABBA + Pr_BABA)#
#
Proportion#
### Pr AAAB#
#
PartOne <- 0#
DifOne <- TP3 - TP2#
OneProbPart <- 0#
for (i in 1:DifOne){#
    PartOne <- PartOne + (TP2 + i ) * ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
    PartOne <- PartOne + (i ) * ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
    OneProbPart <- OneProbPart + ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
}#
# PartOne <- PartOne +TP2#
PartOneAlt <- -exp(-(DifOne)/(2*N))*(2*N+DifOne + TP2) + 2*N + TP2#
PartOneAltTwo <- TP2 +  -exp(-(DifOne)/(2*N))*(2*N+DifOne) + 2*N#
#
PartOne#
PartOneAlt#
PartOneAltTwo
### Pr AAAB#
#
PartOne <- 0#
DifOne <- TP3 - TP2#
OneProbPart <- 0#
for (i in 1:DifOne){#
    PartOne <- PartOne + (TP2 + i ) * ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
    # PartOne <- PartOne + (i ) * ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
    OneProbPart <- OneProbPart + ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
}#
# PartOne <- PartOne +TP2#
PartOneAlt <- -exp(-(DifOne)/(2*N))*(2*N+DifOne + TP2) + 2*N + TP2#
PartOneAltTwo <- TP2 +  -exp(-(DifOne)/(2*N))*(2*N+DifOne) + 2*N#
#
PartOne#
PartOneAlt#
PartOneAltTwo
f <- 0.5#
TP3 <- 0.5 * 40000#
TGF <- 0.1 * 40000#
TP2 <- 0.25 * 40000#
N <- 10000#
#
Pr_ABBA <- f * (TP3 - TGF) + (1 - f)* ((1 - 1 / (2*N))**(TP3 - TP2)) * (2*N/3) + f*((1 - 1/(2*N))**(TP3 - TGF))*(2*N/3)#
#
Pr_BABA <- (1 - f)* ((1 - 1 / (2*N))**(TP3 - TP2)) * (2*N/3) + f*((1 - 1/(2*N))**(TP3 - TGF))*(2*N/3)#
#
Proportion <- Pr_ABBA / (Pr_ABBA + Pr_BABA)#
#
Proportion#
### Pr AAAB#
#
PartOne <- 0#
DifOne <- TP3 - TP2#
OneProbPart <- 0#
for (i in 1:DifOne){#
    PartOne <- PartOne + (TP2 + i ) * ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
    # PartOne <- PartOne + (i ) * ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
    OneProbPart <- OneProbPart + ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
}#
# PartOne <- PartOne +TP2#
PartOneAlt <- -exp(-(DifOne)/(2*N))*(2*N+DifOne + TP2) + 2*N + TP2#
PartOneAltTwo <- TP2 +  -exp(-(DifOne)/(2*N))*(2*N+DifOne) + 2*N#
#
PartOne#
PartOneAlt#
PartOneAltTwo#
LargeProb <- 0#
for (i in 1:DifOne){#
    LargeProb <- LargeProb + ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
}#
LargeProb#
LargeProb <- 1 - exp(-DifOne/(2*N))#
LargeProb
1 - LargeProb
1 - 1 + exp(-DifOne/(2*N))
exp(-DifOne/(2*N))
LargeProb <- 0#
for (i in 1:DifOne){#
    LargeProb <- LargeProb + ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
}#
LargeProb#
LargeProb <- 1 - exp(-DifOne/(2*N))#
LargeProb
exp(-DifOne/(2*N))
LargeProb <- 0#
for (i in 1:DifOne){#
    LargeProb <- LargeProb + ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
}
1 - LargeProb
4*N
.5*(4*N+TP3+TGF)
.5*(+TP3+TGF)
f <- 0.5#
TP3 <- 0.5 * 40000#
TGF <- 0.1 * 40000#
TP2 <- 0.25 * 40000#
N <- 10000#
#
Pr_ABBA <- f * (TP3 - TGF) + (1 - f)* ((1 - 1 / (2*N))**(TP3 - TP2)) * (2*N/3) + f*((1 - 1/(2*N))**(TP3 - TGF))*(2*N/3)#
#
Pr_BABA <- (1 - f)* ((1 - 1 / (2*N))**(TP3 - TP2)) * (2*N/3) + f*((1 - 1/(2*N))**(TP3 - TGF))*(2*N/3)#
#
Proportion <- Pr_ABBA / (Pr_ABBA + Pr_BABA)#
#
Proportion#
### Pr AAAB#
#
PartOne <- 0#
DifOne <- TP3 - TP2#
OneProbPart <- 0#
for (i in 1:DifOne){#
    PartOne <- PartOne + (TP2 + i ) * ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
    # PartOne <- PartOne + (i ) * ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
    OneProbPart <- OneProbPart + ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
}#
# PartOne <- PartOne +TP2#
PartOneAlt <- -exp(-(DifOne)/(2*N))*(2*N+DifOne + TP2) + 2*N + TP2#
PartOneAltTwo <- TP2 +  -exp(-(DifOne)/(2*N))*(2*N+DifOne) + 2*N#
#
PartOne#
PartOneAlt#
PartOneAltTwo#
LargeProb <- 0#
for (i in 1:DifOne){#
    LargeProb <- LargeProb + ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
}#
LargeProb#
LargeProb <- 1 - exp(-DifOne/(2*N))#
LargeProb#
#
# PrAAAB <- (1 - f) * ( PartOneAlt + ( 1 - LargeProb)*(2*N/3 + TP3)*(2/3) + ( 1 - LargeProb)*(2*N + TP3)*(1/3))#
PrAAAB <- (1 - f) * ( PartOneAlt + ( 1 - LargeProb)*(2*N/3 + TP3)*(2/3) + ( 1 - LargeProb)*(2*N/3+ 2*N + TP3)*(1/3))#
PrAAAB#
#
ComponentOne <- ( PartOneAlt + ( 1 - LargeProb)*(2*N/3 + TP3)*(2/3) + ( 1 - LargeProb)*(2*N/3+ 2*N + TP3)*(1/3))#
#
DifTwo <- TP3 - TGF#
LargeProbTwo <- 0#
for (i in 1:DifTwo){#
    LargeProbTwo <- LargeProbTwo + ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
    OneProbPart <- OneProbPart + ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
}#
OneProbPart#
LargeProbTwoAlt <- 1 - exp(-DifTwo/(2*N))#
#
PrAAAB <- PrAAAB + f * ((( 1 - LargeProbTwoAlt)*(2*N/3 + TP3)* (2 / 3)) + (( 1 - LargeProbTwoAlt)*(2*N/3+ 2*N + TP3) * (1 / 3)) + (( LargeProbTwoAlt) * (2*N + TP3) ))#
PrAAAB#
ProbSum <- f* (LargeProbTwoAlt * (2 / 3) + LargeProbTwoAlt * (1 / 3) + ( 1 - LargeProbTwoAlt))#
ProbSum <- ProbSum + (1 - f) * (LargeProb * (2 / 3) + LargeProb * (1 / 3) + (1 - LargeProb))#
ProbSum#
#
### Pr AABA#
#
PartTwo <- 0#
DifTwo <- TP3 - TGF#
for (i in 1:DifTwo){#
    PartTwo <- PartTwo + (TGF + i ) * ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
    #    PartTwo <- PartTwo + (i ) * ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
}#
# PartTwo <- PartTwo + TGF#
#
PartTwoAlt <- -exp(-(DifTwo)/(2*N))*(2*N+DifTwo + TGF) + 2*N + TGF#
PartTwoAlt#
PartTwo#
LargeProbTwo <- 0#
for (i in 1:DifTwo){#
    LargeProbTwo <- LargeProbTwo + ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
}#
LargeProbTwoAlt <- 1 - exp(-DifTwo/(2*N))#
PrAABA <- (1 - f) * ComponentOne + (f * ( (1 - LargeProbTwoAlt)*(2*N/3 + TP3)*(2/3) + PartTwoAlt + ( 1 - LargeProbTwoAlt)*(2*N/3 + 2*N + TP3)*(1/3)))#
#
PrAAAB / (PrAAAB + PrAABA)#
PrAABA / (PrAAAB + PrAABA)#
Pr_ABBA/(Pr_BABA + Pr_ABBA)#
Pr_BABA/(Pr_BABA + Pr_ABBA)#
#
PrAABA/(PrAABA + PrAAAB + Pr_BABA + Pr_ABBA)#
PrAAAB/(PrAABA + PrAAAB + Pr_BABA + Pr_ABBA)#
Pr_ABBA/(PrAABA + PrAAAB + Pr_BABA + Pr_ABBA)#
Pr_BABA/(PrAABA + PrAAAB + Pr_BABA + Pr_ABBA)#
#
D <- (Pr_ABBA - Pr_BABA)/(Pr_BABA + Pr_ABBA)#
D#
DPrime <- (Pr_ABBA - Pr_BABA)/(Pr_BABA + Pr_ABBA) + (PrAAAB - PrAABA)/(PrAAAB + PrAABA)#
DPrime#
#
Pr_ABBA/(PrAAAB + Pr_BABA + Pr_ABBA)#
PrAAAB/(PrAAAB + Pr_BABA + Pr_ABBA)#
Pr_BABA/(PrAAAB + Pr_BABA + Pr_ABBA)#
#
PrAABA/(PrAABA + Pr_BABA + Pr_ABBA)#
Pr_ABBA/(PrAABA + Pr_BABA + Pr_ABBA)#
Pr_BABA/(PrAABA + Pr_BABA + Pr_ABBA)#
#
Pr_ABBA#
Pr_BABA#
PrAABA#
PrAAAB
PrAAAB-PrAABA
.5*(TP3)
.5*(TP3+TGF)
.5*(TP3-TGF)
(PrAAAB-PrAABA)*(Pr_ABBA-Pr_BABA)
((PrAAAB-PrAABA)*(Pr_ABBA-Pr_BABA))/( (PrAAAB+PrAABA)*(Pr_ABBA+Pr_BABA))
f <- 0.0#
TP3 <- 0.5 * 40000#
TGF <- 0.1 * 40000#
TP2 <- 0.25 * 40000#
N <- 10000#
#
Pr_ABBA <- f * (TP3 - TGF) + (1 - f)* ((1 - 1 / (2*N))**(TP3 - TP2)) * (2*N/3) + f*((1 - 1/(2*N))**(TP3 - TGF))*(2*N/3)#
#
Pr_BABA <- (1 - f)* ((1 - 1 / (2*N))**(TP3 - TP2)) * (2*N/3) + f*((1 - 1/(2*N))**(TP3 - TGF))*(2*N/3)#
#
Proportion <- Pr_ABBA / (Pr_ABBA + Pr_BABA)#
#
Proportion#
### Pr AAAB#
#
PartOne <- 0#
DifOne <- TP3 - TP2#
OneProbPart <- 0#
for (i in 1:DifOne){#
    PartOne <- PartOne + (TP2 + i ) * ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
    # PartOne <- PartOne + (i ) * ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
    OneProbPart <- OneProbPart + ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
}#
# PartOne <- PartOne +TP2#
PartOneAlt <- -exp(-(DifOne)/(2*N))*(2*N+DifOne + TP2) + 2*N + TP2#
PartOneAltTwo <- TP2 +  -exp(-(DifOne)/(2*N))*(2*N+DifOne) + 2*N#
#
PartOne#
PartOneAlt#
PartOneAltTwo#
LargeProb <- 0#
for (i in 1:DifOne){#
    LargeProb <- LargeProb + ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
}#
LargeProb#
LargeProb <- 1 - exp(-DifOne/(2*N))#
LargeProb#
#
# PrAAAB <- (1 - f) * ( PartOneAlt + ( 1 - LargeProb)*(2*N/3 + TP3)*(2/3) + ( 1 - LargeProb)*(2*N + TP3)*(1/3))#
PrAAAB <- (1 - f) * ( PartOneAlt + ( 1 - LargeProb)*(2*N/3 + TP3)*(2/3) + ( 1 - LargeProb)*(2*N/3+ 2*N + TP3)*(1/3))#
PrAAAB#
#
ComponentOne <- ( PartOneAlt + ( 1 - LargeProb)*(2*N/3 + TP3)*(2/3) + ( 1 - LargeProb)*(2*N/3+ 2*N + TP3)*(1/3))#
#
DifTwo <- TP3 - TGF#
LargeProbTwo <- 0#
for (i in 1:DifTwo){#
    LargeProbTwo <- LargeProbTwo + ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
    OneProbPart <- OneProbPart + ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
}#
OneProbPart#
LargeProbTwoAlt <- 1 - exp(-DifTwo/(2*N))#
#
PrAAAB <- PrAAAB + f * ((( 1 - LargeProbTwoAlt)*(2*N/3 + TP3)* (2 / 3)) + (( 1 - LargeProbTwoAlt)*(2*N/3+ 2*N + TP3) * (1 / 3)) + (( LargeProbTwoAlt) * (2*N + TP3) ))#
PrAAAB#
ProbSum <- f* (LargeProbTwoAlt * (2 / 3) + LargeProbTwoAlt * (1 / 3) + ( 1 - LargeProbTwoAlt))#
ProbSum <- ProbSum + (1 - f) * (LargeProb * (2 / 3) + LargeProb * (1 / 3) + (1 - LargeProb))#
ProbSum#
#
### Pr AABA#
#
PartTwo <- 0#
DifTwo <- TP3 - TGF#
for (i in 1:DifTwo){#
    PartTwo <- PartTwo + (TGF + i ) * ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
    #    PartTwo <- PartTwo + (i ) * ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
}#
# PartTwo <- PartTwo + TGF#
#
PartTwoAlt <- -exp(-(DifTwo)/(2*N))*(2*N+DifTwo + TGF) + 2*N + TGF#
PartTwoAlt#
PartTwo#
LargeProbTwo <- 0#
for (i in 1:DifTwo){#
    LargeProbTwo <- LargeProbTwo + ((1/(2*N))*(1 - 1 / (2*N))**(i-1))#
}#
LargeProbTwoAlt <- 1 - exp(-DifTwo/(2*N))#
PrAABA <- (1 - f) * ComponentOne + (f * ( (1 - LargeProbTwoAlt)*(2*N/3 + TP3)*(2/3) + PartTwoAlt + ( 1 - LargeProbTwoAlt)*(2*N/3 + 2*N + TP3)*(1/3)))#
#
PrAAAB / (PrAAAB + PrAABA)#
PrAABA / (PrAAAB + PrAABA)#
Pr_ABBA/(Pr_BABA + Pr_ABBA)#
Pr_BABA/(Pr_BABA + Pr_ABBA)#
#
PrAABA/(PrAABA + PrAAAB + Pr_BABA + Pr_ABBA)#
PrAAAB/(PrAABA + PrAAAB + Pr_BABA + Pr_ABBA)#
Pr_ABBA/(PrAABA + PrAAAB + Pr_BABA + Pr_ABBA)#
Pr_BABA/(PrAABA + PrAAAB + Pr_BABA + Pr_ABBA)#
#
D <- (Pr_ABBA - Pr_BABA)/(Pr_BABA + Pr_ABBA)#
D#
DPrime <- (Pr_ABBA - Pr_BABA)/(Pr_BABA + Pr_ABBA) + (PrAAAB - PrAABA)/(PrAAAB + PrAABA)#
DPrime#
#
Pr_ABBA/(PrAAAB + Pr_BABA + Pr_ABBA)#
PrAAAB/(PrAAAB + Pr_BABA + Pr_ABBA)#
Pr_BABA/(PrAAAB + Pr_BABA + Pr_ABBA)#
#
PrAABA/(PrAABA + Pr_BABA + Pr_ABBA)#
Pr_ABBA/(PrAABA + Pr_BABA + Pr_ABBA)#
Pr_BABA/(PrAABA + Pr_BABA + Pr_ABBA)#
#
Pr_ABBA#
Pr_BABA#
PrAABA#
PrAAAB
((PrAAAB-PrAABA)*(Pr_ABBA-Pr_BABA))/( (PrAAAB+PrAABA)*(Pr_ABBA+Pr_BABA))
2.5+10 + 6
2.5+10 + 6 + 2 + 2
6.5 + 10 + 2.5
3300*12
3400*12
41000/50000
1176/4
12227 - 11873
354/3
69090 - 70008
896073 - 900571
4498/3
918/3
896073 - 896180
107/3
621095 - 622034
40444 + 21289
61733/500000
500/20
26687760/60
60*444796
9735837/21356760
2*7300*5
2*7300*5*.2
153/431
273/631
273/611
2928/5
7.5*100
750/60
4*10000*1e-8
4*10000*1e-8*5000
Data <- read.table("~/Dropbox/Documents/Berkeley/DStatisticEmilia/Fivekb_DStatistic.txt")
boxplot(Data$V5)
boxplot(Data$V5> 0)
boxplot(Data$V5> .1)
Test <- subset(Data$V5, > 0)
?subset
Subset <- subset(Data, V5 > .1)
boxplot(Subset$V5)
head(Subset$V5)
unique(Subset$V5)
boxplot(Data$V6)
rm Fivekb_DStatistic.txt#
touch Fivekb_DStatistic.txt#
#
## f = 0.0#
ms 4 100000 -t 2 -I 4 1 1 1 1 -ej 1 1 2 -ej 2 2 3 -ej 20 3 4 -es 0.0 2 1.0 -ej 0.0 5 3 | perl PrintABBABABAProportions_5KbGenes.pl >> Fivekb_DStatistic_f0.txt#
#
rm Fivekb_DStatisticf01.txt#
touch Fivekb_DStatisticf01.txt#
#
## f = 0.01#
ms 4 100000 -t 2 -I 4 1 0 2 1 -ej 1 1 2 -ej 2 2 3 -ej 20 3 4 -es 0.0 2 0.99 -ej 0.0 5 3 | perl PrintABBABABAProportions.pl >> Fivekb_DStatistic_f01.txt
Data <- read.table("~/Dropbox/Documents/Berkeley/DStatisticEmilia/Fivekb_DStatistic.txt")
Data <- read.table("~/Dropbox/Documents/Berkeley/DStatisticEmilia/Fivekb_DStatistic_f0.txt")
Data2 <- read.table("~/Dropbox/Documents/Berkeley/DStatisticEmilia/Fivekb_DStatistic_f01.txt")
Data <- read.table("~/Dropbox/Documents/Berkeley/DStatisticEmilia/Fivekb_DStatistic_f0.txt")
boxplot(Data$V5)
plot(1,Data$V5)
plot(rep(1,length(Data$V5),Data$V5)
)
plot(rep(1,length(Data$V5)),Data$V5)
mean(Data$V5)
head(Data$V5)
?mean
mean(Data$V5,na.rm=TRUE)
Data <- read.table("~/Dropbox/Documents/Berkeley/DStatisticEmilia/Fivekb_DStatistic_f5.txt")
Data <- read.table("~/Dropbox/Documents/Berkeley/DStatisticEmilia/Fivekb_DStatistic_f01.txt")
mean(Data$V5,na.rm=TRUE)
Data <- read.table("~/Dropbox/Documents/Berkeley/DStatisticEmilia/Fivekb_DStatistic_f2.txt")
mean(Data$V5,na.rm=TRUE)
Data <- read.table("~/Dropbox/Documents/Berkeley/DStatisticEmilia/Fivekb_DStatistic_f0.txt")
mean(Data$V5,na.rm=TRUE)
var(Data$V5,na.rm=TRUE)
var(Data$V6,na.rm=TRUE)
var(Data$V7,na.rm=TRUE)
var(Data$V8,na.rm=TRUE)
mean(Data$V8,na.rm=TRUE)
head(Data)
146/12
install.packages(devtools)
120000/30
530000/30
530000/25
120000/25
51*20
720/1020
530000/30
120000/30
log(4000)
log(4000.0001)
log(4000,10)
10**3.60216
10**3.60196
10**-4
1e-4
.0001
150000*30
1.02168e+06/50
2000*30
28948*5
28948/2
4594*5/2
22772*5/2
9109*5/2
1171*5/2
2674*5/2
6685*5/2
2674*5/2
220758*5/2
61*5/2
61*5
5637*5/2
5637/5*2
6685/5*2
598868/5*2
303/5
212/5
229+61
290-42
30*5
239547/2
12*100
1200/60
1000/150
95*2.54
56*2.54
95/12
150*5
150*7
70/24
8/18
5/15
3/15
6.7/335
335/6.7
335/58
335.9/6.7
335.9/58
501*12
5/4
1/4
0.01/40000
0.01*40000
0.001*40000
10*.6
17700/40000
4000/40000
4880/10000000
0.4425*4000
0.4425*40000
57696/50000000
40000*.1
17700/40000
17700/40000 - 4000/40000
122000/50000000
100000/200000000
100000/100000000
.5*40000
.5*10000
.5*40000
26/35
27/35
.4425*40000
42/9
42/8
42/7
300000000/50000
100*5
100*52
4594*0.0001088376
0.000025*20000
8484.45/(2*226252)
8484.45/(2*226252*250000)
8278.425/(2*220758*250000)
8278.425/(2*220758*125000)
8278.425/(2*220758*250000)
8484.45/(2*226252*250000)
7.5e-08/5
10881/27
11284/28
log(0.37184453)
log(0.066275406)
exp(-1.37374133793858)
log(0.129026203371317)
exp(-2.09260154912058)
5*log(0.423949973)+2*log(0.205797598)+2*log(0.123365776)+log(0.112819854)
factorial(72)
factorial(72)*273
Test="NA"
if (Test == "NA"){
print(Here)
}
if (Test == "NA"){
print('Here')
}
Test=100/0
Test
Test=0/0
Test
Test == Nan
Test == NaN
Test == 'NaN'
138-50
88/50
21*50
321-21
20*50
321-50
271/50
21*50
881/1050
928-50
940-50
949-50
971-50
100445688/2556
72*72/2
73*72/2
71*72/2
1395576/2556
1395576/(2556*2)
39298/3
100445688/(2556*401)
273-98
42056/1502
2*60+17
17/60
42/2.28
(6448.182-6168.05413859943)/6168.05413859943
(6448.182-6168.05413859943)/6448.182
34*2556
17*5
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Figures")#
#
library(viridis)#
library(jpeg)#
library(plotrix)#
#
DemScenario <- c()#
DemScenario <- c(DemScenario,"AncientBottleneck")#
DemScenario <- c(DemScenario,"AncientBottleneckPointFivePercent")#
DemScenario <- c(DemScenario,"ConstantPopSize")#
DemScenario <- c(DemScenario,"ConstantPopSizePointFivePercent")#
DemScenario <- c(DemScenario,"MediumBottleneck")#
DemScenario <- c(DemScenario,"MediumBottleneckPointFivePercent")#
DemScenario <- c(DemScenario,"PopExpansion")#
DemScenario <- c(DemScenario,"PopExpansionPointFivePercent")#
DemScenario <- c(DemScenario,"RecentBottleneck")#
DemScenario <- c(DemScenario,"RecentBottleneckPointFivePercent")#
DemScenario <- c(DemScenario,"ConstantPopSizePopFrequency")#
DemScenario <- c(DemScenario,"UK10K")#
#
Selection <- c()#
Selection <- c(Selection,"4Ns0")#
Selection <- c(Selection,"4Ns-25")#
Selection <- c(Selection,"4Ns-50")#
Selection <- c(Selection,"4Ns25")#
Selection <- c(Selection,"4Ns50")#
#
SelectionTraj <- c()#
SelectionTraj <- c(Selection,"4Ns0")#
SelectionTraj <- c(Selection,"4Ns-25")#
SelectionTraj <- c(Selection,"4Ns-50")#
SelectionTraj <- c(Selection,"4Ns25")#
SelectionTraj <- c(Selection,"4Ns50")#
#
SelectionTest <- c()#
SelectionTest <- c(SelectionTest,"4Ns_0")#
SelectionTest <- c(SelectionTest,"4Ns_-25")#
SelectionTest <- c(SelectionTest,"4Ns_-50")#
SelectionTest <- c(SelectionTest,"4Ns_25")#
SelectionTest <- c(SelectionTest,"4Ns_50")#
#
SelectionTestAge <- c()#
SelectionTestAge <- c(SelectionTestAge,"4Ns_0")#
SelectionTestAge <- c(SelectionTestAge,"4Ns_-25")#
SelectionTestAge <- c(SelectionTestAge,"4Ns_-50")#
SelectionTestAge <- c(SelectionTestAge,"4Ns_25")#
SelectionTestAge <- c(SelectionTestAge,"4Ns_50")#
ListMaxFreq <- c()#
ListMaxAge <- c()#
ListMaxT2 <- c()#
#
Ne <- c()#
Ne[1]=10000#
Ne[2]=10000#
Ne[3]=20000#
Ne[4]=20000#
Ne[5]=10000#
Ne[6]=10000#
Ne[7]=100000#
Ne[8]=100000#
Ne[9]=10000#
Ne[10]=10000#
Ne[11]=20000#
Ne[12]=346884#
XLimFigureOne <- c()#
XLimFigureOne[1]=2500#
XLimFigureOne[2]=2500#
XLimFigureOne[3]=1000#
XLimFigureOne[4]=1000#
XLimFigureOne[5]=2500#
XLimFigureOne[6]=2500#
XLimFigureOne[7]=3500#
XLimFigureOne[8]=3500#
XLimFigureOne[9]=3500#
XLimFigureOne[10]=3500#
XLimFigureOne[11]=1000#
XLimFigureOne[12]=2000#
#
XLimFigureTwo <- c()#
XLimFigureTwo[1]=1500#
XLimFigureTwo[2]=900#
XLimFigureTwo[3]=3000#
XLimFigureTwo[4]=2000#
XLimFigureTwo[5]=1500#
XLimFigureTwo[6]=900#
XLimFigureTwo[7]=1750#
XLimFigureTwo[8]=1000#
XLimFigureTwo[9]=2000#
XLimFigureTwo[10]=900#
XLimFigureTwo[11]=3000#
XLimFigureTwo[12]=2500#
YLimFigureTwo <- c()#
YLimFigureTwo[1]=0.225#
YLimFigureTwo[2]=0.3#
YLimFigureTwo[3]=0.125#
YLimFigureTwo[4]=0.175#
YLimFigureTwo[5]=0.2#
YLimFigureTwo[6]=0.3#
YLimFigureTwo[7]=0.275#
YLimFigureTwo[8]=0.325#
YLimFigureTwo[9]=0.35#
YLimFigureTwo[10]=0.5#
YLimFigureTwo[11]=0.125#
YLimFigureTwo[12]=0.125#
#
XLimFigureThree <- c()#
XLimFigureThree[1]=350#
XLimFigureThree[2]=150#
XLimFigureThree[3]=650#
XLimFigureThree[4]=400#
XLimFigureThree[5]=300#
XLimFigureThree[6]=150#
XLimFigureThree[7]=400#
XLimFigureThree[8]=300#
XLimFigureThree[9]=300#
XLimFigureThree[10]=150#
XLimFigureThree[11]=650#
XLimFigureThree[12]=200#
for (j in 12:12){#
	print(DemScenario[j])#
	MaxFreq <- 0#
	for (i in 1:5){#
		TrajectoryFile <- paste("../Results/FrequencyTrajectories/OutMeanTraj",DemScenario[j],SelectionTraj[i],".txt",sep="")#
		Data <- read.table(TrajectoryFile)#
		MaxFreq <- max(MaxFreq,Data$V2)#
		print(MaxFreq)#
	}#
	ListMaxFreq <- c(ListMaxFreq,MaxFreq)#
	MaxAge <- 0#
	TrajectoryFile <- paste("../Results/AlleleAges/Ages",DemScenario[j],"_",SelectionTestAge[1],".txt",sep="")#
	Data <- read.table(TrajectoryFile)#
	Max <- max(density(Data$V1*Ne[j]*2,from=0,to=quantile(Data$V1*Ne[j]*2,0.99))$x)#
	for (i in 1:5){#
		TrajectoryFile <- paste("../Results/AlleleAges/Ages",DemScenario[j],"_",SelectionTestAge[i],".txt",sep="")#
		Data <- read.table(TrajectoryFile)#
		MaxAge <- max(MaxAge,(density(Data$V1*Ne[j]*2,from=0,to=Max)$y))#
		print(MaxAge)#
	}#
	ListMaxAge <- c(ListMaxAge,MaxAge)#
	MaxT2 <- 0#
	for (i in 1:5){#
		TrajectoryFile <- paste("../Results/TTwos/",DemScenario[j],"_",SelectionTest[i],".txt",sep="")#
		Data <- read.table(TrajectoryFile)#
		MaxT2 <- max(MaxT2,Data$V2)#
		print(MaxT2)#
	}#
	ListMaxT2 <- c(ListMaxT2,MaxT2)	#
}#
############################################################################ Only three figures #
#
for (j in 12:12){#
	Plot <- paste("../Figures/Figure8_UK10KFreqAgeT2.pdf",sep="")#
	pdf(Plot,width=28/1.6,height=7/1.55)#
	par(mfrow=c(1,4))#
	par(mar=c(5,5,5,2) + 0.1)#
############### Population scenarios#
	if (j==12){#
		plot(c(100000,100000-46,100000-(46+244),100000-(61+229+352),100000-(61+229+352+1221),100000-(61+229+352+1221+22971)),c(226252/2,1496/2,1171/2,9109/2,4594/2,14600/2),type="s",xlim=c(100000-3000,100000),ylim=c(0,220758/2),ylab="Effective Population Size",xlab="Time before the present",main="A) UK10K Model",xaxt='n',yaxt='n',cex.main=2.5,cex.lab=2.5,col="red",lwd=6)#
		axis(1,at=c(100000,100000-1000,100000-2000,100000-3000,100000-4000,100000-5000,100000-6000),labels = c("Present","1000","2000","3000","4000","5000","6000"),cex.axis=2.5)#
		axis(2,at=c(150000,100000,50000,0),labels = c("150000","100000","50000","0"),cex.axis=2.5)#
	}	#
############## Trajectories#
par(mar=c(5,5,5,2) + 0.1)#
#
	TrajectoryFile <- paste("../Results/FrequencyTrajectories/OutMeanTraj",DemScenario[j],SelectionTraj[1],".txt",sep="")#
	Data <- read.table(TrajectoryFile)#
	ColorViridis <- viridis(5)#
	ColorViridisAlpha <- viridis(5,alpha=0.6)#
	Color <- col2rgb("black")#
	if (j==7 || j==8){#
		plot(Data$V1[5000:1],Data$V2[1:5000],xlab="Time before the present",ylab="Mean Allele Frequency",type="l",xlim=c(XLimFigureOne[j],5000),ylim=c(0,ListMaxFreq[1]*1.3),main="B) Average Frequency \nTrajectory",xaxt="n",cex.lab=2.5,cex.main=2.5,cex.axis=2.5,lwd=6,col=ColorViridis[3])#
	}else{#
		plot(Data$V1[5000:1],Data$V2[1:5000],xlab="Time before the present",ylab="Mean Allele Frequency",type="l",xlim=c(XLimFigureOne[j],5000),ylim=c(0,ListMaxFreq[1]),main="B) Average Frequency \nTrajectory",xaxt="n",cex.lab=2.5,cex.main=2.5,cex.axis=2.5,lwd=6,col=ColorViridis[3])#
	}#
#lines(Data$V1[5000:1],Data$V3[1:5000],lty=3)#
#lines(Data$V1[5000:1],Data$V4[1:5000],lty=3)#
#lines(Data$V1[10000:1],ISData$V2[1:10000],lwd=10,col=rgb(Color[1,1],Color[2,1],Color[3,1],100,maxColorValue=255))#
	if (j==7 || j==8){#
	abline(v=5000-100,lty=3,cex=3,lwd=3)#
	}#
	if (j==1 || j==2){#
		abline(v=5000-5000,lty=3,lwd=3)#
		abline(v=5000-5200,lty=3,lwd=3)#
	}#
	if (j==5 || j==6){#
		abline(v=5000-2000,lty=3,lwd=3)#
		abline(v=5000-2200,lty=3,lwd=3)#
	}#
	if (j==9 || j==10){#
		abline(v=5000-100,lty=3,cex=3,lwd=3)#
		abline(v=5000-300,lty=3,cex=3,lwd=3)#
	}#
	if (j==9 || j==10){#
		abline(v=5000-100,lty=3,cex=3,lwd=3)#
		abline(v=5000-300,lty=3,cex=3,lwd=3)#
	}#
	if (j==12){#
		abline(v=5000-61,lty=3,cex=3,lwd=3)#
		abline(v=5000-(61+229),lty=3,cex=3,lwd=3)#
		abline(v=5000-(61+229+352),lty=3,cex=3,lwd=3)#
		abline(v=5000-(61+229+352+1221),lty=3,cex=3,lwd=3)#
		abline(v=5000-(61+229+352+1221),lty=3,cex=3,lwd=3)#
		abline(v=5000-(61+229+352+1221+22971),lty=3,cex=3,lwd=3)#
#
	}#
	TrajectoryFile <- paste("../Results/FrequencyTrajectories/OutMeanTraj",DemScenario[j],SelectionTraj[2],".txt",sep="")#
	Data <- read.table(TrajectoryFile)#
	Color <- col2rgb("purple")#
	lines(Data$V1[5000:1],Data$V2[1:5000],lwd=6,col=ColorViridis[2])#
#lines(Data$V1[5000:1],Data$V3[1:5000],lty=3,col="purple")#
#lines(Data$V1[5000:1],Data$V4[1:5000],lty=3,col="purple")#
#lines(Data$V1[10000:1],ISData$V3[1:10000],lwd=10,col=rgb(Color[1,1],Color[2,1],Color[3,1],100,maxColorValue=255))#
	TrajectoryFile <- paste("../Results/FrequencyTrajectories/OutMeanTraj",DemScenario[j],SelectionTraj[3],".txt",sep="")#
	Data <- read.table(TrajectoryFile)#
	Color <- col2rgb("orange")#
	lines(Data$V1[5000:1],Data$V2[1:5000],lwd=6,col=ColorViridis[1])#
#lines(Data$V1[5000:1],Data$V3[1:5000],lty=3,col="orange")#
#lines(Data$V1[5000:1],Data$V4[1:5000],lty=3,col="orange")#
#lines(Data$V1[10000:1],ISData$V4[1:10000],lwd=10,col=rgb(Color[1,1],Color[2,1],Color[3,1],100,maxColorValue=255))#
	TrajectoryFile <- paste("../Results/FrequencyTrajectories/OutMeanTraj",DemScenario[j],SelectionTraj[4],".txt",sep="")#
	Data <- read.table(TrajectoryFile)#
	lines(Data$V1[5000:1],Data$V2[1:5000],lty=5,lwd=6,col=ColorViridis[4])#
#lines(Data$V1[5000:1],Data$V3[1:5000],lty=3,col="red")#
#lines(Data$V1[5000:1],Data$V4[1:5000],lty=3,col="red")#
	TrajectoryFile <- paste("../Results/FrequencyTrajectories/OutMeanTraj",DemScenario[j],SelectionTraj[5],".txt",sep="")#
	Data <- read.table(TrajectoryFile)#
	lines(Data$V1[5000:1],Data$V2[1:5000],lty=5,lwd=6,col=ColorViridis[5])#
#lines(Data$V1[5000:1],Data$V3[1:5000],lty=3,col="dodgerblue")#
#lines(Data$V1[5000:1],Data$V4[1:5000],lty=3,col="dodgerblue")#
	if (j == 1 || j == 2 ){#
	legend("center",c("-100","-50","0","50","100"), lty=c(1,1,1,6,6),lwd=6,col=ColorViridis,cex=2,title=expression(paste(4,N[0],'s',sep="")),bty="n")#
	}else if( j == 5){#
	legend(5000-1500,0.0078,c("-100","-50","0","50","100"), lty=c(1,1,1,6,6),lwd=6,col=ColorViridis,cex=2,title=expression(paste(4,N[0],'s',sep="")),bty="n")#
	}else if( j == 6){#
		legend(5000-1600,0.0035,c("-100","-50","0","50","100"), lty=c(1,1,1,6,6),lwd=6,col=ColorViridis,cex=2,title=expression(paste(4,N[0],'s',sep="")),bty="n")#
	}else if( j == 9){#
		legend(5000-1500,0.017,c("-100","-50","0","50","100"), lty=c(1,1,1,6,6),lwd=6,col=ColorViridis,cex=2,title=expression(paste(4,N[0],'s',sep="")),bty="n")#
	}else if( j == 10){#
		legend(5000-1500,0.0065,c("-100","-50","0","50","100"), lty=c(1,1,1,6,6),lwd=6,col=ColorViridis,cex=2,title=expression(paste(4,N[0],'s',sep="")),bty="n")#
	}else if (j == 7 || j == 8 ){#
		legend("topleft",c("-100","-50","0","50","100"), lty=c(1,1,1,6,6),lwd=6,col=ColorViridis,cex=2,title=expression(paste(4,N[0],'s',sep="")),bty="n")	#
	}else if (j == 3 ||j == 4 ||j == 11){#
		legend("center",c("-100","-50","0","50","100"), lty=c(1,1,1,6,6),lwd=6,col=ColorViridis,cex=2,title=expression(paste(4,N,'s',sep="")),bty="n")#
	}#
#legend("topleft",c("0","-50","-100","50","100"),pch=19,col=c("black","purple","orange","red","dodgerblue"),cex=1.5,title="4Ns",bty="n")#
	axis(1,at=c(5000,4000,3000,1000,0),labels=c("Present","1000","2000","4000","5000"),cex.lab=2.5,cex.axis=2.5)#
	legend("topleft",c("-50","-25","0","25","50"), lty=c(1,1,1,6,6),lwd=6,col=ColorViridis,cex=1.2,title=expression(paste(4,N[0],'s',sep="")),bty="n")#
#
	par(mar=c(5,5,5,2) + 0.1)#
	AgesFile <- paste("../Results/AlleleAges/Ages",DemScenario[j],"_",SelectionTestAge[1],".txt",sep="")#
	Data <- read.table(AgesFile)#
	Color <- col2rgb("black")#
	Max <- quantile(Data$V1*Ne[j]*2,0.99)#
	if (j==7){#
		Breaks <- seq(from=0,to=max(Data$V1*Ne[j]*2+50),by=50)#
		Histogram <- hist(Data$V1*2*Ne[j],breaks=Breaks,plot=FALSE)#
		XSubset <- subset(rev(density(Data$V1*Ne[j]*2,from=0,to=Max)$x),rev(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)<=XLimFigureTwo[j]*0.78 )#
		Length <- length(XSubset) - 1#
		MaxLength <- length(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)#
		plot(rev(c(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j] + 0.22*(XLimFigureTwo[j]),density(Data$V1*Ne[j]*2,from=0,to=Max)$x[(MaxLength-Length):(MaxLength)])),density(Data$V1*Ne[j]*2,from=0,to=Max)$y[1:(Length+2)],xlab="Allele Age",ylab="Probability",type="l",ylim=c(-0.2*ListMaxAge[1],ListMaxAge[1]),main="C) Allele Age",xaxt="n",yaxt="n",col=ColorViridis[3],cex.lab=2.5,cex.main=2.5,cex.axis=2.5,lwd=6,xlim=c(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j],max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)))#
		SD <- sd(Data$V1*Ne[j]*2)#
		arrows(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j]+0.1*XLimFigureTwo[j],-0.12*ListMaxAge[1],min(Max- mean(Data$V1*Ne[j]*2)+SD,Max),-0.12*ListMaxAge[1], length=0.05, angle=90, code=3,col=ColorViridis[3],lwd=6)#
#		plot(max(Data$V1*Ne[j]*2) - 0:99*50,Histogram$counts[1:100]/sum(Histogram$counts),xlab="Allele Age",ylab="Probability",type="l",ylim=c(0,YLimFigureTwo[j]),main="B) Allele Age",xaxt="n",cex.lab=2,cex.main=2,cex.axis=1.5,lwd=6,xlim=c(max(density(Data$V1*Ne[j]*2,from=0)$x)-XLimFigureTwo[j],max(Data$V1*Ne[j]*2)))#
#		abline(v=mean(Max- Data$V1*Ne[j]*2),lwd=6,col=ColorViridisAlpha[3])#
		points(Max - mean(Data$V1*Ne[j]*2),-0.12*ListMaxAge[1],pch=20,col=ColorViridis[3],cex=3)#
		axis(2,at=c(0,0.002,0.004,0.006,0.008,0.01,0.012,0.014,0.016,0.018,0.02),labels=c("0","0.002","0.004","0.006","0.008","0.01","0.012","0.014","0.016","0.018","0.02"),cex.lab=2.5,cex.axis=2.5)#
## X values #
		XFirstValue <- max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x) - 0.8*XLimFigureTwo[j]#
		Threshold <- mean(Data$V1*Ne[j]*2) + SD-0.1*XLimFigureTwo[j]#
		SubsetXValues <- subset(density(Data$V1*Ne[j]*2,from=0,to=Max)$x,density(Data$V1*Ne[j]*2,from=0,to=Max)$x > Threshold)#
		SubsetYValues <- subset(density(Data$V1*Ne[j]*2,from=0,to=Max)$y,density(Data$V1*Ne[j]*2,from=0,to=Max)$x > Threshold)#
		YValuesToPrint <- c(density(Data$V1*Ne[j]*2,from=0,to=Max)$y[length(density(Data$V1*Ne[j]*2,from=0,to=Max)$y) - length(SubsetYValues)],SubsetYValues)#
		TransformedXValues <- SubsetXValues - Threshold#
		XValuesToPrint <- c(XFirstValue,XFirstValue-TransformedXValues)#
		lines(rev(c(XValuesToPrint)),YValuesToPrint,col=ColorViridis[3],lwd=6 )#
	}else{#
		Breaks <- seq(from=0,to=max(Data$V1*Ne[j]*2+50),by=50)#
		Histogram <- hist(Data$V1*2*Ne[j],breaks=Breaks,plot=FALSE)#
		XSubset <- subset(rev(density(Data$V1*Ne[j]*2,from=0,to=Max)$x),rev(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)<=XLimFigureTwo[j]*0.78 )#
		Length <- length(XSubset) - 1#
		MaxLength <- length(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)#
		plot(rev(c(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j] + 0.22*(XLimFigureTwo[j]),density(Data$V1*Ne[j]*2,from=0,to=Max)$x[(MaxLength-Length):(MaxLength)])),density(Data$V1*Ne[j]*2,from=0,to=Max)$y[1:(Length+2)],xlab="Allele Age",ylab="Probability",type="l",ylim=c(-0.2*ListMaxAge[1],ListMaxAge[1]),main="C) Allele Age",xaxt="n",yaxt="n",col=ColorViridis[3],cex.lab=2.5,cex.main=2.5,cex.axis=2.5,lwd=6,xlim=c(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j],max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)))#
		SD <- sd(Data$V1*Ne[j]*2)#
		arrows(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j]+0.1*XLimFigureTwo[j],-0.12*ListMaxAge[1],min(Max- mean(Data$V1*Ne[j]*2)+SD,Max),-0.12*ListMaxAge[1], length=0.05, angle=90, code=3,col=ColorViridis[3],lwd=6)#
#		abline(v=mean(Max - Data$V1*Ne[j]*2),lwd=6,col=ColorViridisAlpha[3])#
		points(Max - mean(Data$V1*Ne[j]*2),-0.12*ListMaxAge[1],pch=20,col=ColorViridis[3],cex=3)#
#		plot(max(Data$V1*Ne[j]*2) - 0:99*50,Histogram$counts[1:100]/sum(Histogram$counts),xlab="Allele Age",ylab="Probability",type="l",ylim=c(0,YLimFigureTwo[j]),main="B) Allele Age",xaxt="n",cex.lab=2,cex.main=2,cex.axis=1.5,lwd=6,xlim=c(max(density(Data$V1*Ne[j]*2,from=0)$x)-XLimFigureTwo[j],max(Data$V1*Ne[j]*2)))#
		axis(2,at=c(0,0.002,0.004,0.006,0.008,0.01,0.012,0.014,0.016,0.018,0.02),labels=c("0","0.002","0.004","0.006","0.008","0.01","0.012","0.014","0.016","0.018","0.02"),cex.lab=2.5,cex.axis=2.5)#
## X values #
		XFirstValue <- max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x) - 0.8*XLimFigureTwo[j]#
		Threshold <- mean(Data$V1*Ne[j]*2) + SD-0.1*XLimFigureTwo[j]#
		SubsetXValues <- subset(density(Data$V1*Ne[j]*2,from=0,to=Max)$x,density(Data$V1*Ne[j]*2,from=0,to=Max)$x > Threshold)#
		SubsetYValues <- subset(density(Data$V1*Ne[j]*2,from=0,to=Max)$y,density(Data$V1*Ne[j]*2,from=0,to=Max)$x > Threshold)#
		YValuesToPrint <- c(density(Data$V1*Ne[j]*2,from=0,to=Max)$y[length(density(Data$V1*Ne[j]*2,from=0,to=Max)$y) - length(SubsetYValues)],SubsetYValues)#
		TransformedXValues <- SubsetXValues - Threshold#
		XValuesToPrint <- c(XFirstValue,XFirstValue-TransformedXValues)#
		lines(rev(c(XValuesToPrint)),YValuesToPrint,col=ColorViridis[3],lwd=6 )#
	}#
	if (j==7 || j==8){#
#		abline(v=max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-100,lty=3,lwd=3)#
		segments(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-100,0,max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-100,100,lty=3,lwd=3)#
	}#
	if (j==1 || j==2){#
#		abline(v=max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-5000,lty=3,lwd=3)#
#		abline(v=max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-5200,lty=3,lwd=3)#
		segments(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-5000,0,max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-5000,100,lty=3,lwd=3)#
		segments(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-5200,0,max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-5200,300,lty=3,lwd=3)#
	}#
	if (j==5 || j==6){#
#		abline(v=max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-2000,lty=3,lwd=3)#
#		abline(v=max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-2200,lty=3,lwd=3)#
		segments(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-2000,0,max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-2000,100,lty=3,lwd=3)#
		segments(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-2200,0,max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-2200,300,lty=3,lwd=3)#
	}#
	if (j==9 || j==10){#
#		abline(v=max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-100,lty=3,lwd=3)#
#		abline(v=max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-300,lty=3,lwd=3)#
		segments(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-100,0,max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-100,100,lty=3,lwd=3)#
		segments(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-300,0,max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-300,300,lty=3,lwd=3)#
	}#
	ValueToPrintXAxis <- round(mean(Data$V1*Ne[j]*2)+SD)#
	AgesFile <- paste("../Results/AlleleAges/Ages",DemScenario[j],"_",SelectionTestAge[2],".txt",sep="")#
	Data <- read.table(AgesFile)#
	Breaks <- seq(from=0,to=max(Data$V1*Ne[j]*2+50),by=50)#
	Histogram <- hist(Data$V1*2*Ne[j],breaks=Breaks,plot=FALSE)#
	Color <- col2rgb("purple")#
# lines(Max  - 0:99*50,Histogram$counts[1:100]/sum(Histogram$counts),col="purple",lwd=6)#
	lines(rev(c(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j] + 0.22*(XLimFigureTwo[j]),density(Data$V1*Ne[j]*2,from=0,to=Max)$x[(MaxLength-Length):(MaxLength)])),density(Data$V1*Ne[j]*2,from=0,to=Max)$y[1:(Length+2)],col=ColorViridis[2],lwd=6)#
	SD <- sd(Data$V1*Ne[j]*2)#
	arrows(Max- mean(Data$V1*Ne[j]*2)-SD,-0.08*ListMaxAge[1],min(Max- mean(Data$V1*Ne[j]*2)+SD,Max),-0.08*ListMaxAge[1], length=0.05, angle=90, code=3,col=ColorViridis[2],lwd=6)#
## X values #
	XFirstValue <- max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x) - 0.8*XLimFigureTwo[j]#
	Threshold <- mean(Data$V1*Ne[j]*2) + SD-0.1*XLimFigureTwo[j]#
	SubsetXValues <- subset(density(Data$V1*Ne[j]*2,from=0,to=Max)$x,density(Data$V1*Ne[j]*2,from=0,to=Max)$x > Threshold)#
	SubsetYValues <- subset(density(Data$V1*Ne[j]*2,from=0,to=Max)$y,density(Data$V1*Ne[j]*2,from=0,to=Max)$x > Threshold)#
	YValuesToPrint <- c(density(Data$V1*Ne[j]*2,from=0,to=Max)$y[length(density(Data$V1*Ne[j]*2,from=0,to=Max)$y) - length(SubsetYValues)],SubsetYValues)#
	TransformedXValues <- SubsetXValues - Threshold#
	XValuesToPrint <- c(XFirstValue,XFirstValue-TransformedXValues)#
#	Check <- length(subset(density(Data$V1*Ne[j]*2,from=0,to=Max)$x,density(Data$V1*Ne[j]*2,from=0,to=Max)$x > (mean(Data$V1*Ne[j]*2)+SD - 0.1*XLimFigureTwo[j])))#
#	StartingYValue <- length(density(Data$V1*Ne[j]*2,from=0,to=Max)$x) - Check#
	lines(rev(c(XValuesToPrint)),YValuesToPrint,col=ColorViridis[2],lwd=6 )#
#	abline(v=mean(Max - Data$V1*Ne[j]*2),lwd=6,col=ColorViridisAlpha[2])#
	points(Max - mean(Data$V1*Ne[j]*2),-0.08*ListMaxAge[1],pch=20,col=ColorViridis[2],cex=3)#
	AgesFile <- paste("../Results/AlleleAges/Ages",DemScenario[j],"_",SelectionTestAge[3],".txt",sep="")#
	Data <- read.table(AgesFile)#
	Breaks <- seq(from=0,to=max(Data$V1*Ne[j]*2+50),by=50)#
	Histogram <- hist(Data$V1*2*Ne[j],breaks=Breaks,plot=FALSE)#
	Color <- col2rgb("orange")#
#lines(Max  - 0:99*50,Histogram$counts[1:100]/sum(Histogram$counts),col="orange",lwd=6)#
	lines(rev(c(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j] + 0.22*(XLimFigureTwo[j]),density(Data$V1*Ne[j]*2,from=0,to=Max)$x[(MaxLength-Length):(MaxLength)])),density(Data$V1*Ne[j]*2,from=0,to=Max)$y[1:(Length+2)],col=ColorViridis[1],lwd=6)#
	SD <- sd(Data$V1*Ne[j]*2)#
	arrows(Max- mean(Data$V1*Ne[j]*2)-SD,-0.04*ListMaxAge[1],min(Max- mean(Data$V1*Ne[j]*2)+SD,Max),-0.04*ListMaxAge[1], length=0.05, angle=90, code=3,col=ColorViridis[1],lwd=6)#
## X values #
	XFirstValue <- max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x) - 0.8*XLimFigureTwo[j]#
	Threshold <- mean(Data$V1*Ne[j]*2) + SD-0.1*XLimFigureTwo[j]#
	SubsetXValues <- subset(density(Data$V1*Ne[j]*2,from=0,to=Max)$x,density(Data$V1*Ne[j]*2,from=0,to=Max)$x > Threshold)#
	SubsetYValues <- subset(density(Data$V1*Ne[j]*2,from=0,to=Max)$y,density(Data$V1*Ne[j]*2,from=0,to=Max)$x > Threshold)#
	YValuesToPrint <- c(density(Data$V1*Ne[j]*2,from=0,to=Max)$y[length(density(Data$V1*Ne[j]*2,from=0,to=Max)$y) - length(SubsetYValues)],SubsetYValues)#
	TransformedXValues <- SubsetXValues - Threshold#
	XValuesToPrint <- c(XFirstValue,XFirstValue-TransformedXValues)#
#	Check <- length(subset(density(Data$V1*Ne[j]*2,from=0,to=Max)$x,density(Data$V1*Ne[j]*2,from=0,to=Max)$x > (mean(Data$V1*Ne[j]*2)+SD - 0.1*XLimFigureTwo[j])))#
#	StartingYValue <- length(density(Data$V1*Ne[j]*2,from=0,to=Max)$x) - Check#
	lines(rev(c(XValuesToPrint)),YValuesToPrint,col=ColorViridis[1],lwd=6 )#
#abline(v=mean(Max - Data$V1*Ne[j]*2),lwd=6,col=ColorViridisAlpha[1])#
	points(Max - mean(Data$V1*Ne[j]*2),-0.04*ListMaxAge[1],pch=20,col=ColorViridis[1],cex=3)#
	AgesFile <- paste("../Results/AlleleAges/Ages",DemScenario[j],"_",SelectionTestAge[4],".txt",sep="")#
	Data <- read.table(AgesFile)#
	Breaks <- seq(from=0,to=max(Data$V1*Ne[j]*2+50),by=50)#
	Histogram <- hist(Data$V1*2*Ne[j],breaks=Breaks,plot=FALSE)#
#lines(Max  - 0:99*50,Histogram$counts[1:100]/sum(Histogram$counts),col="red",lty=5,lwd=6)#
	lines(rev(c(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j] + 0.22*(XLimFigureTwo[j]),density(Data$V1*Ne[j]*2,from=0,to=Max)$x[(MaxLength-Length):(MaxLength)])),density(Data$V1*Ne[j]*2,from=0,to=Max)$y[1:(Length+2)],lty=5,col=ColorViridis[4],lwd=6)#
#abline(v=mean(Max - Data$V1*Ne[j]*2),lty=5,lwd=6,col=ColorViridisAlpha[4])#
	SD <- sd(Data$V1*Ne[j]*2)#
	arrows(Max- mean(Data$V1*Ne[j]*2)-SD,-0.16*ListMaxAge[1],min(Max- mean(Data$V1*Ne[j]*2)+SD,Max),-0.16*ListMaxAge[1], length=0.05, angle=90, code=3,col=ColorViridis[4],lwd=6)#
## X values #
	XFirstValue <- max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x) - 0.8*XLimFigureTwo[j]#
	Threshold <- mean(Data$V1*Ne[j]*2) + SD-0.1*XLimFigureTwo[j]#
	SubsetXValues <- subset(density(Data$V1*Ne[j]*2,from=0,to=Max)$x,density(Data$V1*Ne[j]*2,from=0,to=Max)$x > Threshold)#
	SubsetYValues <- subset(density(Data$V1*Ne[j]*2,from=0,to=Max)$y,density(Data$V1*Ne[j]*2,from=0,to=Max)$x > Threshold)#
	YValuesToPrint <- c(density(Data$V1*Ne[j]*2,from=0,to=Max)$y[length(density(Data$V1*Ne[j]*2,from=0,to=Max)$y) - length(SubsetYValues)],SubsetYValues)#
	TransformedXValues <- SubsetXValues - Threshold#
	XValuesToPrint <- c(XFirstValue,XFirstValue-TransformedXValues)#
#	Check <- length(subset(density(Data$V1*Ne[j]*2,from=0,to=Max)$x,density(Data$V1*Ne[j]*2,from=0,to=Max)$x > (mean(Data$V1*Ne[j]*2)+SD - 0.1*XLimFigureTwo[j])))#
#	StartingYValue <- length(density(Data$V1*Ne[j]*2,from=0,to=Max)$x) - Check#
	lines(rev(c(XValuesToPrint)),YValuesToPrint,col=ColorViridis[4],lwd=6 ,lty=5)#
	points(Max - mean(Data$V1*Ne[j]*2),-0.16*ListMaxAge[1],pch=20,col=ColorViridis[4],cex=3)#
	AgesFile <- paste("../Results/AlleleAges/Ages",DemScenario[j],"_",SelectionTestAge[5],".txt",sep="")#
	Data <- read.table(AgesFile)#
	Breaks <- seq(from=0,to=max(Data$V1*Ne[j]*2+50),by=50)#
	Histogram <- hist(Data$V1*2*Ne[j],breaks=Breaks,plot=FALSE)#
#lines(Max  - 0:99*50,Histogram$counts[1:100]/sum(Histogram$counts),col="dodgerblue",lty=5,lwd=6)#
	lines(rev(c(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j] + 0.22*(XLimFigureTwo[j]),density(Data$V1*Ne[j]*2,from=0,to=Max)$x[(MaxLength-Length):(MaxLength)])),density(Data$V1*Ne[j]*2,from=0,to=Max)$y[1:(Length+2)],lty=5,col=ColorViridis[5],lwd=6)#
	SD <- sd(Data$V1*Ne[j]*2)#
	arrows(Max- mean(Data$V1*Ne[j]*2)-SD,-0.2*ListMaxAge[1],min(Max- mean(Data$V1*Ne[j]*2)+SD,Max),-0.2*ListMaxAge[1], length=0.05, angle=90, code=3,col=ColorViridis[5],lwd=6)#
## X values #
	XFirstValue <- max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x) - 0.8*XLimFigureTwo[j]#
	Threshold <- mean(Data$V1*Ne[j]*2) + SD-0.1*XLimFigureTwo[j]#
	SubsetXValues <- subset(density(Data$V1*Ne[j]*2,from=0,to=Max)$x,density(Data$V1*Ne[j]*2,from=0,to=Max)$x > Threshold)#
	SubsetYValues <- subset(density(Data$V1*Ne[j]*2,from=0,to=Max)$y,density(Data$V1*Ne[j]*2,from=0,to=Max)$x > Threshold)#
	YValuesToPrint <- c(density(Data$V1*Ne[j]*2,from=0,to=Max)$y[length(density(Data$V1*Ne[j]*2,from=0,to=Max)$y) - length(SubsetYValues)],SubsetYValues)#
	TransformedXValues <- SubsetXValues - Threshold#
	XValuesToPrint <- c(XFirstValue,XFirstValue-TransformedXValues)#
#	Check <- length(subset(density(Data$V1*Ne[j]*2,from=0,to=Max)$x,density(Data$V1*Ne[j]*2,from=0,to=Max)$x > (mean(Data$V1*Ne[j]*2)+SD - 0.1*XLimFigureTwo[j])))#
#	StartingYValue <- length(density(Data$V1*Ne[j]*2,from=0,to=Max)$x) - Check#
	lines(rev(c(XValuesToPrint)),YValuesToPrint,col=ColorViridis[5],lwd=6,lty=5 )#
	points(Max - mean(Data$V1*Ne[j]*2),-0.2*ListMaxAge[1],pch=20,col=ColorViridis[5],cex=3)#
#	legend("topleft",c("-100","-50","0","50","100"), lty=c(1,1,1,6,6),lwd=6,col=ColorViridis,cex=2,title="4Ns",bty="n")#
#	XLimFigureTwo[1]=1500#
#	XLimFigureTwo[2]=900#
#	XLimFigureTwo[3]=3000#
#	XLimFigureTwo[4]=2000#
#	XLimFigureTwo[5]=1500#
#	XLimFigureTwo[6]=900#
#	XLimFigureTwo[7]=1750#
#	XLimFigureTwo[8]=1000#
#	XLimFigureTwo[9]=2000#
#	XLimFigureTwo[10]=900#
#	XLimFigureTwo[11]=3000#
	if (XLimFigureTwo[j] <= 1000){#
		axis(1,at=c(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j] + 0.1*(XLimFigureTwo[j]),Max-500,Max-250,Max),labels=c(ValueToPrintXAxis,"500","250","Present"),cex.lab=2.5,cex.axis=2.5)#
	}else if (XLimFigureTwo[j] <= 1500){#
		axis(1,at=c(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j] + 0.1*(XLimFigureTwo[j]),Max-1000,Max-500,Max),labels=c(ValueToPrintXAxis,"1000","500","Present"),cex.lab=2.5,cex.axis=2.5)#
	}else if (XLimFigureTwo[j] <= 1750){#
		axis(1,at=c(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j] + 0.1*(XLimFigureTwo[j]),Max-1000,Max-500,Max),labels=c(ValueToPrintXAxis,"1000","500","Present"),cex.lab=2.5,cex.axis=2.5)#
	}else if (XLimFigureTwo[j] <= 2000){#
		axis(1,at=c(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j] + 0.1*(XLimFigureTwo[j]),Max-1500,Max-1000,Max-500,Max),labels=c(ValueToPrintXAxis,"1500","1000","500","Present"),cex.lab=2.5,cex.axis=2.5)#
	}else if (XLimFigureTwo[j] <= 3000){#
		axis(1,at=c(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j] + 0.1*(XLimFigureTwo[j]),Max-4000,Max-3000,Max-2000,Max-1000,Max),labels=c(ValueToPrintXAxis,"4000","3000","2000","1000","Present"),cex.lab=2.5,cex.axis=2.5)#
	}#
#	axis(1,at=c(Max-2500,Max-2000,Max-1500,Max-1000,Max-500,Max),labels=c("2500","2000","1500","1000","500","Present"),cex.lab=2,cex.axis=2)#
#	rect(max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j]+10,-0.02*ListMaxAge[j],max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j]+0.2*(XLimFigureTwo[j]),ListMaxAge[j],col="white",border=NA)#
	Color <- col2rgb("black")#
	axis.break(1, max(density(Data$V1*Ne[j]*2,from=0,to=Max)$x)-XLimFigureTwo[j] + 0.2*(XLimFigureTwo[j]), style = "gap")#
#
	AgesFile <- paste("../Results/TTwos/",DemScenario[j],"_",SelectionTest[1],".txt",sep="")#
	Data <- read.table(AgesFile)#
#
    par(mar=c(5,5,5,3) + 0.1)#
#
	plot(Data$V1[XLimFigureThree[j]:1],Data$V2[1:XLimFigureThree[j]],xlab=expression(bold(T[2])),ylab="Probability",type="l",main=expression(bold(paste("D) ",T[2],sep=""))),ylim=c(-0.2*ListMaxT2[1],1.05*ListMaxT2[1]),xaxt="n",yaxt="n",cex.lab=2.5,cex.main=2.5,cex.axis=2.5,lwd=6,col=ColorViridis[3])#
#,ylim=c(0,1.0)#
	if (j==7 || j==8){#
#		abline(v=Data$V1[XLimFigureThree[j]]-100,lty=3,lwd=3)#
		segments(Data$V1[XLimFigureThree[j]]-100,0,Data$V1[XLimFigureThree[j]]-100,100,lty=3,lwd=3)#
	}#
	if (j==1 || j==2){#
#		abline(v=Data$V1[XLimFigureThree[j]]-5000,lty=3,lwd=3)#
#		abline(v=Data$V1[XLimFigureThree[j]]-5200,lty=3,lwd=3)#
		segments(Data$V1[XLimFigureThree[j]]-5000,0,Data$V1[XLimFigureThree[j]]-5000,100,lty=3,lwd=3)#
		segments(Data$V1[XLimFigureThree[j]]-5200,0,Data$V1[XLimFigureThree[j]]-5200,300,lty=3,lwd=3)#
	}#
	if (j==5 || j==6){#
#		abline(v=Data$V1[XLimFigureThree[j]]-2000,lty=3,lwd=3)#
#		abline(v=Data$V1[XLimFigureThree[j]]-2200,lty=3,lwd=3)#
		segments(Data$V1[XLimFigureThree[j]]-2000,0,Data$V1[XLimFigureThree[j]]-2000,100,lty=3,lwd=3)#
		segments(Data$V1[XLimFigureThree[j]]-2200,0,Data$V1[XLimFigureThree[j]]-2200,300,lty=3,lwd=3)#
	}#
	if (j==9 || j==10){#
#		abline(v=Data$V1[XLimFigureThree[j]]-100,lty=3,lwd=3)#
#		abline(v=Data$V1[XLimFigureThree[j]]-300,lty=3,lwd=3)#
		segments(Data$V1[XLimFigureThree[j]]-100,0,Data$V1[XLimFigureThree[j]]-100,100,lty=3,lwd=3)#
		segments(Data$V1[XLimFigureThree[j]]-300,0,Data$V1[XLimFigureThree[j]]-100,300,lty=3,lwd=3)#
	}#
	SD <- (sum(Data$V1*Data$V1*Data$V2) - sum(Data$V1*Data$V2)*sum(Data$V1*Data$V2))^(1/2)#
	arrows(XLimFigureThree[j]- sum(Data$V1*Data$V2)-SD,-0.12*ListMaxT2[1],min(XLimFigureThree[j]- sum(Data$V1*Data$V2)+SD,XLimFigureThree[j]),-0.12*ListMaxT2[1], length=0.05, angle=90, code=3,col=ColorViridis[3],lwd=6)#
	points(XLimFigureThree[j]- sum(Data$V1*Data$V2),-0.12*ListMaxT2[1],pch=20,col=ColorViridis[3],cex=3)#
	AgesFile <- paste("../Results/TTwos/",DemScenario[j],"_",SelectionTest[2],".txt",sep="")#
	Data <- read.table(AgesFile)#
	Color <- col2rgb("purple")#
	lines(Data$V1[XLimFigureThree[j]:1],Data$V2[1:XLimFigureThree[j]],col=ColorViridis[2],lwd=6)#
	SD <- (sum(Data$V1*Data$V1*Data$V2) - sum(Data$V1*Data$V2)*sum(Data$V1*Data$V2))^(1/2)#
	arrows(XLimFigureThree[j]- sum(Data$V1*Data$V2)-SD,-0.08*ListMaxT2[1],min(XLimFigureThree[j]- sum(Data$V1*Data$V2)+SD,XLimFigureThree[j]),-0.08*ListMaxT2[1], length=0.05, angle=90, code=3,col=ColorViridis[2],lwd=6)#
	points(XLimFigureThree[j]- sum(Data$V1*Data$V2),-0.08*ListMaxT2[1],pch=20,col=ColorViridis[2],cex=3)#
	AgesFile <- paste("../Results/TTwos/",DemScenario[j],"_",SelectionTest[3],".txt",sep="")#
	Data <- read.table(AgesFile)#
	Color <- col2rgb("orange")#
	lines(Data$V1[XLimFigureThree[j]:1],Data$V2[1:XLimFigureThree[j]],col=ColorViridis[1],lwd=6)#
	SD <- (sum(Data$V1*Data$V1*Data$V2) - sum(Data$V1*Data$V2)*sum(Data$V1*Data$V2))^(1/2)#
	arrows(XLimFigureThree[j]- sum(Data$V1*Data$V2)-SD,-0.04*ListMaxT2[1],min(XLimFigureThree[j]- sum(Data$V1*Data$V2)+SD,XLimFigureThree[j]),-0.04*ListMaxT2[1], length=0.05, angle=90, code=3,col=ColorViridis[1],lwd=6)#
	points(XLimFigureThree[j]- sum(Data$V1*Data$V2),-0.04*ListMaxT2[1],pch=20,col=ColorViridis[1],cex=3)#
	AgesFile <- paste("../Results/TTwos/",DemScenario[j],"_",SelectionTest[4],".txt",sep="")#
	Data <- read.table(AgesFile)#
	lines(Data$V1[XLimFigureThree[j]:1],Data$V2[1:XLimFigureThree[j]],col=ColorViridis[4],lty=5,lwd=6)#
	SD <- (sum(Data$V1*Data$V1*Data$V2) - sum(Data$V1*Data$V2)*sum(Data$V1*Data$V2))^(1/2)#
	arrows(XLimFigureThree[j]- sum(Data$V1*Data$V2)-SD,-0.16*ListMaxT2[1],min(XLimFigureThree[j]- sum(Data$V1*Data$V2)+SD,XLimFigureThree[j]),-0.16*ListMaxT2[1], length=0.05, angle=90, code=3,col=ColorViridis[4],lwd=6)#
	points(XLimFigureThree[j]- sum(Data$V1*Data$V2),-0.16*ListMaxT2[1],pch=20,col=ColorViridis[4],cex=3)#
	AgesFile <- paste("../Results/TTwos/",DemScenario[j],"_",SelectionTest[5],".txt",sep="")#
	Data <- read.table(AgesFile)#
	lines(Data$V1[XLimFigureThree[j]:1],Data$V2[1:XLimFigureThree[j]],col=ColorViridis[5],lty=5,lwd=6)#
	SD <- (sum(Data$V1*Data$V1*Data$V2) - sum(Data$V1*Data$V2)*sum(Data$V1*Data$V2))^(1/2)#
	arrows(XLimFigureThree[j]- sum(Data$V1*Data$V2)-SD,-0.2*ListMaxT2[1],min(XLimFigureThree[j]- sum(Data$V1*Data$V2)+SD,XLimFigureThree[j]),-0.2*ListMaxT2[1], length=0.05, angle=90, code=3,col=ColorViridis[5],lwd=6)#
	points(XLimFigureThree[j]- sum(Data$V1*Data$V2),-0.2*ListMaxT2[1],pch=20,col=ColorViridis[5],cex=3)#
#legend("topleft",c("0","-50","-100","50","100"),pch=19,col=c("black","purple","orange","red","dodgerblue"),cex=1.5,title="4Ns",bty="n")#
	axis(1,at=c(XLimFigureThree[j]-700,XLimFigureThree[j]-600,XLimFigureThree[j]-500,XLimFigureThree[j]-400,XLimFigureThree[j]-300,XLimFigureThree[j]-200,XLimFigureThree[j]-100,XLimFigureThree[j]),labels=c("700","600","500","400","300","200","100","Present"),cex.lab=2.5,cex.axis=2.5)#
	axis(2,at=c(0,0.005,0.01,0.015,0.02,0.025,0.03,0.035,0.04),labels=c("0","0.005","0.01","0.015","0.02","0.025","0.03","0.035","0.04"),cex.lab=2.5,cex.axis=2.5)#
	dev.off()#
}
