sd(rbinom(100,98290*2,0.01))
sd(rbinom(100,113126*2,0.01))
mean(rbinom(100,113126*2,0.01))
mean(rbinom(100,98290*2,0.01))
mean(rbinom(100,98290*2,0.01))/98290*2
mean(rbinom(100,98290*2,0.01))/(98290*2)
sd(rbinom(100,98290*2,0.01))/(98290*2)
sd(rbinom(100,113126*2,0.01))/(113126*2)
Values <- rep(100,sd(rbinom(100,113126*2,0.01))/(113126*2))
mean(Values)
Values
sd(rbinom(10000,113126*2,0.01))/(113126*2)
sd(rbinom(10000,98920*2,0.01))/(98920*2)
sd(rbinom(10000,113126*2,0.01))/(113126*2)
0.0002092041*113126
0.0002233182*98920
8.536587/22
12.4719/33
144.89/405
12.4719/33
18.6131/51
19.4193/53
19.7753/55
1960.48/5396
25.78/69
26.9417/73
27.5635/4/3
27.5635/4*3
dbinom(10,100,0.01)
10 es it
100 es el tamano de la poblacion
0.01 x prima
Sum = 0
for i in (1:100){
for (i in 1:100){
Sum = Sum + dbinom(i,100,0.01)
}
Sum
Sum = 0
for (i in 0:100){
Sum = Sum + dbinom(i,100,0.01)
}
Sum
2226 + 785 + 342 + 178 + 114 + 81
2226 + 785 + 342 + 178 + 114 + 81 + 61 + 46 + 35 + 27 + 23 + 19 + 17 + 16 + 15 + 13 + 12 + 11 + 10
698197/5
8117/5
126237/5
198/5
553670/5
19157/5
152/5
321/5
718796/5
323/5
553670/5
100/50000
.002*1226
249/5
12170/5
2420/5
293/5
781587/5
3077/5
266/5
3097/5
218/5
7242*0.0095
7242*0.0105
0,999**10
0.999**10
230/5
3840/5
113100*5
437685/5
72/7242
71/7242
73/7242
1000000/5
90*10
900/60
library(here)#
#
FileNames <- c("../Results/RecMaps/LeftBpRecRatePerVariantNoCpGPrintMap269.txt", "../Results/RecMaps/RightBpRecRatePerVariantNoCpGPrintMap269.txt", "../Results/RecMaps/LeftBpRecRatePerVariantSynonymousNoCpGPrintMap143.txt", "../Results/RecMaps/RightBpRecRatePerVariantSynonymousNoCpGPrintMap143.txt")#
#
for (j in 1:2){#
#
Table <- read.table(FileNames[j])#
#
Table <- as.numeric(Table)#
#
RecMap <- rep(0,250001)#
#
ColumnToCheck <- Table$V2[1]#
StartingPosition <- Table$V3[1]#
EndingPosition <- Table$V4[1]#
#
NumberOfVariants <- 0#
CurrentPosition <- 0#
#
BoxplotAbsDiff <- c()#
#
CurrentRecRate <- rep(0,250001)#
#
for (i in 1:nrow(Table)){#
    if (Table$V2[i] != ColumnToCheck ){#
        CurrentPosition <- 0#
        StartingPosition <- Table$V3[i]#
        EndingPosition <- Table$V4[i]#
        NumberOfVariants <- NumberOfVariants + 1#
        ColumnToCheck <- Table$V2[i]#
        #        break#
        CurSum <- c()#
        CurSum <- c(CurSum,mean(CurrentRecRate[1:50000]))#
        CurSum <- c(CurSum,mean(CurrentRecRate[50001:100000]))#
        CurSum <- c(CurSum,mean(CurrentRecRate[100000:150000]))#
        CurSum <- c(CurSum,mean(CurrentRecRate[150001:200000]))#
        CurSum <- c(CurSum,mean(CurrentRecRate[200001:250000]))#
        TotalMean <- mean(CurrentRecRate)#
        AbsDifference <- 0#
        for (ind_i in 1:5){#
                AbsDifference <- AbsDifference + abs (CurSum[ind_i] - TotalMean)#
        }#
         AbsDifference <- AbsDifference / 5#
         if (AbsDifference == "NaN"){#
         AbsDifference <- 0#
         }#
        BoxplotAbsDiff <- c(BoxplotAbsDiff,sd(CurSum))#
        CurrentRecRate <- rep(0,250001)#
    }#
    if (i %% 1000 == 0){#
    print (i)#
    }#
    ToAdd <- Table$V3[i] - StartingPosition + 1#
    TheEnd <- Table$V4[i] - StartingPosition#
    #    print (ToAdd)#
    #    print (TheEnd)#
    #    break#
    RecMap[ToAdd:TheEnd] <- RecMap[ToAdd:TheEnd] + Table$V5[i]#
    CurrentRecRate[ToAdd:TheEnd] <- Table$V5[i]#
}#
#
if (j == 1){#
jpeg(filename = "../Figures/SuppFigure21_RecMapPlotsNS_Sites.jpeg", width = 960, quality = 90)#
RecMapNS <- RecMap[1:250000]/(27300)#
plot(1:250000,RecMap[1:250000]/(27300), xlim = c(0,500002),xlab = "Position",ylab = "Recombination rate",xaxt="n", ylim = c(0, 1.65e-7), pch = 19)#
axis(1,c(1,50001,100001,150001,200001,250001,300001,350001,400001,450001,500002),c("-250 kb","-200 kb","-150 kb","-100 kb", "-50 kb", "NS Variant","50 kb","100 kb","150kb", "200 kb", "250 kb"))#
Sums <- c()#
Sums <- c(Sums, sum(RecMap[1:50000]))#
Sums <- c(Sums, sum(RecMap[50001:100000]))#
Sums <- c(Sums, sum(RecMap[100001:150000]))#
Sums <- c(Sums, sum(RecMap[150001:200000]))#
Sums <- c(Sums, sum(RecMap[200001:250000]))#
#
NumbersToPrint <- formatC( Sums/(50000*27300),format = "e", digits = 2)#
text(25001,1.65e-7,NumbersToPrint[1])#
text(75001,1.65e-7,NumbersToPrint[2])#
text(125001,1.65e-7,NumbersToPrint[3])#
text(175001,1.65e-7,NumbersToPrint[4])#
text(225001,1.65e-7,NumbersToPrint[5])#
#
} else {#
points(250001:500000,RecMap[1:250000]/(27300), pch = 19)#
RecMapNS <- c(RecMapNS,RecMap[1:250000]/(27300))#
Sums <- c()#
Sums <- c(Sums, sum(RecMap[1:50000]))#
Sums <- c(Sums, sum(RecMap[50001:100000]))#
Sums <- c(Sums, sum(RecMap[100001:150000]))#
Sums <- c(Sums, sum(RecMap[150001:200000]))#
Sums <- c(Sums, sum(RecMap[200001:250000]))#
#
NumbersToPrint <- formatC( Sums/(50000*27300),format = "e", digits = 2)#
text(275001,1.65e-7,NumbersToPrint[1])#
text(325001,1.65e-7,NumbersToPrint[2])#
text(375001,1.65e-7,NumbersToPrint[3])#
text(425001,1.65e-7,NumbersToPrint[4])#
text(475001,1.65e-7,NumbersToPrint[5])#
#
}#
}#
#
dev.off()
3077/5
266/5
1.13/1.27
1.27/1.13
247/5
1495/5
90768/5
Data <- read.table("FullTable.txt")#
RecombinationQuantiles <- read.table("QuantilesRecombination.txt")#
#
RecValuesOne <- read.table("../ForwardSims/RecRateSynonymousOnePercentRightNoCpG.txt")#
RecValuesTwo <- read.table("../ForwardSims/RecRateSynonymousOnePercentLeftNoCpG.txt")#
RecValues <- rbind(RecValuesOne,RecValuesTwo)#
#
for (i in 1:546){#
}#
AllCoefficients <- c()#
#
for (i in 1:403){#
    Points <- Data[0:20*403 + i,2]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out1 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
    Points <- Data[0:20*403 + i,3]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out2 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
#
    Points <- Data[0:20*403 + i,4]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out3 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
    Points <- Data[0:20*403 + i,5]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out4 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
    Points <- Data[0:20*403 + i,6]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out5 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
    Points <- Data[0:20*403 + i,7]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out6 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
#
    Row <- c(lm.out1$coefficients, lm.out2$coefficients, lm.out3$coefficients, lm.out4$coefficients, lm.out5$coefficients, lm.out6$coefficients )#
    AllCoefficients <- rbind(AllCoefficients,Row)#
}#
#
write.table(AllCoefficients, file = "AllRegressionCoefficients.txt",row.names= FALSE,col.names = FALSE)#
#
# par(mfrow=c(2,3))#
#
TotalErrors <- c()#
i <- 1#
ConcatenateTestValues <- c()#
PolyNum <- 5#
for (FourNs in 1:403){#
print (FourNs)#
FirstElement <- c()#
FirstPoint <- c()#
RecTestValue <- 4000#
AllComparisons <- c(t(RecombinationQuantiles))#
for (i in 2:7){#
Points <- Data[0:20*403 + FourNs,i]#
Comparison <- cbind(RecombinationQuantiles,Points)#
AllComparisons <- cbind(AllComparisons, Points)#
lm.out1 = lm(Points ~ poly(V1,PolyNum,raw=TRUE),Comparison)#
# plot(Comparison$V1,Comparison$Points)#
#
Test <- 0#
SingleTest <- 0#
for (Nums in 1:(PolyNum+1)){#
#
CurrentMultiplication <- lm.out1$coefficients[Nums]#
SingleMult <- lm.out1$coefficients[Nums]#
if (Nums > 1){#
    for (MulNum in 1:(Nums - 1) ){#
    CurrentMultiplication <- CurrentMultiplication * RecombinationQuantiles$V1#
    SingleMult <- SingleMult * RecValues#
    }#
}#
Test <- Test + CurrentMultiplication#
SingleTest <- SingleTest + SingleMult#
}#
Error <- sum(abs(Points-Test))#
TotalErrors <- c(TotalErrors,Error)#
#
# Test <- lm.out1$coefficients[1] + lm.out1$coefficients[2] * RecombinationQuantiles$V1 + lm.out1$coefficients[3]* RecombinationQuantiles$V1* RecombinationQuantiles$V1 + lm.out1$coefficients[4]* RecombinationQuantiles$V1* RecombinationQuantiles$V1 * RecombinationQuantiles$V1 + lm.out1$coefficients[5]* RecombinationQuantiles$V1* RecombinationQuantiles$V1 * RecombinationQuantiles$V1* RecombinationQuantiles$V1#
#
# + lm.out1$coefficients[5]* RecombinationQuantiles$V1* RecombinationQuantiles$V1 * RecombinationQuantiles$V1* RecombinationQuantiles$V1 + lm.out1$coefficients[6]* RecombinationQuantiles$V1* RecombinationQuantiles$V1 * RecombinationQuantiles$V1* RecombinationQuantiles$V1 * RecombinationQuantiles$V1#
# lines(Comparison$V1,Test, col = "red")#
# points(t(RecValues), t(SingleTest), col = "blue")#
# SingleTest <- lm.out1$coefficients[1] + lm.out1$coefficients[2] * RecValues + lm.out1$coefficients[3]* RecValues * RecValues + lm.out1$coefficients[4]* RecValues * RecValues * RecValues + lm.out1$coefficients[5]* RecValues * RecValues * RecValues * RecValues#
# + lm.out1$coefficients[5]* RecValues * RecValues * RecValues * RecValues + lm.out1$coefficients[6]* RecValues * RecValues * RecValues * RecValues  * RecValues#
ConcatenateTestValues <- rbind(ConcatenateTestValues, t(SingleTest))#
}#
#
print(Test)#
# FirstElement <- rbind(FirstElement, Test)#
# FirstPoint <- rbind(FirstPoint, Points)#
}#
#
#### AdditionalStep#
#
for (i in 1:284){#
    if (RecValues$V1[i] >= RecombinationQuantiles$V1[20]){#
        ConcatenateTestValues[,i] <- rep.int(1, 403*6)#
        print(i)#
    }#
}#
#
write.table(ConcatenateTestValues, file = "PLGivenSTableWithRecsSyn.txt",row.names= FALSE,col.names = FALSE)#
#
Stuff <- c()#
for (i in 1:403){#
Stuff <- rbind(Stuff,c( ConcatenateTestValues[ i * 6 + 1:6,545] ))#
}#
Stuff#
write.table(Stuff,"AyCaon.txt",sep="\t")
6/100
21*800
1*10 *1 * 1000
100*21
1000*21
( 1 * 10 + $Repetition) * 1000
( 1 * 10 + 1) * 1000
( 2 * 10 + 1) * 1000
( 3 * 10 + 1) * 1000
16331.1/75255
26856.2/75255
100/12
9*5
100/14
5/8
5/78
7264.35*2/3
25000*20
500000
4*1000*1e-8 * 100000
2/3 * 1 / 3
dbinom(1,142,1/142)
dbinom(0,142,1/142)
dbinom(2,142,1/142)
dbinom(3,142,1/142)
dbinom(4,142,1/142)
86270/5
13*6
40*5
200/6
200/60
120000*3/20
10000*20
0.03031/0.01767
0.04735/0.02700
24000*20
480000/12
4.98-2.45
2*6
12
2*7
6*7
33.87/3
19.05/3
1/.003
20 + 3 +1 + 11 + 2 + 5 + 2 + 8 + 6 + 1
20 + 3 +1 + 11 + 2 + 5 + 2 + 8 + 3 + 1 + 6 + 15
1 + 6 + 8 + 2 + 5 + 2 + 11 + 1 + 3 + 20 + 1 + 8 + 3 + 1 + 2 + 6 + 15
1 + 6 + 8 + 2 + 5 + 2 + 11 + 1 + 3 + 20 + 1 + 8 + 3 + 1 + 2 + 6 + 15 + 7
183 -141
0.0001088376*2*4594
200*0.0001088376*2*4594
4594*5
22970/2
10000/60
39440*2
100*10
235*20
360*20
18000*20
22200*20
factorial(40)
1560*300
17121342/46800000
factorial(40)/(factorial(38)*factorial(2))
780*2
1560*2*275
factorial(72)/(factorial(70)*factorial(2))
2556*2
5112*275
13414669/42174000
1200/8
2112*25
2112*25*8
5112*25*8
5112*25
5112*25*8
996650/3067200
328040/1022400
60*5
300/24
989969/3021192
1109778/4217400
1029030/3113400
1109778/4217400
factorial(69)/(factorial(69)*factorial(2))
factorial(69)/(factorial(67)*factorial(2))
2346*2*25
1109778/4217400
1029030/3113400
1403925/4280138
14049643/42771654
1600*8
4200*6
4200*6 + 12
34*8
factorial(72)/(factorial(70)*2) * 2 * 275
factorial(72)/(factorial(70)*2) * 2 * 275 * 100 * 21
2952180000-2952180000
1424204-1405800
factorial(72)/(factorial(70)*2) * 2 * 275 * 100
142442998 - 140580000
factorial(73)/(factorial(71)*2) * 2 * 275 * 100
142442998*21
142442998*41
142387544 - 140580000
142387544*5
1424204-1405800
5*9*5
43+38+34+31+33+34+36+26
1355/3500
0.3871429/10000
100000.3871429
10000/0.3871429
114850*100
22970*1000
11485000/11485000
11485000/22970000
setwd("~/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Scripts/Sims/PopExpansion/ForwardSims/")
Data <- read.table("PLGivenSTableWithRecs.txt")#
DFETable <- read.table("DFETableOfProbabilities.txt")#
#
RecValuesOne <- read.table("ResampledBpRecRatePerVariantNoCpG.txt")#
RecValuesTwo <- read.table("ResampledBpRecRatePerVariantNoCpG.txt")#
RecValues <- rbind(RecValuesOne,RecValuesTwo)#
#
FullDataTable <- matrix(nrow = nrow(DFETable)*6+12, ncol = 600)
i=1
Element=1
RecRate=1
Data[(203-3:ncol(DFETable))*6 + Element + 12,RecRate]
(203-3:ncol(DFETable))*6 + Element + 12
2406/6
Subset <- sum(DFETable[i,3:ncol(DFETable)])
Subset
Subset <- sum(DFETable[,3:ncol(DFETable)])
Subset
i
DFETable[i,3:ncol(DFETable)]
sum(Test %*% t(Subset))
(203-3:ncol(DFETable))*6 + Element + 12
setwd("~/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts/")
library(here)#
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
#
####### DFE selection bootstrap #########
#
DFESelection <- read.table("../Results/ResultsSelectionInferred/SelectionLargerSpaceBootstrapUK10KDFETest.txt")#
#
AllRows <- c()#
AllColumns <- c()#
#
for (i in 1:length(DFESelection$V1)){#
    if (DFESelection$V1[i] == 1){#
        SelectionDFERow <- ((DFESelection$V2[i] %% 52 ) + 1) * 5#
        SelectionDFEColumn <- (floor(DFESelection$V2[i] / 52 ) + 1) *.03#
        AllColumns <- c(AllColumns, SelectionDFEColumn)#
#        print (SelectionDFERow)#
        if (SelectionDFERow == 5){#
            AllRows <- c(AllRows,-55)#
#
        }#
        if (SelectionDFERow == 10){#
            AllRows <- c(AllRows,-20)#
            SelectionDFERow = -10#
        }#
        if (SelectionDFERow >= 15){#
            SelectionDFERow = SelectionDFERow + 250 - 10#
            AllRows <- c(AllRows,SelectionDFERow)#
        }#
    }else{#
    SelectionDFERow <- ((DFESelection$V2[i] %% 50 ) + 1) * 5#
    SelectionDFEColumn <- (floor(DFESelection$V2[i] / 50 ) + 1) *.03#
    AllColumns <- c(AllColumns, SelectionDFEColumn)#
    AllRows <- c(AllRows, SelectionDFERow)#
    print (SelectionDFERow)#
    }#
}#
Plot <- paste("../Figures/SuppFigure33_DFEParameterEstimatesUK10K.pdf",sep="")#
pdf(Plot,width=10)#
library(hexbin)#
par(mfrow=c(1,1))#
par(mar=c(5,5,4,2) + 0.1)#
# Create hexbin object and plot#
df <- data.frame(AllColumns,AllRows)#
colnames(df) <- c("Scale","Shape")#
rf <- colorRampPalette(rev(brewer.pal(11,'Spectral')))#
h <- hexbin(df, xbins = 301,IDs=TRUE)#
#slot(h,"ybnds")[2] <- 2005#
#slot(h,"xbnds")[2] <- 3005#
#plot(h)#
#plot(h, colramp=rf)#
ColorViridis <- viridis(23)#
plot(slot(h,"ycm"),slot(h,"xcm"),col= ColorViridis[23],pch=19,cex=3,ylab="Scale",xlab="Shape",cex.lab=2,cex.axis=2,main="Variation in DFE parameter estimates\n in the UK10K dataset",xaxt="n")#
text(slot(h,"ycm"),slot(h,"xcm"),slot(h,"count"),col="red",cex=1)#
# abline(v=-60, lty = 2)#
abline(v=-55, lty = 2)#
abline(v=-20, lty = 2)#
abline(v=5, lty = 2)#
abline(v=250, lty = 2)#
axis(1, at=c(-55, -20, 5, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500), labels = c("0.03", "3", "30", "300", "600", "900", "1200", "1500", "15000", "30000", "45000", "60000", "75000"), cex.axis = 1.2)#
# beanplot(-SelectionDFEColumn$V1*SelectionDFERow$V1,names=c("Data"),ylab="Estimated 4Ns values",xlab="",main="Variation in the estimated 4Ns values\n in the UK10K dataset",cex.axis=1.3,cex.lab=2,cex.main=1.2,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6",maxstripline=0.15,beanlinewd=0.5,overall=10000,what=c(FALSE,TRUE,FALSE,TRUE),overallline = "median",ll=0.5,bw="nrd0")#
# boxplot(-SelectionDFEColumn$V1*SelectionDFERow$V1,names=c("Data"),ylab="Estimated 4Ns values",xlab="",main="Variation in the estimated 4Ns values\n in the UK10K dataset",cex.lab=2,cex.axis=2)#
dev.off()
9360/6
37.75*2
TwoNsValues <- 0:200*.5 + .25
TwoNsValues
TwoNsValues*2
i= 99.75
pgamma(i,j,1/k)
pgamma(i,0.1,1/800)
pgamma(i-0.5,0.1,1/800)
99.75*2
200*.5 + .25
90*.5 + .25
1500*50
(203-3:ncol(DFETable))*6 + Element + 12
Data <- read.table("PLGivenSTableWithRecs.txt")
setwd("~/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Scripts/Sims/UK10K_OnePercenters/ImportanceSamplingSims/")
Data <- read.table("PLGivenSTableWithRecs.txt")
ncol(Data)
nrow(Data)
2406/6
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Scripts/Sims/UK10K_OnePercenters/ImportanceSamplingSims")#
#
Data <- read.table("PLGivenSTableWithRecs.txt")#
DFETable <- read.table("AnotherDFETableOfProbabilities.txt")#
#
FullDataTable <- matrix(nrow = nrow(DFETable)*6+12, ncol = 550)#
#
TotalCount <- 1#
# for (i in 1:nrow(DFETable)){#
for (i in 1:2){#
    print (i)#
    Subset <- DFETable[i,3:ncol(DFETable)]#
for (Element in 1:6){#
    #    print (Element)#
    FullDataTable[TotalCount,] <- 0#
    Test <- c()#
    for (RecRate in 1:550){#
        Test <- rbind(Test, Data[(203-3:ncol(DFETable))*6 + Element + 12,RecRate])#
    }#
    Row <- Test %*% t(Subset)#
    FullDataTable[TotalCount,] <- t(Row)#
    # Subset2 <- Data[(204-3:ncol(DFETable))*6 + Element + 12,RecRate]#
    #  FullDataTable[TotalCount,RecRate] <- Subset2 %*% t(Subset)#
        #        for (j in 3:ncol(DFETable)){#
        #            FullDataTable[TotalCount,RecRate] <- FullDataTable[TotalCount,RecRate] + DFETable[i,j] * Data[(204-j)*6 + Element + 12,RecRate]#
        #        }#
        #        print (i)#
        #        print (RecRate)#
        TotalCount <- TotalCount + 1#
}#
}#
#
for (i in 1:nrow(DFETable)){#
    print (i)#
    Subset <- DFETable[i,3:ncol(DFETable)]#
for (Element in 1:6){#
    #    print (Element)#
    FullDataTable[TotalCount,] <- 0#
    Test <- c()#
    for (RecRate in 1:550){#
        Test <- rbind(Test, Data[(203-3:ncol(DFETable))*6 + Element + 12,RecRate])#
    }#
    Row <- Test %*% t(Subset)#
    FullDataTable[TotalCount,] <- t(Row)#
    # Subset2 <- Data[(204-3:ncol(DFETable))*6 + Element + 12,RecRate]#
    #  FullDataTable[TotalCount,RecRate] <- Subset2 %*% t(Subset)#
        #        for (j in 3:ncol(DFETable)){#
        #            FullDataTable[TotalCount,RecRate] <- FullDataTable[TotalCount,RecRate] + DFETable[i,j] * Data[(204-j)*6 + Element + 12,RecRate]#
        #        }#
        #        print (i)#
        #        print (RecRate)#
        TotalCount <- TotalCount + 1#
}#
}#
write.table(FullDataTable, file = "PLGivenSTableWithRecsAnotherDFE.txt",row.names= FALSE,col.names = FALSE)
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Scripts/Sims/UK10K_OnePercenters/ImportanceSamplingSims")#
#
Data <- read.table("PLGivenSTableWithRecs.txt")#
DFETable <- read.table("DFETableOfProbabilities.txt")#
#
FullDataTable <- matrix(nrow = nrow(DFETable)*6+12, ncol = 550)#
#
TotalCount <- 1#
# for (i in 1:nrow(DFETable)){#
for (i in 1:2){#
    print (i)#
    Subset <- DFETable[i,3:ncol(DFETable)]#
for (Element in 1:6){#
    #    print (Element)#
    FullDataTable[TotalCount,] <- 0#
    Test <- c()#
    for (RecRate in 1:550){#
        Test <- rbind(Test, Data[(203-3:ncol(DFETable))*6 + Element + 12,RecRate])#
    }#
    Row <- Test %*% t(Subset)#
    FullDataTable[TotalCount,] <- t(Row)#
    # Subset2 <- Data[(204-3:ncol(DFETable))*6 + Element + 12,RecRate]#
    #  FullDataTable[TotalCount,RecRate] <- Subset2 %*% t(Subset)#
        #        for (j in 3:ncol(DFETable)){#
        #            FullDataTable[TotalCount,RecRate] <- FullDataTable[TotalCount,RecRate] + DFETable[i,j] * Data[(204-j)*6 + Element + 12,RecRate]#
        #        }#
        #        print (i)#
        #        print (RecRate)#
        TotalCount <- TotalCount + 1#
}#
}#
#
for (i in 1:nrow(DFETable)){#
    print (i)#
    Subset <- DFETable[i,3:ncol(DFETable)]#
for (Element in 1:6){#
    #    print (Element)#
    FullDataTable[TotalCount,] <- 0#
    Test <- c()#
    for (RecRate in 1:550){#
        Test <- rbind(Test, Data[(203-3:ncol(DFETable))*6 + Element + 12,RecRate])#
    }#
    Row <- Test %*% t(Subset)#
    FullDataTable[TotalCount,] <- t(Row)#
    # Subset2 <- Data[(204-3:ncol(DFETable))*6 + Element + 12,RecRate]#
    #  FullDataTable[TotalCount,RecRate] <- Subset2 %*% t(Subset)#
        #        for (j in 3:ncol(DFETable)){#
        #            FullDataTable[TotalCount,RecRate] <- FullDataTable[TotalCount,RecRate] + DFETable[i,j] * Data[(204-j)*6 + Element + 12,RecRate]#
        #        }#
        #        print (i)#
        #        print (RecRate)#
        TotalCount <- TotalCount + 1#
}#
}#
#
write.table(FullDataTable, file = "PLGivenSTableWithRecsFirstDFE.txt",row.names= FALSE,col.names = FALSE)
9000/6
9360/6
