17700/40000 - 4000/40000
122000/50000000
100000/200000000
100000/100000000
.5*40000
.5*10000
.5*40000
26/35
27/35
.4425*40000
42/9
42/8
42/7
300000000/50000
100*5
100*52
4594*0.0001088376
0.000025*20000
8484.45/(2*226252)
8484.45/(2*226252*250000)
8278.425/(2*220758*250000)
8278.425/(2*220758*125000)
8278.425/(2*220758*250000)
8484.45/(2*226252*250000)
7.5e-08/5
10881/27
11284/28
log(0.37184453)
log(0.066275406)
exp(-1.37374133793858)
log(0.129026203371317)
exp(-2.09260154912058)
5*log(0.423949973)+2*log(0.205797598)+2*log(0.123365776)+log(0.112819854)
factorial(72)
factorial(72)*273
Test="NA"
if (Test == "NA"){
print(Here)
}
if (Test == "NA"){
print('Here')
}
Test=100/0
Test
Test=0/0
Test
Test == Nan
Test == NaN
Test == 'NaN'
138-50
88/50
21*50
321-21
20*50
321-50
271/50
21*50
881/1050
928-50
940-50
949-50
971-50
100445688/2556
72*72/2
73*72/2
71*72/2
1395576/2556
1395576/(2556*2)
39298/3
100445688/(2556*401)
273-98
42056/1502
2*60+17
17/60
42/2.28
(6448.182-6168.05413859943)/6168.05413859943
(6448.182-6168.05413859943)/6448.182
34*2556
17*5
257*2
87
87/514
514/87
4/20
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/PaperResults/SimsResults/Data/RecombinationRateValues")
##### No CpG#
Data <- c()#
Data <- c(Data,"RecRateMissenseOnePercentNoCpG.txt")
unique(Data$V1)
unique(Data)
Data
DatasetOnePercent <- read.table(Data[1])
unique(DatasetOnePercent$V1)
Quantile <- quantile(DatasetOnePercent$V1,probs = seq(0, 1, 0.05))
Quantile
Quantile <- quantile(DatasetOnePercent$V1,probs = seq(0, 1, 0.520))
Quantile
length(DatasetOnePercent$V1)
Quantile <- quantile(DatasetOnePercent$V1,probs = seq(0, 1, 1/546))
Quantile
113126*5
sort(DatasetOnePercent$V1)
length(DatasetOnePercent$V1)
##### Minimum Number Rec Events#
#
SortedData <- sort(DatasetOnePercent$V1)#
#
ThingToDivide = SortedData$V1[13]#
RecValuesToCheck = 1#
for (i in 1:length(DatasetOnePercent$V1)){#
#
if (SortedData$V1[1] == 0){#
    next;#
}else if (((SortedData$V1[i] - ThingToDivide)/ (ThingToDivide)) < 0.01){#
    next;#
}else{#
    RecValuesToCheck++#
 ThingToDivide = SortedData$V1[i]#
}#
}
SortedData[1]
SortedData <- sort(DatasetOnePercent$V1)#
#
ThingToDivide = SortedData[13]#
RecValuesToCheck = 1#
for (i in 1:length(DatasetOnePercent$V1)){#
#
if (SortedData[i] == 0){#
    next;#
}else if (((SortedData[i] - ThingToDivide)/ (ThingToDivide)) < 0.01){#
    next;#
}else{#
    RecValuesToCheck++#
 ThingToDivide = SortedData[i]#
}#
}
##### Minimum Number Rec Events#
#
SortedData <- sort(DatasetOnePercent$V1)#
#
ThingToDivide = SortedData[13]#
RecValuesToCheck = 1#
for (i in 1:length(DatasetOnePercent$V1)){#
#
if (SortedData[i] == 0){#
    next;#
}else if (((SortedData[i] - ThingToDivide)/ (ThingToDivide)) < 0.01){ next;#
}else{#
    RecValuesToCheck++#
 ThingToDivide = SortedData[i]#
}#
}
SortedData <- sort(DatasetOnePercent$V1)#
#
ThingToDivide = SortedData[13]#
RecValuesToCheck = 1#
for (i in 1:length(DatasetOnePercent$V1)){#
#
if (SortedData[i] == 0){#
    next;#
}else if (((SortedData[i] - ThingToDivide)/ (ThingToDivide)) < 0.01){ next;#
}else{#
    RecValuesToCheck = RecValuesToCheck + 1#
 ThingToDivide = SortedData[i]#
}#
}
RecValuesToCheck
200*10
2000*200
2000*230
460000/60
7666.667/150
length(DatasetOnePercent$V1)
546/2
2500 * 10
25000*230
5750000/70
82142.86/150
547.6191/24
230/21
2000*10
20000/60
333.333/150
160/20
1000/8
230/21
20
200*11
125*11*10
125*10*100
125000/60
2083.333/150
13.88889*11
152.7778/24
2556*87
2556*87*5
SortedData <- sort(DatasetOnePercent$V1)#
#
ThingToDivide = SortedData[13]#
RecValuesToCheck = 1#
AllRecValues <- c(0)#
for (i in 1:length(DatasetOnePercent$V1)){#
#
if (SortedData[i] == 0){#
    next;#
}else if (((SortedData[i] - ThingToDivide)/ (ThingToDivide)) < 0.01){ next;#
}else{#
    AllRecValues <- c(AllRecValues,ThingToDivide#
    RecValuesToCheck = RecValuesToCheck + 1#
 ThingToDivide = SortedData[i]#
}#
}
SortedData <- sort(DatasetOnePercent$V1)#
#
ThingToDivide = SortedData[13]#
RecValuesToCheck = 1#
AllRecValues <- c(0)#
for (i in 1:length(DatasetOnePercent$V1)){#
#
if (SortedData[i] == 0){#
    next;#
}else if (((SortedData[i] - ThingToDivide)/ (ThingToDivide)) < 0.01){ next;#
}else{#
    AllRecValues <- c(AllRecValues,ThingToDivide)#
    RecValuesToCheck = RecValuesToCheck + 1#
 ThingToDivide = SortedData[i]#
}#
}
AllRecValues
SortedData
AllRecValues
SortedData
SortedData <- sort(DatasetOnePercent$V1)#
#
ThingToDivide = SortedData[13]#
RecValuesToCheck = 1#
AllRecValues <- c(0)#
for (i in 1:length(DatasetOnePercent$V1)){#
#
if (SortedData[i] == 0){#
    next;#
}else if (abs((SortedData[i] - ThingToDivide)/ (ThingToDivide)) < 0.01){ next;#
}else{#
    AllRecValues <- c(AllRecValues,ThingToDivide)#
    RecValuesToCheck = RecValuesToCheck + 1#
 ThingToDivide = SortedData[i]#
}#
}
AllRecValues
182.23551 /100
182.23551+1.822355
AllRecValues
SortedData
120*100
120*100*10
120000/150
800/24
120*1000
120000/150
800/24
2556*30
2556*20
SortedData <- sort(DatasetOnePercent$V1)
length(SortedData)
87/546
Data <- read.table ("SelectionUK10KSingleRec4Ns_0.txt")
Data <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionUK10KSingleRec4Ns_0.txt")
sd(Data$V1)
DataTwo <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionUK10K4Ns_0.txt")
sd(DataTwo$V1)
median(Data$V1)
median(DataTwo$V1)
boxplot(Data$V1,DataTwo$V1)
DataTwo <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionCloseQuantileUK10K4Ns_0.txt")
sd(DataTwo$V1)
boxplot(Data$V1,DataTwo$V1)
DataTwo <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionUK10K4Ns_-50.txt")
median(Data$V1)
median(DataTwo$V1)
DataTwo <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionCloseQuantileUK10K4Ns_-50.txt")
median(DataTwo$V1)
18.06742 /24.98276
boxplot(Data$V1,DataTwo$V1)
sd(DataTwo$V1)
Data <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionUK10KSingleRec4Ns_-50.txt")
sd(Data$V1)
17.28692/22.7977
median(Data$V1)
boxplot(Data$V1)
Data <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionUK10KSingleRec4Ns_0.txt")
boxplot(Data$V1)
Data <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionUK10KSingleRec4Ns_-25.txt")
boxplot(Data$V1)
median(Data$V1)
Data <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionUK10KSingleRec4Ns_25.txt")
median(Data$V1)
Data <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionUK10KSingleRec4Ns_50.txt")
median(Data$V1)
Data <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionUK10KSingleRec4Ns_-25.txt")
median(Data$V1)
Data <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionUK10KSingleRec4Ns_0.txt")
median(Data$V1)
Data <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionUK10KSingleRec4Ns_-50.txt")
median(Data$V1)
sd(Data$V1)
DataTwo <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionCloseQuantileUK10K4Ns_-50.txt")
sd(DataTwo$V1)
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts")#
#
DataTwo <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionCloseQuantileUK10K4Ns_-50.txt")#
#
median(DataTwo$V1)#
sd(DataTwo$V1)#
#
Data <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionUK10KSingleRec4Ns_-50.txt")#
#
median(Data$V1)#
sd(Data$V1)#
#
DataTwo <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionCloseQuantileUK10K4Ns_-25.txt")#
#
median(DataTwo$V1)#
sd(DataTwo$V1)#
#
Data <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionUK10KSingleRec4Ns_-25.txt")#
#
median(Data$V1)#
sd(Data$V1)#
#
DataTwo <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionCloseQuantileUK10K4Ns_0.txt")#
#
median(DataTwo$V1)#
sd(DataTwo$V1)#
#
Data <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionUK10KSingleRec4Ns_0.txt")#
#
median(Data$V1)#
sd(Data$V1)#
#
DataTwo <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionCloseQuantileUK10K4Ns_25.txt")#
#
median(DataTwo$V1)#
sd(DataTwo$V1)#
#
Data <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionUK10KSingleRec4Ns_25.txt")#
#
median(Data$V1)#
sd(Data$V1)#
#
DataTwo <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionCloseQuantileUK10K4Ns_50.txt")#
#
median(DataTwo$V1)#
sd(DataTwo$V1)#
Data <- read.table ("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred/SelectionUK10KSingleRec4Ns_50.txt")#
#
median(Data$V1)#
sd(Data$V1)
pgamma(0.25,0,0)
pgamma(0.25,0,1)
pgamma(1,0,0)
pgamma(0,0,0)
pgamma(0,0,0)
pgamma(100,0,0)
pgamma(100,0,1)
pgamma(100,0,1)
pgamma(0.25,0,1)
.01*30
.01*30*30
0.00001*.01
0.00001*.01*.01
.01*1*1
0.01*0.0003
0.01*0.0003*.0003
AlphaGrid <- 0.01*1:30#
BetaGrid <- 30*1:50#
#
TwoNsValues <- 0:75*.5 + .25#
#
Table <- matrix(ncol=78,nrow=0)#
#
for (j in AlphaGrid){#
    for (k in BetaGrid){#
        Probability <- 0#
        Row <- c(j,k)#
        for (i in TwoNsValues){#
            if ( i == 0.25){#
                Probability <- pgamma(0.25,j,1/k)#
                Row <- c(Row,Probability)#
            }else if (i==37.75){#
                Probability <- ( 1 - pgamma(i-0.5,j,1/k) )#
                Row <- c(Row,Probability)#
            }else{#
                Probability <-(pgamma(i,j,1/k) - pgamma(i-0.5,j,1/k))#
                Row <- c(Row,Probability)#
            }#
        }#
        Table <- rbind(Table,Row)#
        #print (Probability)#
    }#
}#
#
AlphaGrid <- 0.01*1:30#
BetaGrid <- c(0.0003,0.003,0.03,3)#
for (j in AlphaGrid){#
    for (k in BetaGrid){#
        Probability <- 0#
        Row <- c(j,k)#
        for (i in TwoNsValues){#
            if ( i == 0.25){#
                Probability <- pgamma(0.25,j,1/k)#
                Row <- c(Row,Probability)#
            }else if (i==37.75){#
                Probability <- ( 1 - pgamma(i-0.5,j,1/k) )#
                Row <- c(Row,Probability)#
            }else{#
                Probability <-(pgamma(i,j,1/k) - pgamma(i-0.5,j,1/k))#
                Row <- c(Row,Probability)#
            }#
        }#
        Table <- rbind(Table,Row)#
        #print (Probability)#
    }#
}
nrow(Table)
Table[1620,]
Table[1501,]
Table[1502,]
Table[1503,]
Table[1551,]
Table[1601,]
Table[1602,]
Table[1603,]
Table[1501,]
Table[1531,]
Table[1561,]
BetaGrid <- c(0.0003,0.003,0.03,3,30*1:50)
BetaGrid
Table[1.]
Table[1,]
AlphaGrid <- 0.01*1:30#
BetaGrid <- c(0.0003,0.003,0.03,3,30*1:50)#
#
TwoNsValues <- 0:75*.5 + .25#
#
Table <- matrix(ncol=78,nrow=0)#
#
for (j in AlphaGrid){#
    for (k in BetaGrid){#
        Probability <- 0#
        Row <- c(j,k)#
        for (i in TwoNsValues){#
            if ( i == 0.25){#
                Probability <- pgamma(0.25,j,1/k)#
                Row <- c(Row,Probability)#
            }else if (i==37.75){#
                Probability <- ( 1 - pgamma(i-0.5,j,1/k) )#
                Row <- c(Row,Probability)#
            }else{#
                Probability <-(pgamma(i,j,1/k) - pgamma(i-0.5,j,1/k))#
                Row <- c(Row,Probability)#
            }#
        }#
        Table <- rbind(Table,Row)#
        #print (Probability)#
    }#
}
Table[1,]
Table[2,]
Table[3,]
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/ScriptsOctober22_2017/Sims/UK10K_OnePercenters/ImportanceSamplingSims")#
#
### Another extra one#
AlphaGrid <- 0.01*1:30#
BetaGrid <- c(0.003,0.03,3,30*1:50)#
#
TwoNsValues <- 0:75*.5 + .25#
#
Table <- matrix(ncol=78,nrow=0)#
#
for (j in AlphaGrid){#
    for (k in BetaGrid){#
        Probability <- 0#
        Row <- c(j,k)#
        for (i in TwoNsValues){#
            if ( i == 0.25){#
                Probability <- pgamma(0.25,j,1/k)#
                Row <- c(Row,Probability)#
            }else if (i==37.75){#
                Probability <- ( 1 - pgamma(i-0.5,j,1/k) )#
                Row <- c(Row,Probability)#
            }else{#
                Probability <-(pgamma(i,j,1/k) - pgamma(i-0.5,j,1/k))#
                Row <- c(Row,Probability)#
            }#
        }#
        Table <- rbind(Table,Row)#
        #print (Probability)#
    }#
}
Table[1,]
Table[31,]
Table[53,]
Table[54,]
Table[55,]
Table[107,]
write.table(Table,file="AnotherDFETableOfProbabilities.txt",row.names=FALSE,col.names=FALSE,sep="\t")#
#
for (k in 1:1500){#
    print(sum(Table[k,3:78]))#
}
nrow(Table)
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/ScriptsOctober22_2017/Sims/UK10K_OnePercenters/ImportanceSamplingSims")#
#
### Another extra one#
AlphaGrid <- 0.01*1:30#
BetaGrid <- c(0.003,0.03,3,30*1:50)#
#
TwoNsValues <- 0:75*.5 + .25#
#
Table <- matrix(ncol=78,nrow=0)#
#
for (j in AlphaGrid){#
    for (k in BetaGrid){#
        Probability <- 0#
        Row <- c(j,k)#
        for (i in TwoNsValues){#
            if ( i == 0.25){#
                Probability <- pgamma(0.25,j,1/k)#
                Row <- c(Row,Probability)#
            }else if (i==37.75){#
                Probability <- ( 1 - pgamma(i-0.5,j,1/k) )#
                Row <- c(Row,Probability)#
            }else{#
                Probability <-(pgamma(i,j,1/k) - pgamma(i-0.5,j,1/k))#
                Row <- c(Row,Probability)#
            }#
        }#
        Table <- rbind(Table,Row)#
        #print (Probability)#
    }#
}#
#
write.table(Table,file="AnotherDFETableOfProbabilities.txt",row.names=FALSE,col.names=FALSE,sep="\t")#
#
for (k in 1:1590){#
    print(sum(Table[k,3:78]))#
}
