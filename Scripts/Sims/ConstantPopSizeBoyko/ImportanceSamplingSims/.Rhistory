24*7
240
24*7
24*6
24*4
1000/5
5000/60
6000/60
14*60
14*60 + 34
168/874
874/168
1000/5.20
1000/0.1922
5202.914/60
.00125*40000
.00125/2
10000/40
.0025/2
346884*5/2
346884*2/5
346884/2
1000/60
10000/60
0.000625*2
0.000625*4*20000
0.000625*4*10000
0.00125*40000
0.00125*20000
0.00125*40000
0.00125*20000
0.000625*40000
0.000625*2
0.000025*40000
0.000050*100000
0.000050*200000
5e-06*200000
2.5e-05*200000
2.5e-05*40000
5e-06*5
0.01*20000
0.005*10000
0.005*40000
1033.33/100000
0.0103333*40000
Data <- read.table("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred 2/SelectionPopExpansion100_N10000.txt")
head(Data)
head(Data$V1)
median(Data$V1)
Data <- read.table("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred 2/SelectionPopExpansion50_N10000.txt")
median(Data$V1)
Data <- read.table("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred 2/SelectionPopExpansion-100_N10000.txt")
median(Data$V1)
Data <- read.table("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred 2/SelectionPopExpansion-50_N10000.txt")
median(Data$V1)
Data <- read.table("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ResultsSelectionInferred 2/SelectionConstantPopSize-50_N10000.txt")
median(Data$V1)
Check <- subset(Data,<200)
Check <- subset(Data<200)
Check$V1
Check
Check <- subset(Data<200,)
Check
65/75
0.8666667*100
75/65
1.153846*100
67/78
1/78
0.01282051*100
78*100
101914824/100000
81503157/80000
factorial(40)/(factorial(38)*factorial(2))
780*300*2
226252/2
100/12
40*6
240/60
1000/100
1000/100 * 5
1000/100/12 * 5
1000/12 * 5
100/12
1000 / 100
1000 /12
83.33333*5
416/60
118/616
0.1915584*60
0.1915584*60*96
0.1915584*96
1103.376/24
0.1915584*96*60
7242*.01
7242*.095
7242*.0095
7242*.0105
113126*5
226252/2
24*3+4
858/76
1000/11.28
2081.304*2
4127.92*2
165517/468000
85280/468000
85280/234000
84331/234000
172145/468000
17035565/(468000*100)
161115/468000
17074348/(468000*100)
156000/100
factorial(40)/(factorial(40)*factorial(2))
factorial(40)/(factorial(38)*factorial(2))
factorial(40)/(factorial(38)*factorial(2)) * 2
111038*2
factorial(40)/(factorial(38)*factorial(2)) *300
5523.88/100000
418.088/10000
8484.45*2
539445/1395576
pbinom(28,36,0.5)
1 - pbinom(28,36,0.5)
1 - pbinom(27,36,0.5)
1 - 2*pbinom(27,36,0.5)
2*pbinom(27,36,0.5)
2 - 2*pbinom(27,36,0.5)
0.01*40000
ReadTree <- read.table("/Users/vicentediegoortegadelvecchyo/TreeCollection.txt")
library(ape)
PatristicDistMatrix<-cophenetic(ReadTree)
ReadTree
PatristicDistMatrix<-cophenetic.phylo(ReadTree)
ReadTree <- read.tree("/Users/vicentediegoortegadelvecchyo/TreeCollection.txt")
PatristicDistMatrix<-cophenetic(ReadTree)
PatristicDistMatrix
ReadTree <- read.tree("/Users/vicentediegoortegadelvecchyo/TreeCollection.txt")
PatristicDistMatrix<-cophenetic(ReadTree)
ReadTree
ReadTree$V1
factorial(40)/(factorial(38)*factorial(2))
780*300
780*297
780*3
500/10000
300*.05
780*15
780*285
11700/234000
11700+222300
30*20
30*100
30*70
30*69
setwd("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts/")
library(here)#
#
### Calculation of means#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantBoyko.txt")#
MeanConstantBoyko <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")#
MeanConstantMouse <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")#
MeanPopExpansionBoyko <- mean(Data$V2[1:50000]*20000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionMouse.txt")#
MeanPopExpansionMouse <- mean(Data$V2[1:50000]*20000)#
#
### Reading DFE parameters and 4Ns values from the truncated gamma distributions used#
#
DFEPars <- read.table ("../ScriptsOctober22_2017/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims/AnotherExtraTableOfProbabilities.txt")#
FourNsMeans <- c()#
#
for (i in 1:nrow(DFEPars)){#
FourNsMeans[i] <- 0#
#
for (j in 3:303){#
FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[i,j]#
}#
}#
#
pdf("../Figures/Figure6_MLEDFEHumanMouse2DemScenarios.pdf",width=7*2,height=7*2/4)#
par(mfrow = c(1,4),mar=c(5,5,5,3))#
#
MLE <- read.table("../Results/MLEDFEs/ConstantBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
BestFit[i] <- 1#
for (j in 1:30){#
    DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantBoyko)#
    DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantBoyko)#
    Differences <- c(Differences,DifferenceOne)#
    if (DifferenceOne < DifferenceTwo){#
        BestFit[i] <- j#
    }#
}#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="A) Constant size\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.454203927295,0.184753036884482,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanConstantBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/ConstantMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="B) Constant size\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.8608219789938,0.109621224838877,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#
#lines(1:350,(MeanConstantMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/PopExpansionBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionBoyko)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionBoyko)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="C) Population expansion\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(29.1767603378041,0.190915110603425,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionBoyko/1:350,lty="dashed",lwd=2,col="green")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="D) Population expansion\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(30.9631108230993,0.112475018218557,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionMouse/1:350,lty="dashed",lwd=2,col="red")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
#
dev.off()
library(here)#
#
### Calculation of means#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantBoyko.txt")#
MeanConstantBoyko <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")#
MeanConstantMouse <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")#
MeanPopExpansionBoyko <- mean(Data$V2[1:50000]*20000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionMouse.txt")#
MeanPopExpansionMouse <- mean(Data$V2[1:50000]*20000)#
#
### Reading DFE parameters and 4Ns values from the truncated gamma distributions used#
#
DFEPars <- read.table ("../Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims/AnotherExtraTableOfProbabilities.txt")#
FourNsMeans <- c()#
#
for (i in 1:nrow(DFEPars)){#
FourNsMeans[i] <- 0#
#
for (j in 3:303){#
FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[i,j]#
}#
}#
#
pdf("../Figures/Figure6_MLEDFEHumanMouse2DemScenarios.pdf",width=7*2,height=7*2/4)#
par(mfrow = c(1,4),mar=c(5,5,5,3))#
#
MLE <- read.table("../Results/MLEDFEs/ConstantBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
BestFit[i] <- 1#
for (j in 1:30){#
    DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantBoyko)#
    DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantBoyko)#
    Differences <- c(Differences,DifferenceOne)#
    if (DifferenceOne < DifferenceTwo){#
        BestFit[i] <- j#
    }#
}#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="A) Constant size\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.454203927295,0.184753036884482,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanConstantBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/ConstantMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="B) Constant size\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.8608219789938,0.109621224838877,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#
#lines(1:350,(MeanConstantMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/PopExpansionBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionBoyko)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionBoyko)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="C) Population expansion\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(29.1767603378041,0.190915110603425,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionBoyko/1:350,lty="dashed",lwd=2,col="green")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="D) Population expansion\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(30.9631108230993,0.112475018218557,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionMouse/1:350,lty="dashed",lwd=2,col="red")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
#
dev.off()
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
library(here)#
#
### Calculation of means#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantBoyko.txt")#
MeanConstantBoyko <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")#
MeanConstantMouse <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")#
MeanPopExpansionBoyko <- mean(Data$V2[1:50000]*20000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionMouse.txt")#
MeanPopExpansionMouse <- mean(Data$V2[1:50000]*20000)#
#
### Reading DFE parameters and 4Ns values from the truncated gamma distributions used#
#
DFEPars <- read.table ("../Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims/AnotherExtraTableOfProbabilities.txt")#
#
pdf("../Figures/SuppFigure2_MeanDFEMouseHuman2DemScenarios.pdf")#
par(mfrow = c(2,2))#
par(mar=c(2.1,5.1,4.1,1.1))#
MLE <- read.table("../Results/MLEDFEs/ConstantBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
for (j in 3:303){#
    FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
}#
}#
#
beanplot(-FourNsMeans,main="Constant Boyko",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanConstantBoyko,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/ConstantMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Constant Mouse",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanConstantMouse,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Pop expansion Boyko",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanPopExpansionBoyko,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Pop expansion Mouse",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanPopExpansionMouse,col="red",pch=19)#
#
dev.off()
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
library(here)#
#
### Calculation of means#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantBoyko.txt")#
MeanConstantBoyko <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")#
MeanConstantMouse <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")#
MeanPopExpansionBoyko <- mean(Data$V2[1:50000]*20000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionMouse.txt")#
MeanPopExpansionMouse <- mean(Data$V2[1:50000]*20000)#
#
### Reading DFE parameters and 4Ns values from the truncated gamma distributions used#
#
DFEPars <- read.table ("../Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims/AnotherExtraTableOfProbabilities.txt")#
#
pdf("../Figures/SuppFigure2_MeanDFEMouseHuman2DemScenarios.pdf")#
par(mfrow = c(2,2))#
par(mar=c(2.1,5.1,4.1,1.1))#
MLE <- read.table("../Results/MLEDFEs/ConstantBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
for (j in 3:303){#
    FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
}#
}#
#
beanplot(-FourNsMeans,main="Constant Boyko",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanConstantBoyko,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/ConstantMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Constant Mouse",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanConstantMouse,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Pop expansion Boyko",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanPopExpansionBoyko,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Pop expansion Mouse",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanPopExpansionMouse,col="red",pch=19)#
#
dev.off()
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
library(here)#
#
### Calculation of means#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantBoyko.txt")#
MeanConstantBoyko <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")#
MeanConstantMouse <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")#
MeanPopExpansionBoyko <- mean(Data$V2[1:50000]*20000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionMouse.txt")#
MeanPopExpansionMouse <- mean(Data$V2[1:50000]*20000)#
#
### Reading DFE parameters and 4Ns values from the truncated gamma distributions used#
#
DFEPars <- read.table ("../Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims/AnotherExtraTableOfProbabilities.txt")#
#
pdf("../Figures/SuppFigure2_MeanDFEMouseHuman2DemScenarios.pdf")#
par(mfrow = c(2,2))#
par(mar=c(2.1,5.1,4.1,1.1))#
MLE <- read.table("../Results/MLEDFEs/ConstantBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
for (j in 3:303){#
    FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
}#
}#
#
beanplot(-FourNsMeans,main="Constant Boyko",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanConstantBoyko,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/ConstantMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Constant Mouse",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanConstantMouse,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Pop expansion Boyko",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanPopExpansionBoyko,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Pop expansion Mouse",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanPopExpansionMouse,col="red",pch=19)#
#
dev.off()
MLE
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
library(here)#
#
### Calculation of means#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantBoyko.txt")#
MeanConstantBoyko <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")#
MeanConstantMouse <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")#
MeanPopExpansionBoyko <- mean(Data$V2[1:50000]*20000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionMouse.txt")#
MeanPopExpansionMouse <- mean(Data$V2[1:50000]*20000)#
#
### Reading DFE parameters and 4Ns values from the truncated gamma distributions used#
#
DFEPars <- read.table ("../Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims/AnotherExtraTableOfProbabilities.txt")#
#
pdf("../Figures/SuppFigure2_MeanDFEMouseHuman2DemScenarios.pdf")#
par(mfrow = c(2,2))#
par(mar=c(2.1,5.1,4.1,1.1))#
MLE <- read.table("../Results/MLEDFEs/ConstantBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
for (j in 3:303){#
    FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
}#
}#
#
beanplot(-FourNsMeans,main="Constant Boyko",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanConstantBoyko,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/ConstantMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Constant Mouse",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanConstantMouse,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Pop expansion Boyko",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanPopExpansionBoyko,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Pop expansion Mouse",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanPopExpansionMouse,col="red",pch=19)#
#
dev.off()
library(here)#
#
### Calculation of means#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantBoyko.txt")#
MeanConstantBoyko <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")#
MeanConstantMouse <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")#
MeanPopExpansionBoyko <- mean(Data$V2[1:50000]*20000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionMouse.txt")#
MeanPopExpansionMouse <- mean(Data$V2[1:50000]*20000)#
#
### Reading DFE parameters and 4Ns values from the truncated gamma distributions used#
#
DFEPars <- read.table ("../Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims/AnotherExtraTableOfProbabilities.txt")#
FourNsMeans <- c()#
#
for (i in 1:nrow(DFEPars)){#
FourNsMeans[i] <- 0#
#
for (j in 3:303){#
FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[i,j]#
}#
}#
#
pdf("../Figures/Figure6_MLEDFEHumanMouse2DemScenarios.pdf",width=7*2,height=7*2/4)#
par(mfrow = c(1,4),mar=c(5,5,5,3))#
#
MLE <- read.table("../Results/MLEDFEs/ConstantBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
BestFit[i] <- 1#
for (j in 1:30){#
    DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantBoyko)#
    DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantBoyko)#
    Differences <- c(Differences,DifferenceOne)#
    if (DifferenceOne < DifferenceTwo){#
        BestFit[i] <- j#
    }#
}#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="A) Constant size\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.454203927295,0.184753036884482,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanConstantBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/ConstantMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="B) Constant size\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.8608219789938,0.109621224838877,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#
#lines(1:350,(MeanConstantMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/PopExpansionBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionBoyko)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionBoyko)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="C) Population expansion\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(29.1767603378041,0.190915110603425,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionBoyko/1:350,lty="dashed",lwd=2,col="green")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="D) Population expansion\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(30.9631108230993,0.112475018218557,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionMouse/1:350,lty="dashed",lwd=2,col="red")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
#
dev.off()
1500*.3
300*.9
0.03*3
0.03*3
0.03*30
15000*.01
75000*.01
library(here)#
#
### Calculation of means#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantBoyko.txt")#
MeanConstantBoyko <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")#
MeanConstantMouse <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")#
MeanPopExpansionBoyko <- mean(Data$V2[1:50000]*20000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionMouse.txt")#
MeanPopExpansionMouse <- mean(Data$V2[1:50000]*20000)#
#
### Reading DFE parameters and 4Ns values from the truncated gamma distributions used#
#
DFEPars <- read.table ("../Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims/AnotherExtraTableOfProbabilities.txt")#
FourNsMeans <- c()#
#
for (i in 1:nrow(DFEPars)){#
FourNsMeans[i] <- 0#
#
for (j in 3:303){#
FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[i,j]#
}#
}#
#
pdf("../Figures/Figure6_MLEDFEHumanMouse2DemScenarios.pdf",width=7*2,height=7*2/4)#
par(mfrow = c(1,4),mar=c(5,5,5,3))#
#
MLE <- read.table("../Results/MLEDFEs/ConstantBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
BestFit[i] <- 1#
for (j in 1:30){#
    DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantBoyko)#
    DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantBoyko)#
    Differences <- c(Differences,DifferenceOne)#
    if (DifferenceOne < DifferenceTwo){#
        BestFit[i] <- j#
    }#
}#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="A) Constant size\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.454203927295,0.184753036884482,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanConstantBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/ConstantMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="B) Constant size\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.8608219789938,0.109621224838877,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#
#lines(1:350,(MeanConstantMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/PopExpansionBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionBoyko)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionBoyko)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="C) Population expansion\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(29.1767603378041,0.190915110603425,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionBoyko/1:350,lty="dashed",lwd=2,col="green")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="D) Population expansion\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(30.9631108230993,0.112475018218557,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionMouse/1:350,lty="dashed",lwd=2,col="red")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
#
dev.off()
350*0.3
5*70
2100/30
70*5
70*30
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/ScriptsOctober22_2017/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims")#
#
#### Another table of probabilities#
#
AlphaGrid <- 0.01*1:30#
BetaGrid <- 30*1:70#
#
TwoNsValues <- 0:300*.5 + .25#
#
Table <- matrix(ncol=303,nrow=0)#
#
for (j in AlphaGrid){#
    for (k in BetaGrid){#
		Probability <- 0#
		Row <- c(j,k)#
		for (i in TwoNsValues){#
			if ( i == 0.25){#
				Probability <- pgamma(0.25,j,1/k)#
				Row <- c(Row,Probability)#
			}else if (i==150.25){#
				Probability <- ( 1 - pgamma(i-0.5,j,1/k) )#
				Row <- c(Row,Probability)#
			}else{#
				Probability <-(pgamma(i,j,1/k) - pgamma(i-0.5,j,1/k))#
				Row <- c(Row,Probability)#
			}#
		}#
		Table <- rbind(Table,Row)#
#print (Probability)#
    }#
}#
#
write.table(Table,file="AnotherExtraTableOfProbabilities.txt",row.names=FALSE,col.names=FALSE,sep="\t")#
#
for (k in 1:2100){#
    print(sum(Table[k,3:303]))#
}
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims")#
#
#### Another table of probabilities#
#
AlphaGrid <- 0.01*1:30#
BetaGrid <- 30*1:70#
#
TwoNsValues <- 0:300*.5 + .25#
#
Table <- matrix(ncol=303,nrow=0)#
#
for (j in AlphaGrid){#
    for (k in BetaGrid){#
		Probability <- 0#
		Row <- c(j,k)#
		for (i in TwoNsValues){#
			if ( i == 0.25){#
				Probability <- pgamma(0.25,j,1/k)#
				Row <- c(Row,Probability)#
			}else if (i==150.25){#
				Probability <- ( 1 - pgamma(i-0.5,j,1/k) )#
				Row <- c(Row,Probability)#
			}else{#
				Probability <-(pgamma(i,j,1/k) - pgamma(i-0.5,j,1/k))#
				Row <- c(Row,Probability)#
			}#
		}#
		Table <- rbind(Table,Row)#
#print (Probability)#
    }#
}#
#
write.table(Table,file="AnotherExtraTableOfProbabilities.txt",row.names=FALSE,col.names=FALSE,sep="\t")#
#
for (k in 1:2100){#
    print(sum(Table[k,3:303]))#
}
0.01*2100
0.01*1500
15*30
5*70
15*30*.02*15
30*70
30*70*.03
30*70*.3
70*5
30*15
library(here)#
#
### Calculation of means#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantBoyko.txt")#
MeanConstantBoyko <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")#
MeanConstantMouse <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")#
MeanPopExpansionBoyko <- mean(Data$V2[1:50000]*20000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionMouse.txt")#
MeanPopExpansionMouse <- mean(Data$V2[1:50000]*20000)#
#
### Reading DFE parameters and 4Ns values from the truncated gamma distributions used#
#
DFEPars <- read.table ("../Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims/AnotherExtraTableOfProbabilities.txt")#
FourNsMeans <- c()#
#
for (i in 1:nrow(DFEPars)){#
FourNsMeans[i] <- 0#
#
for (j in 3:303){#
FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[i,j]#
}#
}#
#
pdf("../Figures/Figure6_MLEDFEHumanMouse2DemScenarios.pdf",width=7*2,height=7*2/4)#
par(mfrow = c(1,4),mar=c(5,5,5,3))#
#
MLE <- read.table("../Results/MLEDFEs/ConstantBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
BestFit[i] <- 1#
for (j in 1:30){#
    DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantBoyko)#
    DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantBoyko)#
    Differences <- c(Differences,DifferenceOne)#
    if (DifferenceOne < DifferenceTwo){#
        BestFit[i] <- j#
    }#
}#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="A) Constant size\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.454203927295,0.184753036884482,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanConstantBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/ConstantMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="B) Constant size\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.8608219789938,0.109621224838877,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#
#lines(1:350,(MeanConstantMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/PopExpansionBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionBoyko)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionBoyko)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="C) Population expansion\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(29.1767603378041,0.190915110603425,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionBoyko/1:350,lty="dashed",lwd=2,col="green")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="D) Population expansion\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(30.9631108230993,0.112475018218557,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionMouse/1:350,lty="dashed",lwd=2,col="red")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
#
dev.off()
setwd("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts/")
### Calculation of means#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantBoyko.txt")#
MeanConstantBoyko <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")#
MeanConstantMouse <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")#
MeanPopExpansionBoyko <- mean(Data$V2[1:50000]*20000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionMouse.txt")#
MeanPopExpansionMouse <- mean(Data$V2[1:50000]*20000)#
#
### Reading DFE parameters and 4Ns values from the truncated gamma distributions used#
#
DFEPars <- read.table ("../Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims/AnotherExtraTableOfProbabilities.txt")#
FourNsMeans <- c()#
#
for (i in 1:nrow(DFEPars)){#
FourNsMeans[i] <- 0#
#
for (j in 3:303){#
FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[i,j]#
}#
}#
#
pdf("../Figures/Figure6_MLEDFEHumanMouse2DemScenarios.pdf",width=7*2,height=7*2/4)#
par(mfrow = c(1,4),mar=c(5,5,5,3))#
#
MLE <- read.table("../Results/MLEDFEs/ConstantBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
BestFit[i] <- 1#
for (j in 1:30){#
    DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantBoyko)#
    DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantBoyko)#
    Differences <- c(Differences,DifferenceOne)#
    if (DifferenceOne < DifferenceTwo){#
        BestFit[i] <- j#
    }#
}#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="A) Constant size\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.454203927295,0.184753036884482,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanConstantBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/ConstantMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="B) Constant size\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.8608219789938,0.109621224838877,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#
#lines(1:350,(MeanConstantMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/PopExpansionBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionBoyko)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionBoyko)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="C) Population expansion\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(29.1767603378041,0.190915110603425,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionBoyko/1:350,lty="dashed",lwd=2,col="green")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="D) Population expansion\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(30.9631108230993,0.112475018218557,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionMouse/1:350,lty="dashed",lwd=2,col="red")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
#
dev.off()
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
library(here)#
#
### Calculation of means#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantBoyko.txt")#
MeanConstantBoyko <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")#
MeanConstantMouse <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")#
MeanPopExpansionBoyko <- mean(Data$V2[1:50000]*20000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionMouse.txt")#
MeanPopExpansionMouse <- mean(Data$V2[1:50000]*20000)#
#
### Reading DFE parameters and 4Ns values from the truncated gamma distributions used#
#
DFEPars <- read.table ("../Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims/AnotherExtraTableOfProbabilities.txt")#
#
pdf("../Figures/SuppFigure2_MeanDFEMouseHuman2DemScenarios.pdf")#
par(mfrow = c(2,2))#
par(mar=c(2.1,5.1,4.1,1.1))#
MLE <- read.table("../Results/MLEDFEs/ConstantBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
for (j in 3:303){#
    FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
}#
}#
#
beanplot(-FourNsMeans,main="Constant Boyko",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanConstantBoyko,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/ConstantMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Constant Mouse",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanConstantMouse,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Pop expansion Boyko",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanPopExpansionBoyko,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Pop expansion Mouse",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanPopExpansionMouse,col="red",pch=19)#
#
dev.off()
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
library(here)#
#
### Calculation of means#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantBoyko.txt")#
MeanConstantBoyko <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")#
MeanConstantMouse <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")#
MeanPopExpansionBoyko <- mean(Data$V2[1:50000]*20000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionMouse.txt")#
MeanPopExpansionMouse <- mean(Data$V2[1:50000]*20000)#
#
### Reading DFE parameters and 4Ns values from the truncated gamma distributions used#
#
DFEPars <- read.table ("../Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims/AnotherExtraTableOfProbabilities.txt")#
#
pdf("../Figures/SuppFigure2_MeanDFEMouseHuman2DemScenarios.pdf")#
par(mfrow = c(2,2))#
par(mar=c(2.1,5.1,4.1,1.1))#
MLE <- read.table("../Results/MLEDFEs/ConstantBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
for (j in 3:303){#
    FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
}#
}#
#
beanplot(-FourNsMeans,main="Constant Boyko",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanConstantBoyko,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/ConstantMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Constant Mouse",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanConstantMouse,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Pop expansion Boyko",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanPopExpansionBoyko,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Pop expansion Mouse",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanPopExpansionMouse,col="red",pch=19)#
#
dev.off()
library(here)#
#
### Calculation of means#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantBoyko.txt")#
MeanConstantBoyko <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")#
MeanConstantMouse <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")#
MeanPopExpansionBoyko <- mean(Data$V2[1:50000]*20000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionMouse.txt")#
MeanPopExpansionMouse <- mean(Data$V2[1:50000]*20000)#
#
### Reading DFE parameters and 4Ns values from the truncated gamma distributions used#
#
DFEPars <- read.table ("../Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims/AnotherExtraTableOfProbabilities.txt")#
FourNsMeans <- c()#
#
for (i in 1:nrow(DFEPars)){#
FourNsMeans[i] <- 0#
#
for (j in 3:303){#
FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[i,j]#
}#
}#
#
pdf("../Figures/Figure6_MLEDFEHumanMouse2DemScenarios.pdf",width=7*2,height=7*2/4)#
par(mfrow = c(1,4),mar=c(5,5,5,3))#
#
MLE <- read.table("../Results/MLEDFEs/ConstantBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
BestFit[i] <- 1#
for (j in 1:30){#
    DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantBoyko)#
    DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantBoyko)#
    Differences <- c(Differences,DifferenceOne)#
    if (DifferenceOne < DifferenceTwo){#
        BestFit[i] <- j#
    }#
}#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="A) Constant size\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.454203927295,0.184753036884482,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanConstantBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/ConstantMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="B) Constant size\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.8608219789938,0.109621224838877,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#
#lines(1:350,(MeanConstantMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/PopExpansionBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionBoyko)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionBoyko)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="C) Population expansion\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(29.1767603378041,0.190915110603425,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionBoyko/1:350,lty="dashed",lwd=2,col="green")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="D) Population expansion\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(30.9631108230993,0.112475018218557,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionMouse/1:350,lty="dashed",lwd=2,col="red")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
#
dev.off()
library(here)#
#
### Calculation of means#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantBoyko.txt")#
MeanConstantBoyko <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")#
MeanConstantMouse <- mean(Data$V2[1:50000]*40000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")#
MeanPopExpansionBoyko <- mean(Data$V2[1:50000]*20000)#
#
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionMouse.txt")#
MeanPopExpansionMouse <- mean(Data$V2[1:50000]*20000)#
#
### Reading DFE parameters and 4Ns values from the truncated gamma distributions used#
#
DFEPars <- read.table ("../Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims/AnotherExtraTableOfProbabilities.txt")#
FourNsMeans <- c()#
#
for (i in 1:nrow(DFEPars)){#
FourNsMeans[i] <- 0#
#
for (j in 3:303){#
FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[i,j]#
}#
}#
#
pdf("../Figures/Figure6_MLEDFEHumanMouse2DemScenarios.pdf",width=7*2,height=7*2/4)#
par(mfrow = c(1,4),mar=c(5,5,5,3))#
#
MLE <- read.table("../Results/MLEDFEs/ConstantBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
BestFit[i] <- 1#
for (j in 1:30){#
    DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantBoyko)#
    DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantBoyko)#
    Differences <- c(Differences,DifferenceOne)#
    if (DifferenceOne < DifferenceTwo){#
        BestFit[i] <- j#
    }#
}#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="A) Constant size\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.454203927295,0.184753036884482,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanConstantBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/ConstantMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="B) Constant size\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.8608219789938,0.109621224838877,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#
#lines(1:350,(MeanConstantMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/PopExpansionBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionBoyko)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionBoyko)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="C) Population expansion\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(29.1767603378041,0.190915110603425,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionBoyko/1:350,lty="dashed",lwd=2,col="green")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="D) Population expansion\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(30.9631108230993,0.112475018218557,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionMouse/1:350,lty="dashed",lwd=2,col="red")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
#
dev.off()
pdf("../Figures/Figure6_MLEDFEHumanMouse2DemScenarios.pdf",width=7*2,height=7*2/4)#
par(mfrow = c(1,4),mar=c(5,5,5,3))#
#
MLE <- read.table("../Results/MLEDFEs/ConstantBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
BestFit[i] <- 1#
for (j in 1:30){#
    DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantBoyko)#
    DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantBoyko)#
    Differences <- c(Differences,DifferenceOne)#
    if (DifferenceOne < DifferenceTwo){#
        BestFit[i] <- j#
    }#
}#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="A) Constant size\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.454203927295,0.184753036884482,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanConstantBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/ConstantMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanConstantMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanConstantMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="B) Constant size\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(50.8608219789938,0.109621224838877,col="red",pch=19,lwd=3)#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#
#lines(1:350,(MeanConstantMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
MLE <- read.table("../Results/MLEDFEs/PopExpansionBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionBoyko)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionBoyko)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="C) Population expansion\nHuman DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(29.1767603378041,0.190915110603425,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionBoyko/1:350,lty="dashed",lwd=2,col="green")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionBoyko/2)/1:350,lty="dashed",lwd=2,col="green")#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
BestFit <- c()#
Differences <- c()#
for (i in 1:70){#
    BestFit[i] <- 1#
    for (j in 1:30){#
        DifferenceOne <- abs(FourNsMeans[(j-1) * 70 + i] - MeanPopExpansionMouse)#
        DifferenceTwo <- abs(FourNsMeans[(BestFit[i]-1) * 70 + i] - MeanPopExpansionMouse)#
        Differences <- c(Differences,DifferenceOne)#
        if (DifferenceOne < DifferenceTwo){#
            BestFit[i] <- j#
        }#
    }#
}#
plot(Row*5,Column*.01,xlim=c(0,350),ylim=c(0,0.3),xlab=expression("Shape (" ~ alpha ~ ")"),ylab=expression("Scale (" ~ beta ~ ")"),main="D) Population expansion\nMouse DFE",cex.lab=2,cex.main=2.5,cex.axis=2,pch=19)#
#points(30.9631108230993,0.112475018218557,col="red",pch=19,lwd=3)#
#lines(1:350,MeanPopExpansionMouse/1:350,lty="dashed",lwd=2,col="red")#
lines(1:70*5,BestFit*0.01,lty="dashed",lwd=2,col="red")#
#lines(1:350,(MeanPopExpansionMouse/2)/1:350,lty="dashed",lwd=2,col="green")#
#
dev.off()
0.3*2100
0.3*30
0.6*30
DFEPars <- read.table ("../Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims/AnotherExtraTableOfProbabilities.txt")#
#
pdf("../Figures/SuppFigure2_MeanDFEMouseHuman2DemScenarios.pdf")#
par(mfrow = c(2,2))#
par(mar=c(2.1,5.1,4.1,1.1))#
MLE <- read.table("../Results/MLEDFEs/ConstantBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
for (j in 3:303){#
    FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
}#
}#
#
beanplot(-FourNsMeans,main="Constant Boyko",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanConstantBoyko,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/ConstantMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Constant Mouse",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanConstantMouse,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionBoykoMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Pop expansion Boyko",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanPopExpansionBoyko,col="red",pch=19)#
#
MLE <- read.table("../Results/MLEDFEs/PopExpansionMouseMLE.txt")#
#
Row <- ( MLE$V1 ) %% 70 + 1#
Column <- floor(( MLE$V1 ) / 70) + 1#
#
FourNsMeans <- c()#
for (i in 1:100){#
    DFEParameterNumber <- (Column[i]-1)*70 + Row[i]#
    FourNsMeans[i] <- 0#
    for (j in 3:303){#
        FourNsMeans[i] <- FourNsMeans[i] + (j-3)* DFEPars[DFEParameterNumber,j]#
    }#
}#
#
beanplot(-FourNsMeans,main="Pop expansion Mouse",ylab="Mean 4Ns value",cex.lab=1.5,ylim=c(-100,10),cex.axis=1.5, cex.main=1.5, col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6", maxstripline=0.15, beanlinewd=0.5, overall=10000, what=c(FALSE,TRUE,TRUE,TRUE), overallline = "median", ll=0.5)#
points(1,-MeanPopExpansionMouse,col="red",pch=19)#
#
dev.off()
library(MASS)
fitdistr(MeanPopExpansionBoyko,"gamma")
MeanPopExpansionBoyko
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")
fitdistr(Data,"gamma")
fitdistr(Data$V1,"gamma")
Data
fitdistr(Data$V2,"gamma")
fitdistr(Data$V2*50000,"gamma")
warnings()
Data$V2[1:100]
fitdistr(Data$V2*5000,"gamma")
fitdistr(Data$V2*20000,"gamma")
1/0.0170809633
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")
fitdistr(Data$V2*40000,"gamma")
1/0.0097667378
mean(Data)
mean(Data$V2*40000)
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")
mean(Data$V2*20000)
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionMouse.txt")
mean(Data$V2*20000)
.01*5
.01*30
.01*300
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")
mean(Data$V2*40000)
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionBoyko.txt")
mean(Data$V2*20000)
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesPopExpansionMouse.txt")
mean(Data$V2*20000)
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantMouse.txt")
mean(Data$V2*40000)
Data <- read.table("../Results/ExitSValues/ExitOnePercentSValuesConstantBoyko.txt")
mean(Data$V2*40000)
30*.01
70*.07
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims")#
#
#### Another table of probabilities#
#
AlphaGrid <- 0.01*1:30#
BetaGrid <- 30*1:2#
#
TwoNsValues <- 0:300*.5 + .25#
#
Table <- matrix(ncol=303,nrow=0)#
#
for (j in AlphaGrid){#
    for (k in BetaGrid){#
		Probability <- 0#
		Row <- c(j,k)#
		for (i in TwoNsValues){#
			if ( i == 0.25){#
				Probability <- pgamma(0.25,j,1/k)#
				Row <- c(Row,Probability)#
			}else if (i==150.25){#
				Probability <- ( 1 - pgamma(i-0.5,j,1/k) )#
				Row <- c(Row,Probability)#
			}else{#
				Probability <-(pgamma(i,j,1/k) - pgamma(i-0.5,j,1/k))#
				Row <- c(Row,Probability)#
			}#
		}#
		Table <- rbind(Table,Row)#
#print (Probability)#
    }#
}#
#
write.table(Table,file="AnotherExtraTableOfProbabilitiesSmall.txt",row.names=FALSE,col.names=FALSE,sep="\t")#
#
for (k in 1:2100){#
    print(sum(Table[k,3:303]))#
}
30*.03
70*1
30*1
70*.5
60*.5
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims")#
#
#### Another table of probabilities#
#
AlphaGrid <- 0.01*1:30#
BetaGrid <- 0.5*1:60#
#
TwoNsValues <- 0:300*.5 + .25#
#
Table <- matrix(ncol=303,nrow=0)#
#
for (j in AlphaGrid){#
    for (k in BetaGrid){#
		Probability <- 0#
		Row <- c(j,k)#
		for (i in TwoNsValues){#
			if ( i == 0.25){#
				Probability <- pgamma(0.25,j,1/k)#
				Row <- c(Row,Probability)#
			}else if (i==150.25){#
				Probability <- ( 1 - pgamma(i-0.5,j,1/k) )#
				Row <- c(Row,Probability)#
			}else{#
				Probability <-(pgamma(i,j,1/k) - pgamma(i-0.5,j,1/k))#
				Row <- c(Row,Probability)#
			}#
		}#
		Table <- rbind(Table,Row)#
#print (Probability)#
    }#
}#
#
write.table(Table,file="AnotherExtraTableOfProbabilitiesSmall.txt",row.names=FALSE,col.names=FALSE,sep="\t")#
#
for (k in 1:2100){#
    print(sum(Table[k,3:303]))#
}
write.table(Table,file="AnotherExtraTableOfProbabilitiesSmall.txt",row.names=FALSE,col.names=FALSE,sep="\t")#
#
for (k in 1:1800){#
    print(sum(Table[k,3:303]))#
}
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims")#
#
#### Another table of probabilities#
#
AlphaGrid <- 0.01*1:30#
BetaGrid <- 30*1:70#
#
TwoNsValues <- 0:300*.5 + .25#
#
Table <- matrix(ncol=303,nrow=0)#
#
for (j in AlphaGrid){#
    for (k in BetaGrid){#
		Probability <- 0#
		Row <- c(j,k)#
		for (i in TwoNsValues){#
			if ( i == 0.25){#
				Probability <- pgamma(0.25,j,1/k)#
				Row <- c(Row,Probability)#
			}else if (i==150.25){#
				Probability <- ( 1 - pgamma(i-0.5,j,1/k) )#
				Row <- c(Row,Probability)#
			}else{#
				Probability <-(pgamma(i,j,1/k) - pgamma(i-0.5,j,1/k))#
				Row <- c(Row,Probability)#
			}#
		}#
		Table <- rbind(Table,Row)#
#print (Probability)#
    }#
}#
#
write.table(Table,file="AnotherExtraTableOfProbabilities.txt",row.names=FALSE,col.names=FALSE,sep="\t")#
#
for (k in 1:2100){#
    print(sum(Table[k,3:303]))#
}
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Scripts/Sims/ConstantPopSizeBoyko/ImportanceSamplingSims")#
#
#### Another table of probabilities#
#
AlphaGrid <- 0.01*1:30#
BetaGrid <- 1:30#
#
TwoNsValues <- 0:300*.5 + .25#
#
Table <- matrix(ncol=303,nrow=0)#
#
for (j in AlphaGrid){#
    for (k in BetaGrid){#
		Probability <- 0#
		Row <- c(j,k)#
		for (i in TwoNsValues){#
			if ( i == 0.25){#
				Probability <- pgamma(0.25,j,1/k)#
				Row <- c(Row,Probability)#
			}else if (i==150.25){#
				Probability <- ( 1 - pgamma(i-0.5,j,1/k) )#
				Row <- c(Row,Probability)#
			}else{#
				Probability <-(pgamma(i,j,1/k) - pgamma(i-0.5,j,1/k))#
				Row <- c(Row,Probability)#
			}#
		}#
		Table <- rbind(Table,Row)#
#print (Probability)#
    }#
}#
#
write.table(Table,file="AnotherExtraTableOfProbabilitiesSmall.txt",row.names=FALSE,col.names=FALSE,sep="\t")#
#
for (k in 1:900){#
    print(sum(Table[k,3:303]))#
}
