AllPDFs[22000]
AllPDFs[21000]
AllPDFs[71000]
AllPDFs[70000]
AllPDFs[60000]
AllPDFs[65000]
length(AllPDFs)
TotalTwoNs[1]
.00001*10000
.00001*10000*2
TotalTwoNs[50000]
library('Bessel')#
#
InitialPopSize = 10000#
TotalTwoNs <- c()#
#
m = 0.58#
sigma = 0.109#
Ne = 2476#
#
PartOne <- 2^((1-m)/2)#
PartTwo <- Ne^(1/2)#
PartFour <- (1 + 1/ (Ne*sigma*sigma))#
PartSix <- (pi^(1/2)) * ( sigma^m ) * (gamma(m/2) )#
#
TotalProb <- 0#
#
AllPDFs <- c()#
#
for (i in -50000:-1)#
{#
s <- i*0.00001#
TotalTwoNs <- c(TotalTwoNs, 2 * InitialPopSize * s)#
PartThree <- abs(s)^((m-1)/2)#
PartFive <- exp(-Ne*s)#
Term <- Ne * abs(s) * ((1 + 1 / (Ne * sigma * sigma))^(1/2))#
LastTerm <- besselK(Term, (m-1)/2)#
#
print (i)#
# print (PartOne)#
# print (PartTwo)#
# print (PartThree)#
# print (PartFour)#
# print (PartFive)#
# print (PartSix)#
# print (Term)#
# print (LastTerm)#
print (TotalProb)#
#
Expression <- (PartOne * PartTwo * PartThree * PartFour * PartFive / PartSix) * LastTerm#
Pdf <- Expression # * LastTerm#
#
if (Pdf == "NaN"){#
Pdf = 0#
}#
TotalProb <- TotalProb + Pdf * .00001#
AllPDFs <- c(AllPDFs, Pdf)#
}#
for (i in 1:50000)#
{#
s <- i*0.00001#
TotalTwoNs <- c(TotalTwoNs, 2 * InitialPopSize * s)#
PartThree <- abs(s)^((m-1)/2)#
PartFive <- exp(-Ne*s)#
Term <- Ne * abs(s) * ((1 + 1 / (Ne * sigma * sigma))^(1/2))#
LastTerm <- besselK(Term, (m-1)/2)#
#
print (i)#
# print (PartOne)#
# print (PartTwo)#
# print (PartThree)#
# print (PartFour)#
# print (PartFive)#
# print (PartSix)#
# print (Term)#
# print (LastTerm)#
print (TotalProb)#
#
Expression <- (PartOne * PartTwo * PartThree * PartFour * PartFive / PartSix) * LastTerm#
Pdf <- Expression # * LastTerm#
#
if (Pdf == "NaN"){#
Pdf = 0#
}#
TotalProb <- TotalProb + Pdf * .00001#
AllPDFs <- c(AllPDFs, Pdf)#
}#
#
AllPDFs <- AllPDFs / sum(AllPDFs)#
AllTheStuff <- c()#
PDFSum <- 0#
for (i in -50000:-1){#
    if (AllPDFs[i+50001] == 0.0){#
        ThisRow <- c(TotalTwoNs[i+50001], AllPDFs[i+50001])#
        AllTheStuff <- rbind(AllTheStuff,ThisRow)#
    }#
}
nrow(AllTheStuff)
library('Bessel')#
#
InitialPopSize = 10000#
TotalTwoNs <- c()#
#
m = 0.58#
sigma = 0.109#
Ne = 2476#
#
PartOne <- 2^((1-m)/2)#
PartTwo <- Ne^(1/2)#
PartFour <- (1 + 1/ (Ne*sigma*sigma))#
PartSix <- (pi^(1/2)) * ( sigma^m ) * (gamma(m/2) )#
#
TotalProb <- 0#
#
AllPDFs <- c()#
#
for (i in -50000:-1)#
{#
s <- i*0.00001#
TotalTwoNs <- c(TotalTwoNs, 2 * InitialPopSize * s)#
PartThree <- abs(s)^((m-1)/2)#
PartFive <- exp(-Ne*s)#
Term <- Ne * abs(s) * ((1 + 1 / (Ne * sigma * sigma))^(1/2))#
LastTerm <- besselK(Term, (m-1)/2)#
#
print (i)#
# print (PartOne)#
# print (PartTwo)#
# print (PartThree)#
# print (PartFour)#
# print (PartFive)#
# print (PartSix)#
# print (Term)#
# print (LastTerm)#
print (TotalProb)#
#
Expression <- (PartOne * PartTwo * PartThree * PartFour * PartFive / PartSix) * LastTerm#
Pdf <- Expression # * LastTerm#
#
if (Pdf == "NaN"){#
Pdf = 0#
}#
TotalProb <- TotalProb + Pdf * .00001#
AllPDFs <- c(AllPDFs, Pdf)#
}#
for (i in 1:50000)#
{#
s <- i*0.00001#
TotalTwoNs <- c(TotalTwoNs, 2 * InitialPopSize * s)#
PartThree <- abs(s)^((m-1)/2)#
PartFive <- exp(-Ne*s)#
Term <- Ne * abs(s) * ((1 + 1 / (Ne * sigma * sigma))^(1/2))#
LastTerm <- besselK(Term, (m-1)/2)#
#
print (i)#
# print (PartOne)#
# print (PartTwo)#
# print (PartThree)#
# print (PartFour)#
# print (PartFive)#
# print (PartSix)#
# print (Term)#
# print (LastTerm)#
print (TotalProb)#
#
Expression <- (PartOne * PartTwo * PartThree * PartFour * PartFive / PartSix) * LastTerm#
Pdf <- Expression # * LastTerm#
#
if (Pdf == "NaN"){#
Pdf = 0#
}#
TotalProb <- TotalProb + Pdf * .00001#
AllPDFs <- c(AllPDFs, Pdf)#
}#
#
AllPDFs <- AllPDFs / sum(AllPDFs)#
AllTheStuff <- c()#
PDFSum <- 0#
for (i in -50000:-1){#
    if (AllPDFs[i+50001] == 0.0){#
        ThisRow <- c(TotalTwoNs[i+50001], AllPDFs[i+50001])#
        AllTheStuff <- rbind(AllTheStuff,ThisRow)#
    }#
}#
#
for (i in 1:50000){#
    if (AllPDFs[i] == 0.0){#
        ThisRow <- c(TotalTwoNs[i], AllPDFs[i])#
        AllTheStuff <- rbind(AllTheStuff,ThisRow)#
    }#
}
4000*0.0095
4000*0.1095
4000*0.00105
4000*0.0105
3.66/100
4.113/1000
.125*.125
.125*.125 * 100
25*100
2500/3600
1e-8
1e+8
10000000
100000000-1
99999999
2*10000*.005
0.775121915994229*(0.43209512012938 + 0.432315083717483)/2
0.43209512012938 - 0.431875356850953
0.432315083717483 - 0.43209512012938
00.775121915994229*(0.0002197633 + 0.0002199636)/2
0.99999999999713-0.999999999997056
0.999999999997203 - 0.99999999999713
(7.394085e-14 + 7.305268e-14 ) / 2
30*100
99999999
4*500*1.2e-8
500/(1+ 0.0625)
470.5882 * 2.4e-05
4*1000*1.2e-8
1000/(1+ 0.0625)
4* 941.1765*1.2e-8
1000/(1+ 0.125)
4* 888.8889*1.2e-8
2.19e-5/(4*1.2e-8)
15140/2
factorial(72)/(factorial(70)*factorial(2))
factorial(72)/(factorial(70)*factorial(2)) * 2
factorial(71)/(factorial(71)*factorial(2)) * 2
factorial(71)/(factorial(69)*factorial(2)) * 2
factorial(70)/(factorial(68)*factorial(2)) * 2
factorial(69)/(factorial(67)*factorial(2)) * 2
7242*.0095
7242*.0096
7242*.0097
7242*.0098
1.380834e-04 * 7242
5000/60
Data <- read.table("~/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/OldCopy/HaplotypeDFEStandingVariation/Results/ABCResults/ParametersAndStatisticsNotCpG.txt")
Data[1,]
Data[101,]
Data[1:100*100+1,]
Data[0:100*100+1,3]
Data[0:100*100+1,4]
Data[0:100*100+1,5]
Data[19*100+1,5]
Data[20*100+1,5]
Data[0*100+1,5]
Data[4*100+1,5]
Data[4*100+1]
Data[4*100+1,]
Data[19*100+1,]
Data[0:100*100+1,6]
Data[0:19*100+1,6]
Data[0:19*100+2,6]
0:19*100+2
Data[0:19*100+2,]
Data[0:19*100+1,]
Results <- read.table("~/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/OldCopy/HaplotypeDFEStandingVariation/Results/ABCResults/Best100NotCpG.txt")
head(Results)
max(Results$V3)
10*100
1000/60
17+25+13+21+20+23+12+12
69/7242
68/7242
76/7242
77/7242
100/24
90*10
900/60
100000*500
153/4
143/4
100000*20000
Data <- read.table(""~/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ABCResults/Best100NotCpG.txt")
Data <- read.table("~/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/ABCResults/Best100NotCpG.txt")
head(Data)
median(Data$V4)
median(Data$V2)
median(Data$V3)
tail((Data))
69/7242
68/7242
17+25+13+21+20+23+12+12
238/528714
228/565630.5
1000/10
100*10
1000/60
74/(4*60+17)
4*60+17
1000* 0.2879377
287.9377/60
257/74
3.472973*74
3.472973*1000
3472.973/60
8463/21
library(viridis)
Colors <- viridis(5)
library(viridis)
Colors <- viridis(5)
plot(1:5, col = Colors)
plot(1:5, col = Colors, pch = 19)
plot(1:5, col = Colors, pch = 19, cex = 5)
35909.5/98991
401*11 +203
8463/401
8463/403
403*11 +203
401*1 +203
403*10 +203
403*9 +203
715027/705323
721812/705323
.35*1.023
setwd("~/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Scripts/Sims/UK10K_OnePercenters/ImportanceSamplingSims/")
Data <- read.table("FullTable.txt")#
RecombinationQuantiles <- read.table("QuantilesRecombination.txt")#
#
RecValuesOne <- read.table("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Scripts/Sims/UK10K_OnePercenters/ForwardSims/RecRateSynonymousOnePercentRightNoCpG.txt")#
RecValuesTwo <- read.table("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Scripts/Sims/UK10K_OnePercenters/ForwardSims/RecRateSynonymousOnePercentLeftNoCpG.txt")#
RecValues <- rbind(RecValuesOne,RecValuesTwo)#
#
for (i in 1:546){#
}#
AllCoefficients <- c()#
#
for (i in 1:403){#
    Points <- Data[0:20*403 + i,2]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out1 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
    Points <- Data[0:20*403 + i,3]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out2 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
#
    Points <- Data[0:20*403 + i,4]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out3 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
    Points <- Data[0:20*403 + i,5]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out4 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
    Points <- Data[0:20*403 + i,6]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out5 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
    Points <- Data[0:20*403 + i,7]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out6 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
#
    Row <- c(lm.out1$coefficients, lm.out2$coefficients, lm.out3$coefficients, lm.out4$coefficients, lm.out5$coefficients, lm.out6$coefficients )#
    AllCoefficients <- rbind(AllCoefficients,Row)#
}#
#
write.table(AllCoefficients, file = "AllRegressionCoefficients.txt",row.names= FALSE,col.names = FALSE)#
#
# par(mfrow=c(2,3))#
#
TotalErrors <- c()#
i <- 1#
ConcatenateTestValues <- c()#
PolyNum <- 5#
for (FourNs in 1:403){#
print (FourNs)#
FirstElement <- c()#
FirstPoint <- c()#
RecTestValue <- 4000#
AllComparisons <- c(t(RecombinationQuantiles))#
for (i in 2:7){#
Points <- Data[0:20*403 + FourNs,i]#
Comparison <- cbind(RecombinationQuantiles,Points)#
AllComparisons <- cbind(AllComparisons, Points)#
lm.out1 = lm(Points ~ poly(V1,PolyNum,raw=TRUE),Comparison)#
# plot(Comparison$V1,Comparison$Points)#
#
Test <- 0#
SingleTest <- 0#
for (Nums in 1:(PolyNum+1)){#
#
CurrentMultiplication <- lm.out1$coefficients[Nums]#
SingleMult <- lm.out1$coefficients[Nums]#
if (Nums > 1){#
    for (MulNum in 1:(Nums - 1) ){#
    CurrentMultiplication <- CurrentMultiplication * RecombinationQuantiles$V1#
    SingleMult <- SingleMult * RecValues#
    }#
}#
Test <- Test + CurrentMultiplication#
SingleTest <- SingleTest + SingleMult#
}#
Error <- sum(abs(Points-Test))#
TotalErrors <- c(TotalErrors,Error)#
#
# Test <- lm.out1$coefficients[1] + lm.out1$coefficients[2] * RecombinationQuantiles$V1 + lm.out1$coefficients[3]* RecombinationQuantiles$V1* RecombinationQuantiles$V1 + lm.out1$coefficients[4]* RecombinationQuantiles$V1* RecombinationQuantiles$V1 * RecombinationQuantiles$V1 + lm.out1$coefficients[5]* RecombinationQuantiles$V1* RecombinationQuantiles$V1 * RecombinationQuantiles$V1* RecombinationQuantiles$V1#
#
# + lm.out1$coefficients[5]* RecombinationQuantiles$V1* RecombinationQuantiles$V1 * RecombinationQuantiles$V1* RecombinationQuantiles$V1 + lm.out1$coefficients[6]* RecombinationQuantiles$V1* RecombinationQuantiles$V1 * RecombinationQuantiles$V1* RecombinationQuantiles$V1 * RecombinationQuantiles$V1#
# lines(Comparison$V1,Test, col = "red")#
# points(t(RecValues), t(SingleTest), col = "blue")#
# SingleTest <- lm.out1$coefficients[1] + lm.out1$coefficients[2] * RecValues + lm.out1$coefficients[3]* RecValues * RecValues + lm.out1$coefficients[4]* RecValues * RecValues * RecValues + lm.out1$coefficients[5]* RecValues * RecValues * RecValues * RecValues#
# + lm.out1$coefficients[5]* RecValues * RecValues * RecValues * RecValues + lm.out1$coefficients[6]* RecValues * RecValues * RecValues * RecValues  * RecValues#
ConcatenateTestValues <- rbind(ConcatenateTestValues, t(SingleTest))#
}#
#
print(Test)#
# FirstElement <- rbind(FirstElement, Test)#
# FirstPoint <- rbind(FirstPoint, Points)#
}#
#
#### AdditionalStep#
#
for (i in 1:304){#
    if (RecValues$V1[i] >= RecombinationQuantiles$V1[20]){#
        ConcatenateTestValues[,i] <- rep.int(1, 403*6)#
        print(i)#
    }#
}#
#
write.table(ConcatenateTestValues, file = "PLGivenSTableWithRecsSyn.txt",row.names= FALSE,col.names = FALSE)#
#
Stuff <- c()#
for (i in 1:403){#
Stuff <- rbind(Stuff,c( ConcatenateTestValues[ i * 6 + 1:6,545] ))#
}#
Stuff#
write.table(Stuff,"AyCaon.txt",sep="\t")
Data <- read.table("FullTable.txt")#
RecombinationQuantiles <- read.table("QuantilesRecombination.txt")#
#
RecValuesOne <- read.table("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Scripts/Sims/UK10K_OnePercenters/ForwardSims/RecRateMissenseOnePercentRightNoCpG.txt")#
RecValuesTwo <- read.table("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Scripts/Sims/UK10K_OnePercenters/ForwardSims/RecRateMissenseOnePercentLeftNoCpG.txt")#
RecValues <- rbind(RecValuesOne,RecValuesTwo)#
#
for (i in 1:546){#
}#
AllCoefficients <- c()#
#
for (i in 1:403){#
    Points <- Data[0:20*403 + i,2]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out1 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
    Points <- Data[0:20*403 + i,3]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out2 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
#
    Points <- Data[0:20*403 + i,4]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out3 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
    Points <- Data[0:20*403 + i,5]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out4 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
    Points <- Data[0:20*403 + i,6]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out5 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
    Points <- Data[0:20*403 + i,7]#
    Comparison <- cbind(RecombinationQuantiles,Points)#
    lm.out6 = lm(Points ~ poly(V1,4,raw=TRUE),Comparison)#
#
    Row <- c(lm.out1$coefficients, lm.out2$coefficients, lm.out3$coefficients, lm.out4$coefficients, lm.out5$coefficients, lm.out6$coefficients )#
    AllCoefficients <- rbind(AllCoefficients,Row)#
}#
#
write.table(AllCoefficients, file = "AllRegressionCoefficients.txt",row.names= FALSE,col.names = FALSE)#
#
NeutralVector <- c()#
# par(mfrow=c(2,3))#
#
SignificantPValueNumber <- 0#
TotalErrors <- c()#
ConcatenateErrorValues <- c()#
i <- 1#
ConcatenateTestValues <- c()#
PolyNum <- 5#
for (FourNs in 3:403){#
print (FourNs)#
FirstElement <- c()#
FirstPoint <- c()#
RecTestValue <- 4000#
AllComparisons <- c(t(RecombinationQuantiles))#
for (i in 2:7){#
Points <- Data[0:20*403 + FourNs,i]#
Comparison <- cbind(RecombinationQuantiles,Points)#
AllComparisons <- cbind(AllComparisons, Points)#
lm.out1 = lm(Points ~ poly(V1,PolyNum,raw=TRUE),Comparison)#
# plot(Comparison$V1,Comparison$Points)#
#
for (k in 1:(PolyNum+1)){#
    if (summary(lm.out1)$coefficients[k,4] > 0.05){#
        SignificantPValueNumber <- SignificantPValueNumber + 1#
        ConcatenateErrorValues <- c(ConcatenateErrorValues,rbind(i,k,FourNs))#
    }#
}#
#
Test <- 0#
SingleTest <- 0#
for (Nums in 1:(PolyNum+1)){#
#
CurrentMultiplication <- lm.out1$coefficients[Nums]#
SingleMult <- lm.out1$coefficients[Nums]#
if (Nums > 1){#
    for (MulNum in 1:(Nums - 1) ){#
    CurrentMultiplication <- CurrentMultiplication * RecombinationQuantiles$V1#
    SingleMult <- SingleMult * RecValues#
    }#
}#
Test <- Test + CurrentMultiplication#
SingleTest <- SingleTest + SingleMult#
}#
Error <- sum(abs(Points-Test))#
TotalErrors <- c(TotalErrors,Error)#
#
# Test <- lm.out1$coefficients[1] + lm.out1$coefficients[2] * RecombinationQuantiles$V1 + lm.out1$coefficients[3]* RecombinationQuantiles$V1* RecombinationQuantiles$V1 + lm.out1$coefficients[4]* RecombinationQuantiles$V1* RecombinationQuantiles$V1 * RecombinationQuantiles$V1 + lm.out1$coefficients[5]* RecombinationQuantiles$V1* RecombinationQuantiles$V1 * RecombinationQuantiles$V1* RecombinationQuantiles$V1#
#
# + lm.out1$coefficients[5]* RecombinationQuantiles$V1* RecombinationQuantiles$V1 * RecombinationQuantiles$V1* RecombinationQuantiles$V1 + lm.out1$coefficients[6]* RecombinationQuantiles$V1* RecombinationQuantiles$V1 * RecombinationQuantiles$V1* RecombinationQuantiles$V1 * RecombinationQuantiles$V1#
# lines(Comparison$V1,Test, col = "red")#
# points(t(RecValues), t(SingleTest), col = "blue")#
# SingleTest <- lm.out1$coefficients[1] + lm.out1$coefficients[2] * RecValues + lm.out1$coefficients[3]* RecValues * RecValues + lm.out1$coefficients[4]* RecValues * RecValues * RecValues + lm.out1$coefficients[5]* RecValues * RecValues * RecValues * RecValues#
# + lm.out1$coefficients[5]* RecValues * RecValues * RecValues * RecValues + lm.out1$coefficients[6]* RecValues * RecValues * RecValues * RecValues  * RecValues#
ConcatenateTestValues <- rbind(ConcatenateTestValues, t(SingleTest))#
}#
#
print(Test)#
# FirstElement <- rbind(FirstElement, Test)#
# FirstPoint <- rbind(FirstPoint, Points)#
}#
#
print(round (sum(TotalErrors)) / length(TotalErrors), digits=4)#
print (SignificantPValueNumber)#
NeutralVector <- rbind(NeutralVector, ConcatenateTestValues[203*6+1:6,545])#
#### AdditionalStep#
#
for (i in 1:546){#
    if (RecValues$V1[i] >= RecombinationQuantiles$V1[20]){#
        ConcatenateTestValues[,i] <- rep.int(1, 403*6)#
        print(i)#
    }#
}#
#
write.table(ConcatenateTestValues, file = "PLGivenSTableWithRecs.txt",row.names= FALSE,col.names = FALSE)#
#
Stuff <- c()#
for (i in 1:403){#
Stuff <- rbind(Stuff,c( ConcatenateTestValues[ i * 6 + 1:6,545] ))#
}#
Stuff#
write.table(Stuff,"AyCaon.txt",sep="\t")#
pdf("../../../../Figures/SuppFigureSX14_PRLine.pdf",width=14,height = 10)#
par(mar=c(4.1,5.1,2.6,2.1))#
par(mfrow = c(2,3))#
#
OrderedVector <- ConcatenateTestValues[1201,order(RecValues$V1)]#
SortRecValues <- sort(RecValues$V1)#
#
plot(SortRecValues,OrderedVector,type="o",main=expression(w[1]), xlab = "Population scaled recombination rate in the region",  ylab = "Probability", cex.lab=1.7, cex.main=2, pch = 3)#
Points <- Data[0:20*403 + 201,2]#
points(RecombinationQuantiles$V1,Points,pch=19, col = "red")#
abline(v=RecombinationQuantiles$V1[20],lty=2)#
#
OrderedVector <- ConcatenateTestValues[1202,order(RecValues$V1)]#
SortRecValues <- sort(RecValues$V1)#
#
plot(SortRecValues,OrderedVector,type="o",main=expression(w[2]), xlab = "Population scaled recombination rate in the region",  ylab = "Probability", cex.lab=1.7, cex.main=2, pch = 3)#
Points <- Data[0:20*403 + 201,3]#
points(RecombinationQuantiles$V1,Points,pch=19, col = "red")#
abline(v=RecombinationQuantiles$V1[20],lty=2)#
OrderedVector <- ConcatenateTestValues[1203,order(RecValues$V1)]#
SortRecValues <- sort(RecValues$V1)#
#
plot(SortRecValues,OrderedVector,type="o",main=expression(w[3]), xlab = "Population scaled recombination rate in the region",  ylab = "Probability", cex.lab=1.7, cex.main=2, pch = 3)#
Points <- Data[0:20*403 + 201,4]#
points(RecombinationQuantiles$V1,Points,pch=19, col = "red")#
abline(v=RecombinationQuantiles$V1[20],lty=2)#
OrderedVector <- ConcatenateTestValues[1204,order(RecValues$V1)]#
SortRecValues <- sort(RecValues$V1)#
#
plot(SortRecValues,OrderedVector,type="o",main=expression(w[4]), xlab = "Population scaled recombination rate in the region",  ylab = "Probability", cex.lab=1.7, cex.main=2, pch = 3)#
Points <- Data[0:20*403 + 201,5]#
points(RecombinationQuantiles$V1,Points,pch=19, col = "red")#
abline(v=RecombinationQuantiles$V1[20],lty=2)#
OrderedVector <- ConcatenateTestValues[1205,order(RecValues$V1)]#
SortRecValues <- sort(RecValues$V1)#
#
plot(SortRecValues,OrderedVector,type="o",main=expression(w[5]), xlab = "Population scaled recombination rate in the region",  ylab = "Probability", cex.lab=1.7, cex.main=2, pch = 3)#
Points <- Data[0:20*403 + 201,6]#
points(RecombinationQuantiles$V1,Points,pch=19, col = "red")#
abline(v=RecombinationQuantiles$V1[20],lty=2)#
#
OrderedVector <- ConcatenateTestValues[1206,order(RecValues$V1)]#
SortRecValues <- sort(RecValues$V1)#
#
plot(SortRecValues,OrderedVector,type="o",main=expression(w[6]), xlab = "Population scaled recombination rate in the region",  ylab = "Probability", cex.lab=1.7, cex.main=2, pch = 3)#
Points <- Data[0:20*403 + 201,7]#
points(RecombinationQuantiles$V1,Points,pch=19, col = "red")#
abline(v=RecombinationQuantiles$V1[20],lty=2)#
#
dev.off()
Posterior100 <- read.table("../Results/ABCResults/Best500NotCpG.txt")
setwd("s~/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts/")
setwd("~/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts/")
Posterior100 <- read.table("../Results/ABCResults/Best500NotCpG.txt")
head(Posterior100)
median(Posterior100$V4)
median(Posterior100$V4)/5
round(median(Posterior100$V4)/5)
round(median(Posterior100$V4[1:100])/5)
round(median(Posterior100$V4[1:200])/5)
round(median(Posterior100$V4[1:300])/5)
round(median(Posterior100$V4[1:400])/5)
round(median(Posterior100$V4[1:500])/5)
round(median(Posterior100$V3[1:500])/5)
round(median(Posterior100$V2[1:500])/5)
round(median(Posterior100$V4[1:300])/5)
round(median(Posterior100$V3[1:300])/5)
round(median(Posterior100$V2[1:300])/5)
Posterior100 <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")
head(Posterior100)
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Scripts/Sims/UK10K_OnePercenters/ImportanceSamplingSims")#
#
OrderedData <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")#
#
for (i in 0:10){#
    Start <- i*50 + 1#
    End <- (i+1)*50#
    print (Start)#
    print (End)#
}
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Scripts/Sims/UK10K_OnePercenters/ImportanceSamplingSims")#
#
OrderedData <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")#
#
for (i in 0:10){#
    End <- (i+1)*50#
    print (End)#
}
head(OrderedData)
OrderedData <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts")#
#
OrderedData <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")#
#
for (i in 0:10){#
    End <- (i+1)*50#
    print (End)#
}
head(OrderedData)
BestABC <- median(OrderedData$V2[1:End])
BestABC
for (i in 0:10){#
    End <- (i+1)*50#
    print (End)#
    BestABCN1 <- OrderedData$V2[1:End]#
    BestABCTime <- OrderedData$V3[1:End]#
    BestABCN0 <- OrderedData$V4[1:End]#
}#
#
# BestABC <- OrderedData$V2[1:End]
Matrix <- matrix(c(BestABCN1,BestABCTime,BestABCN0))
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts")#
#
OrderedData <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")#
#
End <- (1)*50#
print (End)#
BestABCN1 <- OrderedData$V2[1:End]#
BestABCTime <- OrderedData$V3[1:End]#
BestABCN0 <- OrderedData$V4[1:End]#
#
Matrix <- matrix(c(BestABCN1,BestABCTime,BestABCN0))#
#
for (i in 1:10){#
    End <- (i+1)*50#
    print (End)#
    BestABCN1 <- OrderedData$V2[1:End]#
    BestABCTime <- OrderedData$V3[1:End]#
    BestABCN0 <- OrderedData$V4[1:End]#
    Row <- c(BestABCN1, BestABCTime, BestABCN0)#
    Matrix <- rbind(Matrix, Row)#
}
Matrix
Row
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts")#
#
OrderedData <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")#
#
End <- (1)*50#
print (End)#
BestABCN1 <- median(OrderedData$V2[1:End])#
BestABCTime <- median(OrderedData$V3[1:End])#
BestABCN0 <- median(OrderedData$V4[1:End])#
#
Matrix <- matrix(c(BestABCN1,BestABCTime,BestABCN0))#
#
for (i in 1:10){#
    End <- (i+1)*50#
    print (End)#
    BestABCN1 <- median(OrderedData$V2[1:End])#
    BestABCTime <- median(OrderedData$V3[1:End])#
    BestABCN0 <- median(OrderedData$V4[1:End])#
    Row <- c(BestABCN1, BestABCTime, BestABCN0)#
    Matrix <- rbind(Matrix, Row)#
}
Matrix
Row
rbind
Matrix
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts")#
#
OrderedData <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")#
#
End <- (1)*50#
print (End)#
BestABCN1 <- median(OrderedData$V2[1:End])#
BestABCTime <- median(OrderedData$V3[1:End])#
BestABCN0 <- median(OrderedData$V4[1:End])#
#
Matrix <- matrix(c(BestABCN1,BestABCTime,BestABCN0),ncol=3)
for (i in 1:10){#
    End <- (i+1)*50#
    print (End)#
    BestABCN1 <- median(OrderedData$V2[1:End])#
    BestABCTime <- median(OrderedData$V3[1:End])#
    BestABCN0 <- median(OrderedData$V4[1:End])#
    Row <- c(BestABCN1, BestABCTime, BestABCN0)#
    Matrix <- rbind(Matrix, Row)#
}#
#
# BestABC <- OrderedData$V2[1:End]
Matrix
Matrix/5
50*100
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts")#
#
OrderedData <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")#
#
End <- (1)*50#
print (End)#
BestABCN1 <- median(OrderedData$V2[1:End])#
BestABCTime <- median(OrderedData$V3[1:End])#
BestABCN0 <- median(OrderedData$V4[1:End])#
#
Matrix <- matrix(c(BestABCN1,BestABCTime,BestABCN0),ncol=3)#
#
for (i in 1:50){#
    End <- (i+1)*50#
    print (End)#
    BestABCN1 <- median(OrderedData$V2[1:End])#
    BestABCTime <- median(OrderedData$V3[1:End])#
    BestABCN0 <- median(OrderedData$V4[1:End])#
    Row <- c(BestABCN1, BestABCTime, BestABCN0)#
    Matrix <- rbind(Matrix, Row)#
}
Matrix
Matrix/5
100*100
100*1000
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts")#
#
OrderedData <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")#
#
End <- (1)*50#
print (End)#
BestABCN1 <- median(OrderedData$V2[1:End])#
BestABCTime <- median(OrderedData$V3[1:End])#
BestABCN0 <- median(OrderedData$V4[1:End])#
#
Matrix <- matrix(c(BestABCN1,BestABCTime,BestABCN0),ncol=3)#
#
for (i in 1:1000){#
    End <- (i+1)*50#
    print (End)#
    BestABCN1 <- median(OrderedData$V2[1:End])#
    BestABCTime <- median(OrderedData$V3[1:End])#
    BestABCN0 <- median(OrderedData$V4[1:End])#
    Row <- c(BestABCN1, BestABCTime, BestABCN0)#
    Matrix <- rbind(Matrix, Row)#
}
head(Matrix)
plot(Matrix[,1])
plot(Matrix[,2])
plot(Matrix[,3])
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts")#
#
OrderedData <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")#
#
End <- (1)*50#
print (End)#
BestABCN1 <- median(OrderedData$V2[1:End])#
BestABCTime <- median(OrderedData$V3[1:End])#
BestABCN0 <- median(OrderedData$V4[1:End])#
#
Matrix <- matrix(c(BestABCN1,BestABCTime,BestABCN0),ncol=3)#
#
for (i in 1:5000){#
    End <- (i+1)*50#
#    print (End)#
    BestABCN1 <- median(OrderedData$V2[1:End])#
    BestABCTime <- median(OrderedData$V3[1:End])#
    BestABCN0 <- median(OrderedData$V4[1:End])#
    Row <- c(BestABCN1, BestABCTime, BestABCN0)#
    Matrix <- rbind(Matrix, Row)#
}#
#
# BestA
plot(Matrix[,1])
nrow(OrderedData)
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts")#
#
OrderedData <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")#
#
End <- (1)*50#
print (End)#
BestABCN1 <- median(OrderedData$V2[1:End])#
BestABCTime <- median(OrderedData$V3[1:End])#
BestABCN0 <- median(OrderedData$V4[1:End])#
#
Matrix <- matrix(c(BestABCN1,BestABCTime,BestABCN0),ncol=3)#
#
for (i in 1:1000){#
    End <- (i+1)*50#
#    print (End)#
    BestABCN1 <- median(OrderedData$V2[1:End])#
    BestABCTime <- median(OrderedData$V3[1:End])#
    BestABCN0 <- median(OrderedData$V4[1:End])#
    Row <- c(BestABCN1, BestABCTime, BestABCN0)#
    Matrix <- rbind(Matrix, Row)#
}
plot(Matrix[,1])
plot(Matrix[,2])
plot(Matrix[,3])
plot(Matrix[,1])/5
plot(Matrix[,1]/5)
plot(Matrix[,2]/5)
plot(Matrix[,3]/5)
mar(c(3,1))
par(mar=c(3,1))
Matrix
Matrix/5
head(Matrix)
head(OrderedData)
OrderedData[,1]
OrderedData[1,]
OrderedData[1000,]
density(OrderedData[1000,]$V1)
density(OrderedData[1000,]$V2)
density(OrderedData[1:1000,]$V2)
plot(density(OrderedData[1:1000,]$V2))
plot(density(OrderedData[1:1000,]$V3))
max(OrderedData[1:1000,]$V3)
max(OrderedData[1:1000,]$V2)
max(OrderedData[1:1000,]$V4)
max(OrderedData[1:50000,]$V4)
21.4924/57
2186.48/5988
2390.72/6428
3133.31*1.25
535.533/1501
OrderedData[2000,]
max(OrderedData[1:2000,]$V2)
max(OrderedData[1:2000,]$V3)
max(OrderedData[1:2000,]$V4)
max(OrderedData[1:50000,]$V4)
max(OrderedData[1:2000,]$V3)/5
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts")#
#
OrderedData <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")#
#
End <- (1)*25#
print (End)#
BestABCN1 <- median(OrderedData$V2[1:End])#
BestABCTime <- median(OrderedData$V3[1:End])#
BestABCN0 <- median(OrderedData$V4[1:End])#
#
Matrix <- matrix(c(BestABCN1,BestABCTime,BestABCN0),ncol=3)#
#
for (i in 1:1000){#
    End <- (i+1)*50#
#    print (End)#
    BestABCN1 <- median(OrderedData$V2[1:End])#
    BestABCTime <- median(OrderedData$V3[1:End])#
    BestABCN0 <- median(OrderedData$V4[1:End])#
    Row <- c(BestABCN1, BestABCTime, BestABCN0)#
    Matrix <- rbind(Matrix, Row)#
}
head(Matrix)
Matrix/5
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts")#
#
OrderedData <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")#
#
End <- (1)*25#
print (End)#
BestABCN1 <- median(OrderedData$V2[1:End])#
BestABCTime <- median(OrderedData$V3[1:End])#
BestABCN0 <- median(OrderedData$V4[1:End])#
#
Matrix <- matrix(c(BestABCN1,BestABCTime,BestABCN0),ncol=3)#
#
for (i in 1:1000){#
    End <- (i+1)*25#
#    print (End)#
    BestABCN1 <- median(OrderedData$V2[1:End])#
    BestABCTime <- median(OrderedData$V3[1:End])#
    BestABCN0 <- median(OrderedData$V4[1:End])#
    Row <- c(BestABCN1, BestABCTime, BestABCN0)#
    Matrix <- rbind(Matrix, Row)#
}
Matrix/5
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts")#
#
OrderedData <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")#
#
End <- (1)*25#
print (End)#
BestABCN1 <- median(OrderedData$V2[1:End])#
BestABCTime <- median(OrderedData$V3[1:End])#
BestABCN0 <- median(OrderedData$V4[1:End])#
#
Matrix <- matrix(c(BestABCN1,BestABCTime,BestABCN0),ncol=3)#
#
for (i in 1:1000){#
    End <- (i+1)*25#
#    print (End)#
    BestABCN1 <- median(OrderedData$V2[1:End])#
    BestABCTime <- median(OrderedData$V3[1:End])#
    BestABCN0 <- median(OrderedData$V4[1:End])#
    Row <- c(BestABCN1, BestABCTime, BestABCN0)#
    Matrix <- rbind(Matrix, Row)#
}
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts")#
#
OrderedData <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")#
#
End <- (1)*10#
print (End)#
BestABCN1 <- median(OrderedData$V2[1:End])#
BestABCTime <- median(OrderedData$V3[1:End])#
BestABCN0 <- median(OrderedData$V4[1:End])#
#
Matrix <- matrix(c(BestABCN1,BestABCTime,BestABCN0),ncol=3)#
#
for (i in 1:1000){#
    End <- (i+1)*10#
#    print (End)#
    BestABCN1 <- median(OrderedData$V2[1:End])#
    BestABCTime <- median(OrderedData$V3[1:End])#
    BestABCN0 <- median(OrderedData$V4[1:End])#
    Row <- c(BestABCN1, BestABCTime, BestABCN0)#
    Matrix <- rbind(Matrix, Row)#
}
Matrix/5
head(OrderedData)
OrderedData$V5[1:270]
OrderedData$V5[1:300]
setwd("/Users/vicentediegoortegadelvecchyo/Dropbox (Personal)/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts")#
#
OrderedData <- read.table("../Results/ABCResults/BestNotCpGOrdered.txt")#
#
End <- (1)*5#
print (End)#
BestABCN1 <- median(OrderedData$V2[1:End])#
BestABCTime <- median(OrderedData$V3[1:End])#
BestABCN0 <- median(OrderedData$V4[1:End])#
#
Matrix <- matrix(c(BestABCN1,BestABCTime,BestABCN0),ncol=3)#
#
for (i in 1:1000){#
    End <- (i+1)*5#
#    print (End)#
    BestABCN1 <- median(OrderedData$V2[1:End])#
    BestABCTime <- median(OrderedData$V3[1:End])#
    BestABCN0 <- median(OrderedData$V4[1:End])#
    Row <- c(BestABCN1, BestABCTime, BestABCN0)#
    Matrix <- rbind(Matrix, Row)#
}
Matrix/5
3056.72/8418
