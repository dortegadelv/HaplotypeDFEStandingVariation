sum(rbinom(10000000,1,0.01))
99765/10000000
1-0.0099765
sum(rbinom(10000000,0,0.01))
exp(-2)
0.1*1000
2*2*2*2*2
2*2*2
3*3*3
500/25
40*25
20*10000*.01
132-103
29/2
(1-0.04)*0.15 + 0.04*0.2*0.3
(1-0.04)*0.05 + 0.04*0.2*0.7
(1-0.04)*0.15 + 0.04*0.8*0.3
(1-0.04)*0.65 + 0.04*0.8*0.7
(1-0.7)*0.15 + 0.7*0.2*0.3
(1-0.7)*0.05 + 0.7*0.2*0.7
(1-0.7)*0.15 + 0.7*0.8*0.3
(1-0.7)*0.65 + 0.7*0.8*0.7
(1-0.96)*0.15 + 0.96*0.2*0.3
(1-0.96)*0.05 + 0.96*0.2*0.7
(1-0.96)*0.15 + 0.96*0.8*0.3
(1-0.96)*0.65 + 0.96*0.8*0.7
(1-0.5)*0.25 + 0.5*0.5*0.5
702*.70
702*.30
9/5
0.12/0.98
41000/6
41000/(6*30)
.75+.5+.75+1+.5+.5+1+.5
6000*20
1+1+.75+1+1+1+1+.75
1+1+.75+1+1+1+1+.75+.5
1+.5+3/8+1+1+7/8+1+1++3/4
1+.5+3/8+1+1+7/8+1+1+3/4+3/4
14000/6
8000/6
100/250000
4e-04/(40000)
100/200000
5e-04/250000
1000/250000
0.004/(200000)
35000/52
1329/52
5241/52
542*52
673*52
35000/52
5242/52
1329/52
59742/52
3612+3638
7250/52
1472+1084
2556/52
5000*100
272-247
25/2
247+12
339*64
2500/18
138.8889*20
368-345
345+12
5+2.25
7.5+1.25
2.5+2.25+1.25
7.5+1.25
133+146+151+125+125
133+146+151+125+62
1.5/30
1.12/24
30/24
26*40
12*4
4000*.01
40*100
factorial(40)/(factorial(38)*factorial(2))
780*100
780*50
780*10
780*20
780*15
780*20
780*50
780*100
780*150
5*60
300/8
factorial(10)/(factorial(8)*factorial(2))
factorial(40)/(factorial(38)*factorial(2))
factorial(40)/(factorial(38)*factorial(2)) *10
factorial(40)/(factorial(38)*factorial(2)) *100
1/200
1/1000
1/200
0.0025/5
100/100000
100/200000
library(viridis)#
library(here)#
#
### P (allele is 2Ns = x | allele is at 1%)#
## This comes from running Results/#
args = commandArgs(trailingOnly=TRUE)#
print(args)#
#
###Example#
#
MaxLLParameters = "../Results/MaxLLEstimatesDFE.txt"#
print (MaxLLParameters)#
LLFile = read.table(MaxLLParameters)#
print (MaxLLParameters)#
Alpha = LLFile$V1#
Gamma = LLFile$V2#
P_allele_at_OnePercent = 3.08e-07#
AllelesWithSelectionCoefficientFile = "ExitOnePercentSValuesPopExpansionBoyko.txt"#
NumberOfChromosomesInMostAncestralEpoch = 10000#
NumberAllelesSimulatedInDemHistory = 2.025e+11#
IntervalLength <- as.double(5)#
IntervalNumber <- as.double(30)
P_Allele_Is_2Ns_given_OnePercent <- c()#
#
# P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,pgamma(0.5,Alpha,scale=Gamma))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*2.5,Alpha,scale=Gamma) - pgamma((i-1)*2.5,Alpha,scale=Gamma)#
    P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,Prob)#
}#
#
#### Number of alleles#
#
Alpha = 0.184#
Beta = 319.8626 * 10#
#
P_Allele_Is_2Ns <- c()#
NumberOfAllelesAt2Ns <- c()#
RealProbs <- c()#
# P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,pgamma(0.5,Alpha,scale=Beta))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*IntervalLength/2,Alpha,scale=Beta) - pgamma((i-1)*IntervalLength/2,Alpha,scale=Beta)#
    P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,Prob)#
    NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*((80000 + (100000/10000)*100)*2500*1000)) # Original Test#
    # NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*(1))#
}#
################################################### Two plots on same place #############################
#
ColorViridis <- viridis(2)#
ViridisColors <- viridis(2)#
#
SelectionCoefficientList <- read.table(AllelesWithSelectionCoefficientFile)#
#
MultipliedValues <- SelectionCoefficientList$V2*NumberOfChromosomesInMostAncestralEpoch#
#
FourNsValues <- MultipliedValues[(MultipliedValues < IntervalLength/2*IntervalNumber)]#
#
Check <- hist(FourNsValues,breaks=c(IntervalLength/2*0:IntervalNumber))#
Counts_At_OnePercent_Given2Ns <- Check$counts#
#
Probabilities_At_One_Percent_Given_2NsMouse= Counts_At_OnePercent_Given2Ns/ (NumberOfAllelesAt2Ns)#
###### The whole stuff#
#
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c("0-5","50-55","100-150","150-155","200-205",Label)#
#
pdf("../Results/DFEf_to_DFE.pdf",width=10,height = 3.5)#
par(mar=c(4.1,5.1,0.6,2.1))#
par(mfrow = c(1,1))#
#
FirstProbsMouse <- ProbsMouse#
#
###### The whole stuff#
if (sum(ProbsMouse) > 1.0){#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:30],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:30]))#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:20])#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / sum (ProbsMouse[1:IntervalNumber] )#
ProbsMouse <- c(ProbsMouse,0)#
#
}else {#
ProbsMouse <- c(ProbsMouse[1:IntervalNumber],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
}#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c(Labels,Label)#
counts <- table(mtcars$vs, mtcars$gear)#
# counts <- rbind(counts,c(1,2,3))#
# counts <- rbind(counts,c(1,2,3))#
for (i in 4:IntervalNumber){#
    counts <- cbind(counts,c(ProbsMouse[i], P_Allele_Is_2Ns_given_OnePercent[i]))#
}#
# counts[1,1] <- P_Allele_Is_2Ns[1]#
# counts[1,2] <- P_Allele_Is_2Ns[2]#
# counts[1,3] <- P_Allele_Is_2Ns[3]#
counts[1,1] <- ProbsMouse[1]#
counts[1,2] <- ProbsMouse[2]#
counts[1,3] <- ProbsMouse[3]#
# counts[3,1] <- ProbsMouse[1]#
# counts[3,2] <- ProbsMouse[2]#
# counts[3,3] <- ProbsMouse[3]#
counts[2,1] <- P_Allele_Is_2Ns_given_OnePercent[1]#
counts[2,2] <- P_Allele_Is_2Ns_given_OnePercent[2]#
counts[2,3] <- P_Allele_Is_2Ns_given_OnePercent[3]#
#
counts <- cbind(counts,c( 1 - sum(ProbsMouse[1:IntervalNumber]), 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber])))#
#
for ( i in 1:2){#
    for (j in 1:(IntervalNumber+1)){#
        if (counts[i,j] <= 1e-8){#
            counts[i,j] = 1e-8#
        }#
    }#
}#
# rownames(counts) <- c(expression("Real P("*bolditalic(s[j])*" | DFE, D)"), expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 4"),expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 5"), expression("P("*bolditalic(s[j])*" | 1%, DFE, D)"))#
#
Label <- paste(">","150",sep="")#
Labels <- c("0-5","50-55","100-105",Label)#
barplot(log10(counts)-log10(0.00000001), main="", ylab="Probability", xlab="4Ns", col=ViridisColors,#
legend = c(expression( expression("Inferred"  ~ 'P'[psi] * "(" * bolditalic(s[j]) * ")"), expression('P'[psi]* "("* bolditalic(s[j])*" | "* italic(f) * ", "* italic(D) *")"))), ylim = c(0, 8), beside=TRUE,cex.lab=2,cex.axis=2,cex.names=2, args.legend = list(x = "top",cex= 0.95), yaxt="n", xaxt = "n", space = c(0, 2))#
#
axis (2,at=c(0,2,4,6,8), labels = c("< 10^-8",10^-6,10^-4,10^-2,10^0), cex.axis = 0.8)#
#
axis(1, at=c(3.5, 53.5, 103.5, 153.5), labels=Labels,cex.lab=1,cex=1,cex.axis=1,col.ticks="red")#
#Expression <- expression("Real " ~ 'P'[psi] ~ "(bolditalic(s[j]), | DFE, D)")#
Expression2 <- expression(paste("Inferred P(",bolditalic(s[j])," | DFE, D)  Equation 5"))#
Expression3 <- expression(paste("P(",bolditalic(s[j])," | 1%, DFE, D)"))#
dev.off()#
#
DataTable = data.frame(#
  P_sj_given_DemHistory_Frequency = P_Allele_Is_2Ns_given_OnePercent[1:31],#
  P_sj = ProbsMouse[1:31]#
)#
#
value <- c()#
for (i in 1:IntervalNumber){#
    Multiplier <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    value <- c(value,Multiplier)#
}#
Multiplier <- paste(">",IntervalNumber*IntervalLength,sep="")#
value <- c(value,Multiplier)#
#
row.names(DataTable) <- value#
#
write.table(DataTable,file="../Results/Probabilities.txt",col.names=NA)
library(viridis)#
library(here)#
#
### P (allele is 2Ns = x | allele is at 1%)#
## This comes from running Results/#
args = commandArgs(trailingOnly=TRUE)#
print(args)#
#
###Example#
#
MaxLLParameters = "../Results/MaxLLEstimatesDFE.txt"#
print (MaxLLParameters)#
LLFile = read.table(MaxLLParameters)#
print (MaxLLParameters)#
Alpha = LLFile$V1#
Gamma = LLFile$V2#
P_allele_at_OnePercent = 3.08e-07#
AllelesWithSelectionCoefficientFile = "ExitOnePercentSValuesPopExpansionBoyko.txt"#
NumberOfChromosomesInMostAncestralEpoch = 10000#
NumberAllelesSimulatedInDemHistory = 2.025e+11#
IntervalLength <- as.double(5)#
IntervalNumber <- as.double(30)
P_Allele_Is_2Ns_given_OnePercent <- c()#
#
# P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,pgamma(0.5,Alpha,scale=Gamma))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*2.5,Alpha,scale=Gamma) - pgamma((i-1)*2.5,Alpha,scale=Gamma)#
    P_Allele_Is_2Ns_given_OnePercent <- c(P_Allele_Is_2Ns_given_OnePercent,Prob)#
}#
#
#### Number of alleles#
#
Alpha = 0.184#
Beta = 319.8626 * 10#
#
P_Allele_Is_2Ns <- c()#
NumberOfAllelesAt2Ns <- c()#
RealProbs <- c()#
# P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,pgamma(0.5,Alpha,scale=Beta))#
for (i in 1:IntervalNumber){#
    # print (i)#
    Prob <- pgamma(i*IntervalLength/2,Alpha,scale=Beta) - pgamma((i-1)*IntervalLength/2,Alpha,scale=Beta)#
    P_Allele_Is_2Ns <- c(P_Allele_Is_2Ns,Prob)#
    NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*((80000 + (100000/10000)*100)*2500*1000)) # Original Test#
    # NumberOfAllelesAt2Ns <- c(NumberOfAllelesAt2Ns,Prob*(1))#
}#
################################################### Two plots on same place #############################
#
ColorViridis <- viridis(2)#
ViridisColors <- viridis(2)#
#
SelectionCoefficientList <- read.table(AllelesWithSelectionCoefficientFile)#
#
MultipliedValues <- SelectionCoefficientList$V2*NumberOfChromosomesInMostAncestralEpoch#
#
FourNsValues <- MultipliedValues[(MultipliedValues < IntervalLength/2*IntervalNumber)]#
#
Check <- hist(FourNsValues,breaks=c(IntervalLength/2*0:IntervalNumber))#
Counts_At_OnePercent_Given2Ns <- Check$counts#
#
Probabilities_At_One_Percent_Given_2NsMouse= Counts_At_OnePercent_Given2Ns/ (NumberOfAllelesAt2Ns)#
###### The whole stuff#
#
ProbsMouse <- P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber] * P_allele_at_OnePercent#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / Probabilities_At_One_Percent_Given_2NsMouse[1:IntervalNumber]#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c("0-5","50-55","100-150","150-155","200-205",Label)#
#
pdf("../Results/DFEf_to_DFE.pdf",width=10,height = 3.5)#
par(mar=c(4.1,5.1,0.6,2.1))#
par(mfrow = c(1,1))#
#
FirstProbsMouse <- ProbsMouse#
#
###### The whole stuff#
if (sum(ProbsMouse) > 1.0){#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:30],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:30]))#
#ProbsMouse <- c(P_Allele_Is_2Ns_given_OnePercent[1:20])#
#
ProbsMouse <- ProbsMouse[1:IntervalNumber] / sum (ProbsMouse[1:IntervalNumber] )#
ProbsMouse <- c(ProbsMouse,0)#
#
}else {#
ProbsMouse <- c(ProbsMouse[1:IntervalNumber],1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
}#
#
ProbsMouse <- c(1 - sum(ProbsMouse[1:IntervalNumber]),1-sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber]))#
#
Labels <- c()#
for (i in 1:IntervalNumber){#
    Label <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    Labels <- c(Labels,Label)#
}#
Label <- paste(">","250",sep="")#
Labels <- c(Labels,Label)#
counts <- table(mtcars$vs, mtcars$gear)#
# counts <- rbind(counts,c(1,2,3))#
# counts <- rbind(counts,c(1,2,3))#
for (i in 4:(IntervalNumber+1)){#
    counts <- cbind(counts,c(ProbsMouse[i], P_Allele_Is_2Ns_given_OnePercent[i]))#
}#
# counts[1,1] <- P_Allele_Is_2Ns[1]#
# counts[1,2] <- P_Allele_Is_2Ns[2]#
# counts[1,3] <- P_Allele_Is_2Ns[3]#
counts[1,1] <- ProbsMouse[1]#
counts[1,2] <- ProbsMouse[2]#
counts[1,3] <- ProbsMouse[3]#
# counts[3,1] <- ProbsMouse[1]#
# counts[3,2] <- ProbsMouse[2]#
# counts[3,3] <- ProbsMouse[3]#
counts[2,1] <- P_Allele_Is_2Ns_given_OnePercent[1]#
counts[2,2] <- P_Allele_Is_2Ns_given_OnePercent[2]#
counts[2,3] <- P_Allele_Is_2Ns_given_OnePercent[3]#
#
# counts <- cbind(counts,c( 1 - sum(ProbsMouse[1:IntervalNumber]), 1 - sum(P_Allele_Is_2Ns_given_OnePercent[1:IntervalNumber])))#
#
for ( i in 1:2){#
    for (j in 1:(IntervalNumber+1)){#
        if (counts[i,j] <= 1e-8){#
            counts[i,j] = 1e-8#
        }#
    }#
}#
# rownames(counts) <- c(expression("Real P("*bolditalic(s[j])*" | DFE, D)"), expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 4"),expression("Inferred P("*bolditalic(s[j])*" | DFE, D)  Equation 5"), expression("P("*bolditalic(s[j])*" | 1%, DFE, D)"))#
#
Label <- paste(">","150",sep="")#
Labels <- c("0-5","50-55","100-105",Label)#
barplot(log10(counts)-log10(0.00000001), main="", ylab="Probability", xlab="4Ns", col=ViridisColors,#
legend = c(expression( expression("Inferred"  ~ 'P'[psi] * "(" * bolditalic(s[j]) * ")"), expression('P'[psi]* "("* bolditalic(s[j])*" | "* italic(f) * ", "* italic(D) *")"))), ylim = c(0, 8), beside=TRUE,cex.lab=2,cex.axis=2,cex.names=2, args.legend = list(x = "top",cex= 0.95), yaxt="n", xaxt = "n", space = c(0, 2))#
#
axis (2,at=c(0,2,4,6,8), labels = c("< 10^-8",10^-6,10^-4,10^-2,10^0), cex.axis = 0.8)#
#
axis(1, at=c(3.5, 53.5, 103.5, 153.5), labels=Labels,cex.lab=1,cex=1,cex.axis=1,col.ticks="red")#
#Expression <- expression("Real " ~ 'P'[psi] ~ "(bolditalic(s[j]), | DFE, D)")#
Expression2 <- expression(paste("Inferred P(",bolditalic(s[j])," | DFE, D)  Equation 5"))#
Expression3 <- expression(paste("P(",bolditalic(s[j])," | 1%, DFE, D)"))#
dev.off()#
#
DataTable = data.frame(#
  P_sj_given_DemHistory_Frequency = P_Allele_Is_2Ns_given_OnePercent[1:31],#
  P_sj = ProbsMouse[1:31]#
)#
#
value <- c()#
for (i in 1:IntervalNumber){#
    Multiplier <- paste((i-1)*IntervalLength,"-",i*IntervalLength,sep="")#
    value <- c(value,Multiplier)#
}#
Multiplier <- paste(">",IntervalNumber*IntervalLength,sep="")#
value <- c(value,Multiplier)#
#
row.names(DataTable) <- value#
#
write.table(DataTable,file="../Results/Probabilities.txt",col.names=NA)
200*80,000 + 200 * (100000/10000) * 100
200*80000 + 200 * (100000/10000) * 100
200 * (100000/10000)
100/16200000
2.500000e-04*20000
2.500000e-04*10000
2.500000e-04*5000
2.500000e-04*4000
9.900000e-01*4000
0.95*2*+0.05*2
(0.95*2)/(0.95*2*+0.05*2)
(0.95*2)/(0.95*2+0.05*2)
1/100
1/3960
0.01/0.0002525253
9.900000e-01*100
1.000000e-02*100
11083/102
(0.95*11083)/(0.95*11083+0.05*102)
0.95*11083
0.05*102
10528.85/(10528.85+5.1)
5.1/(10528.85+5.1)
(10528.85+5.1) / 5.1
.01*.05
.0005
.0005*500
dpois(0,0.25)
dpois(1,0.25)
dpois(2,0.25)
dpois(3,0.25)
dpois(4,0.25)
0.0004841489*500
dbinom(0,500, 0.9995159)
dbinom(500,500, 0.9995159)
dbinom(499,500, 0.9995159)
dbinom(498,500, 0.9995159)
dbinom(497,500, 0.9995159)
dbinom(496,500, 0.9995159)
(0.99*11083)/(0.99*11083+0.01*102)
dbinom(500,500, 0.999907)
(0.985*11083)/(0.985*11083+0.015*102)
dbinom(500,500, 0.9998599)
dbinom(500,500, 0.00014955)
dbinom(500,500, 1 - 0.00014955)
dbinom(1000,1000, 1 - 0.00014955)
dbinom(999, 1000, 1 - 0.00014955)
20000*.0025
9.900000e-01*100
1.000000e-02*100
10000/200
1000/2.5
400/60
6.666667 * 5
17/7.5
1000/2.26
7/3
1000/3
100/2
1000/2
(factorial(40))/(factorial(38)*factorial(2))
(factorial(72))/(factorial(70)*factorial(2))
2556/780
200050/50
20050/50
File <- read.table("~/Downloads/File")
File <- read.table("~/Downloads/ExitFileNoRecN10000.txt")
nrow(File)
File[,1]
Sums <- c()
500*(factorial(40))/(factorial(38)*factorial(2))
6/2
1000/3
333.3333/60
100/30
58100/4
14525/390000
16,186 - 600
16186 - 600
18045 / 45
factorial(40)/(factorial(38)*factorial(2))
780*300
234000/
300
factorial(72)/(factorial(72)*factorial(2))
factorial(72)/(factorial(72)*factorial(70))
factorial(72)/(factorial(2)*factorial(70))
2556*250
780*1000
780*500
639000/780
639000/390000
factorial(40)/(factorial(2)*factorial(38))
780*300*2
50000*0.0005
50000*0.1
### Set directory to the place where you have the 'PlottingScripts' folder#
#
library(here)#
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
#
Plot <- paste("Figure3_ProbLInferenceSelection.pdf",sep="")#
ColorViridis <- viridis(5)#
#
pdf(Plot,width=12,height=12/2)#
par(mfrow=c(1,2))#
par(mar=c(5,5,5,2) + 0.1)#
# Image <- readJPEG("PotentialPaperFigures/HaplotypeDivision/Slide1.jpg")#
#plot(0.5,0.5,xaxt="n",yaxt="n",xlim=c(0,1.333333),ylim=c(0,1),main="A) Windows of pairwise haplotypic\n identity by state lengths (L)",cex.main=2)#
#rasterImage(Image,0.0,0.0,1.333333,1,bty="n")#
#
#LLSurface <- read.table("ResultsSelectionInferred/ExampleLLSurface.txt")#
#plot(1:401,LLSurface[1,],type="l",lwd=6,ylab="Log-likelihood",xlab="4Ns",cex.lab=2,cex.axis=2,xaxt="n",main="C) Example Log-Likelihood plot",cex.main=2)#
#axis(1,at=c(1,101,201,301,401),labels=c(-200,-100,0,100,200),cex.lab=2,cex.axis=2)#
#arrows(201,-15761.78,201,-15666.78)#
#legend(131,-15755.78,c("MLE"),bty="n",cex=2)#
#
Selection4Ns_0 <- read.table("SelectionConstantPopSize0_N10000.txt")#
Selection4Ns_50 <- read.table("SelectionConstantPopSize50_N10000.txt")#
Selection4Ns_100 <- read.table("SelectionConstantPopSize100_N10000.txt")#
Selection4Ns_Minus50 <- read.table("SelectionConstantPopSize-50_N10000.txt")#
Selection4Ns_Minus100 <- read.table("SelectionConstantPopSize-100_N10000.txt")#
#
beanplot(Selection4Ns_0$V1-200,Selection4Ns_50$V1-200,Selection4Ns_Minus50$V1-200,Selection4Ns_100$V1-200,Selection4Ns_Minus100$V1-200,names=c("0","50","-50","100","-100"),ylab="Estimated 4Ns values",xlab="Real 4Ns values",main="A) Inference of Selection",cex.axis=1.7,cex.lab=2,cex.main=2.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6",maxstripline=0.15,beanlinewd=0.5,overall=10000,what=c(FALSE,TRUE,FALSE,TRUE),overallline = "median",ll=0.5)#
abline(h=0,lty=3)#
abline(h=50,lty=3)#
abline(h=-50,lty=3)#
abline(h=100,lty=3)#
abline(h=-100,lty=3)#
beanplot(abs(Selection4Ns_0$V1-200),abs(Selection4Ns_50$V1-200),abs(Selection4Ns_Minus50$V1-200),abs(Selection4Ns_100$V1-200),abs(Selection4Ns_Minus100$V1-200),names=c("0","50","-50","100","-100"),ylab="Estimated |4Ns| values",xlab="Real 4Ns values",main="B) Inference of Selection\n in terms of |4Ns| values",cex.axis=1.7,cex.lab=2,cex.main=2.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6",maxstripline=0.15,beanlinewd=0.5,overall=10000,what=c(FALSE,TRUE,TRUE,TRUE),overallline = "median",ll=0.5)#
abline(h=0,lty=3)#
abline(h=50,lty=3)#
abline(h=-50,lty=3)#
abline(h=100,lty=3)#
abline(h=-100,lty=3)#
dev.off()
setwd("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/TestConstantPopSize/ResultsSelectionInferred")
### Set directory to the place where you have the 'PlottingScripts' folder#
#
library(here)#
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
#
Plot <- paste("Figure3_ProbLInferenceSelection.pdf",sep="")#
ColorViridis <- viridis(5)#
#
pdf(Plot,width=12,height=12/2)#
par(mfrow=c(1,2))#
par(mar=c(5,5,5,2) + 0.1)#
# Image <- readJPEG("PotentialPaperFigures/HaplotypeDivision/Slide1.jpg")#
#plot(0.5,0.5,xaxt="n",yaxt="n",xlim=c(0,1.333333),ylim=c(0,1),main="A) Windows of pairwise haplotypic\n identity by state lengths (L)",cex.main=2)#
#rasterImage(Image,0.0,0.0,1.333333,1,bty="n")#
#
#LLSurface <- read.table("ResultsSelectionInferred/ExampleLLSurface.txt")#
#plot(1:401,LLSurface[1,],type="l",lwd=6,ylab="Log-likelihood",xlab="4Ns",cex.lab=2,cex.axis=2,xaxt="n",main="C) Example Log-Likelihood plot",cex.main=2)#
#axis(1,at=c(1,101,201,301,401),labels=c(-200,-100,0,100,200),cex.lab=2,cex.axis=2)#
#arrows(201,-15761.78,201,-15666.78)#
#legend(131,-15755.78,c("MLE"),bty="n",cex=2)#
#
Selection4Ns_0 <- read.table("SelectionConstantPopSize0_N10000.txt")#
Selection4Ns_50 <- read.table("SelectionConstantPopSize50_N10000.txt")#
Selection4Ns_100 <- read.table("SelectionConstantPopSize100_N10000.txt")#
Selection4Ns_Minus50 <- read.table("SelectionConstantPopSize-50_N10000.txt")#
Selection4Ns_Minus100 <- read.table("SelectionConstantPopSize-100_N10000.txt")#
#
beanplot(Selection4Ns_0$V1-200,Selection4Ns_50$V1-200,Selection4Ns_Minus50$V1-200,Selection4Ns_100$V1-200,Selection4Ns_Minus100$V1-200,names=c("0","50","-50","100","-100"),ylab="Estimated 4Ns values",xlab="Real 4Ns values",main="A) Inference of Selection",cex.axis=1.7,cex.lab=2,cex.main=2.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6",maxstripline=0.15,beanlinewd=0.5,overall=10000,what=c(FALSE,TRUE,FALSE,TRUE),overallline = "median",ll=0.5)#
abline(h=0,lty=3)#
abline(h=50,lty=3)#
abline(h=-50,lty=3)#
abline(h=100,lty=3)#
abline(h=-100,lty=3)#
beanplot(abs(Selection4Ns_0$V1-200),abs(Selection4Ns_50$V1-200),abs(Selection4Ns_Minus50$V1-200),abs(Selection4Ns_100$V1-200),abs(Selection4Ns_Minus100$V1-200),names=c("0","50","-50","100","-100"),ylab="Estimated |4Ns| values",xlab="Real 4Ns values",main="B) Inference of Selection\n in terms of |4Ns| values",cex.axis=1.7,cex.lab=2,cex.main=2.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6",maxstripline=0.15,beanlinewd=0.5,overall=10000,what=c(FALSE,TRUE,TRUE,TRUE),overallline = "median",ll=0.5)#
abline(h=0,lty=3)#
abline(h=50,lty=3)#
abline(h=-50,lty=3)#
abline(h=100,lty=3)#
abline(h=-100,lty=3)#
dev.off()
Selection4Ns_0
Selection4Ns_100
Selection4Ns_150
Selection4Ns_50
Selection4Ns_-50
Selection4Ns_Minus50
Selection4Ns_Minus100
### Set directory to the place where you have the 'PlottingScripts' folder#
#
library(here)#
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
#
Plot <- paste("Figure3_ProbLInferenceSelection.pdf",sep="")#
ColorViridis <- viridis(5)#
#
pdf(Plot,width=12,height=12/2)#
par(mfrow=c(1,2))#
par(mar=c(5,5,5,2) + 0.1)#
# Image <- readJPEG("PotentialPaperFigures/HaplotypeDivision/Slide1.jpg")#
#plot(0.5,0.5,xaxt="n",yaxt="n",xlim=c(0,1.333333),ylim=c(0,1),main="A) Windows of pairwise haplotypic\n identity by state lengths (L)",cex.main=2)#
#rasterImage(Image,0.0,0.0,1.333333,1,bty="n")#
#
#LLSurface <- read.table("ResultsSelectionInferred/ExampleLLSurface.txt")#
#plot(1:401,LLSurface[1,],type="l",lwd=6,ylab="Log-likelihood",xlab="4Ns",cex.lab=2,cex.axis=2,xaxt="n",main="C) Example Log-Likelihood plot",cex.main=2)#
#axis(1,at=c(1,101,201,301,401),labels=c(-200,-100,0,100,200),cex.lab=2,cex.axis=2)#
#arrows(201,-15761.78,201,-15666.78)#
#legend(131,-15755.78,c("MLE"),bty="n",cex=2)#
#
Selection4Ns_0 <- read.table("SelectionConstantPopSize0_N10000.txt")#
Selection4Ns_50 <- read.table("SelectionConstantPopSize50_N10000.txt")#
Selection4Ns_100 <- read.table("SelectionConstantPopSize100_N10000.txt")#
Selection4Ns_Minus50 <- read.table("SelectionConstantPopSize-50_N10000.txt")#
Selection4Ns_Minus100 <- read.table("SelectionConstantPopSize-100_N10000.txt")
beanplot(Selection4Ns_0$V1-200,Selection4Ns_50$V1-200,Selection4Ns_Minus50$V1-200,Selection4Ns_100$V1-200,Selection4Ns_Minus100$V1-200,names=c("0","50","-50","100","-100"),ylab="Estimated 4Ns values",xlab="Real 4Ns values",main="A) Inference of Selection",cex.axis=1.7,cex.lab=2,cex.main=2.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6",maxstripline=0.15,beanlinewd=0.5,overall=10000,what=c(FALSE,TRUE,FALSE,TRUE),overallline = "median",ll=0.5)#
abline(h=0,lty=3)#
abline(h=50,lty=3)#
abline(h=-50,lty=3)#
abline(h=100,lty=3)#
abline(h=-100,lty=3)
Selection4Ns_0$V1
abs(Selection4Ns_0$V1-200)
median(abs(Selection4Ns_0$V1-200))
median(abs(Selection4Ns_50$V1-200))
median(abs(Selection4Ns_100$V1-200))
median(abs(Selection4Ns_Minus100$V1-200))
median(abs(Selection4Ns_Minus50$V1-200))
setwd("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/PlottingScripts/")
library(here)#
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
#
Plot <- paste("../Figures/","Figure3_ProbLInferenceSelection.pdf",sep="")#
ColorViridis <- viridis(5)#
#
pdf(Plot,width=12,height=12/2)#
par(mfrow=c(1,2))#
par(mar=c(5,5,5,2) + 0.1)#
# Image <- readJPEG("PotentialPaperFigures/HaplotypeDivision/Slide1.jpg")#
#plot(0.5,0.5,xaxt="n",yaxt="n",xlim=c(0,1.333333),ylim=c(0,1),main="A) Windows of pairwise haplotypic\n identity by state lengths (L)",cex.main=2)#
#rasterImage(Image,0.0,0.0,1.333333,1,bty="n")#
#
#LLSurface <- read.table("ResultsSelectionInferred/ExampleLLSurface.txt")#
#plot(1:401,LLSurface[1,],type="l",lwd=6,ylab="Log-likelihood",xlab="4Ns",cex.lab=2,cex.axis=2,xaxt="n",main="C) Example Log-Likelihood plot",cex.main=2)#
#axis(1,at=c(1,101,201,301,401),labels=c(-200,-100,0,100,200),cex.lab=2,cex.axis=2)#
#arrows(201,-15761.78,201,-15666.78)#
#legend(131,-15755.78,c("MLE"),bty="n",cex=2)#
#
Selection4Ns_0 <- read.table("../Results/ResultsSelectionInferred/SelectionConstantPopSize0_N10000.txt")#
Selection4Ns_50 <- read.table("../Results/ResultsSelectionInferred/SelectionConstantPopSize50_N10000.txt")#
Selection4Ns_100 <- read.table("../Results/ResultsSelectionInferred/SelectionConstantPopSize100_N10000.txt")#
Selection4Ns_Minus50 <- read.table("../Results/ResultsSelectionInferred/SelectionConstantPopSize-50_N10000.txt")#
Selection4Ns_Minus100 <- read.table("../Results/ResultsSelectionInferred/SelectionConstantPopSize-100_N10000.txt")#
#
beanplot(Selection4Ns_0$V1-200,Selection4Ns_50$V1-200,Selection4Ns_Minus50$V1-200,Selection4Ns_100$V1-200,Selection4Ns_Minus100$V1-200,names=c("0","50","-50","100","-100"),ylab="Estimated 4Ns values",xlab="Real 4Ns values",main="A) Inference of Selection",cex.axis=1.7,cex.lab=2,cex.main=2.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6",maxstripline=0.15,beanlinewd=0.5,overall=10000,what=c(FALSE,TRUE,FALSE,TRUE),overallline = "median",ll=0.5)#
abline(h=0,lty=3)#
abline(h=50,lty=3)#
abline(h=-50,lty=3)#
abline(h=100,lty=3)#
abline(h=-100,lty=3)#
beanplot(abs(Selection4Ns_0$V1-200),abs(Selection4Ns_50$V1-200),abs(Selection4Ns_Minus50$V1-200),abs(Selection4Ns_100$V1-200),abs(Selection4Ns_Minus100$V1-200),names=c("0","50","-50","100","-100"),ylab="Estimated |4Ns| values",xlab="Real 4Ns values",main="B) Inference of Selection\n in terms of |4Ns| values",cex.axis=1.7,cex.lab=2,cex.main=2.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6",maxstripline=0.15,beanlinewd=0.5,overall=10000,what=c(FALSE,TRUE,TRUE,TRUE),overallline = "median",ll=0.5)#
abline(h=0,lty=3)#
abline(h=50,lty=3)#
abline(h=-50,lty=3)#
abline(h=100,lty=3)#
abline(h=-100,lty=3)#
dev.off()
Selection4Ns_0
Selection4Ns_100
setwd("~/Dropbox/Documents/DissertationThesis/PurifyingSelection/Drafts/HaplotypeDFEStandingVariation/Results/TestConstantPopSize/ResultsSelectionInferred")
### Set directory to the place where you have the 'PlottingScripts' folder#
#
library(here)#
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
#
Plot <- paste("Figure3_ProbLInferenceSelection.pdf",sep="")#
ColorViridis <- viridis(5)#
#
pdf(Plot,width=12,height=12/2)#
par(mfrow=c(1,2))#
par(mar=c(5,5,5,2) + 0.1)#
# Image <- readJPEG("PotentialPaperFigures/HaplotypeDivision/Slide1.jpg")#
#plot(0.5,0.5,xaxt="n",yaxt="n",xlim=c(0,1.333333),ylim=c(0,1),main="A) Windows of pairwise haplotypic\n identity by state lengths (L)",cex.main=2)#
#rasterImage(Image,0.0,0.0,1.333333,1,bty="n")#
#
#LLSurface <- read.table("ResultsSelectionInferred/ExampleLLSurface.txt")#
#plot(1:401,LLSurface[1,],type="l",lwd=6,ylab="Log-likelihood",xlab="4Ns",cex.lab=2,cex.axis=2,xaxt="n",main="C) Example Log-Likelihood plot",cex.main=2)#
#axis(1,at=c(1,101,201,301,401),labels=c(-200,-100,0,100,200),cex.lab=2,cex.axis=2)#
#arrows(201,-15761.78,201,-15666.78)#
#legend(131,-15755.78,c("MLE"),bty="n",cex=2)#
#
Selection4Ns_0 <- read.table("SelectionConstantPopSize0_N10000.txt")#
Selection4Ns_50 <- read.table("SelectionConstantPopSize50_N10000.txt")#
Selection4Ns_100 <- read.table("SelectionConstantPopSize100_N10000.txt")#
Selection4Ns_Minus50 <- read.table("SelectionConstantPopSize-50_N10000.txt")#
Selection4Ns_Minus100 <- read.table("SelectionConstantPopSize-100_N10000.txt")
nrow(Selection4Ns_0)
nrow(Selection4Ns_50)
nrow(Selection4Ns_100)
nrow(Selection4Ns_Minus100)
nrow(Selection4Ns_Minus50)
unique(Selection4Ns_0)
### Set directory to the place where you have the 'PlottingScripts' folder#
#
library(here)#
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
#
Plot <- paste("Figure3_ProbLInferenceSelection.pdf",sep="")#
ColorViridis <- viridis(5)#
#
pdf(Plot,width=12,height=12/2)#
par(mfrow=c(1,2))#
par(mar=c(5,5,5,2) + 0.1)#
# Image <- readJPEG("PotentialPaperFigures/HaplotypeDivision/Slide1.jpg")#
#plot(0.5,0.5,xaxt="n",yaxt="n",xlim=c(0,1.333333),ylim=c(0,1),main="A) Windows of pairwise haplotypic\n identity by state lengths (L)",cex.main=2)#
#rasterImage(Image,0.0,0.0,1.333333,1,bty="n")#
#
#LLSurface <- read.table("ResultsSelectionInferred/ExampleLLSurface.txt")#
#plot(1:401,LLSurface[1,],type="l",lwd=6,ylab="Log-likelihood",xlab="4Ns",cex.lab=2,cex.axis=2,xaxt="n",main="C) Example Log-Likelihood plot",cex.main=2)#
#axis(1,at=c(1,101,201,301,401),labels=c(-200,-100,0,100,200),cex.lab=2,cex.axis=2)#
#arrows(201,-15761.78,201,-15666.78)#
#legend(131,-15755.78,c("MLE"),bty="n",cex=2)#
#
Selection4Ns_0 <- read.table("SelectionConstantPopSize0_N10000.txt")#
Selection4Ns_50 <- read.table("SelectionConstantPopSize50_N10000.txt")#
Selection4Ns_100 <- read.table("SelectionConstantPopSize100_N10000.txt")#
Selection4Ns_Minus50 <- read.table("SelectionConstantPopSize-50_N10000.txt")#
Selection4Ns_Minus100 <- read.table("SelectionConstantPopSize-100_N10000.txt")#
#
beanplot(Selection4Ns_0$V1-200,Selection4Ns_50$V1-200,Selection4Ns_Minus50$V1-200,Selection4Ns_100$V1-200,Selection4Ns_Minus100$V1-200,names=c("0","50","-50","100","-100"),ylab="Estimated 4Ns values",xlab="Real 4Ns values",main="A) Inference of Selection",cex.axis=1.7,cex.lab=2,cex.main=2.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6",maxstripline=0.15,beanlinewd=0.5,overall=10000,what=c(FALSE,TRUE,FALSE,TRUE),overallline = "median",ll=0.5)#
abline(h=0,lty=3)#
abline(h=50,lty=3)#
abline(h=-50,lty=3)#
abline(h=100,lty=3)#
abline(h=-100,lty=3)
### Set directory to the place where you have the 'PlottingScripts' folder#
#
library(here)#
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
#
Plot <- paste("Figure3_ProbLInferenceSelection.pdf",sep="")#
ColorViridis <- viridis(5)#
#
pdf(Plot,width=12,height=12/2)#
par(mfrow=c(1,2))#
par(mar=c(5,5,5,2) + 0.1)#
# Image <- readJPEG("PotentialPaperFigures/HaplotypeDivision/Slide1.jpg")#
#plot(0.5,0.5,xaxt="n",yaxt="n",xlim=c(0,1.333333),ylim=c(0,1),main="A) Windows of pairwise haplotypic\n identity by state lengths (L)",cex.main=2)#
#rasterImage(Image,0.0,0.0,1.333333,1,bty="n")#
#
#LLSurface <- read.table("ResultsSelectionInferred/ExampleLLSurface.txt")#
#plot(1:401,LLSurface[1,],type="l",lwd=6,ylab="Log-likelihood",xlab="4Ns",cex.lab=2,cex.axis=2,xaxt="n",main="C) Example Log-Likelihood plot",cex.main=2)#
#axis(1,at=c(1,101,201,301,401),labels=c(-200,-100,0,100,200),cex.lab=2,cex.axis=2)#
#arrows(201,-15761.78,201,-15666.78)#
#legend(131,-15755.78,c("MLE"),bty="n",cex=2)#
#
Selection4Ns_0 <- read.table("SelectionConstantPopSize0_N10000.txt")#
Selection4Ns_50 <- read.table("SelectionConstantPopSize50_N10000.txt")#
Selection4Ns_100 <- read.table("SelectionConstantPopSize100_N10000.txt")#
Selection4Ns_Minus50 <- read.table("SelectionConstantPopSize-50_N10000.txt")#
Selection4Ns_Minus100 <- read.table("SelectionConstantPopSize-100_N10000.txt")#
#
beanplot(Selection4Ns_0$V1-200,Selection4Ns_50$V1-200,Selection4Ns_Minus50$V1-200,Selection4Ns_100$V1-200,Selection4Ns_Minus100$V1-200,names=c("0","50","-50","100","-100"),ylab="Estimated 4Ns values",xlab="Real 4Ns values",main="A) Inference of Selection",cex.axis=1.7,cex.lab=2,cex.main=2.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6",maxstripline=0.15,beanlinewd=0.5,overall=10000,what=c(FALSE,TRUE,FALSE,TRUE),overallline = "median",ll=0.5,bw="nrd")#
abline(h=0,lty=3)#
abline(h=50,lty=3)#
abline(h=-50,lty=3)#
abline(h=100,lty=3)#
abline(h=-100,lty=3)#
beanplot(abs(Selection4Ns_0$V1-200),abs(Selection4Ns_50$V1-200),abs(Selection4Ns_Minus50$V1-200),abs(Selection4Ns_100$V1-200),abs(Selection4Ns_Minus100$V1-200),names=c("0","50","-50","100","-100"),ylab="Estimated |4Ns| values",xlab="Real 4Ns values",main="B) Inference of Selection\n in terms of |4Ns| values",cex.axis=1.7,cex.lab=2,cex.main=2.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6",maxstripline=0.15,beanlinewd=0.5,overall=10000,what=c(FALSE,TRUE,TRUE,TRUE),overallline = "median",ll=0.5)#
abline(h=0,lty=3)#
abline(h=50,lty=3)#
abline(h=-50,lty=3)#
abline(h=100,lty=3)#
abline(h=-100,lty=3)#
dev.off()
### Set directory to the place where you have the 'PlottingScripts' folder#
#
library(here)#
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
#
Plot <- paste("Figure3_ProbLInferenceSelection.pdf",sep="")#
ColorViridis <- viridis(5)#
#
pdf(Plot,width=12,height=12/2)#
par(mfrow=c(1,2))#
par(mar=c(5,5,5,2) + 0.1)#
# Image <- readJPEG("PotentialPaperFigures/HaplotypeDivision/Slide1.jpg")#
#plot(0.5,0.5,xaxt="n",yaxt="n",xlim=c(0,1.333333),ylim=c(0,1),main="A) Windows of pairwise haplotypic\n identity by state lengths (L)",cex.main=2)#
#rasterImage(Image,0.0,0.0,1.333333,1,bty="n")#
#
#LLSurface <- read.table("ResultsSelectionInferred/ExampleLLSurface.txt")#
#plot(1:401,LLSurface[1,],type="l",lwd=6,ylab="Log-likelihood",xlab="4Ns",cex.lab=2,cex.axis=2,xaxt="n",main="C) Example Log-Likelihood plot",cex.main=2)#
#axis(1,at=c(1,101,201,301,401),labels=c(-200,-100,0,100,200),cex.lab=2,cex.axis=2)#
#arrows(201,-15761.78,201,-15666.78)#
#legend(131,-15755.78,c("MLE"),bty="n",cex=2)#
#
Selection4Ns_0 <- read.table("SelectionConstantPopSize0_N10000.txt")#
Selection4Ns_50 <- read.table("SelectionConstantPopSize50_N10000.txt")#
Selection4Ns_100 <- read.table("SelectionConstantPopSize100_N10000.txt")#
Selection4Ns_Minus50 <- read.table("SelectionConstantPopSize-50_N10000.txt")#
Selection4Ns_Minus100 <- read.table("SelectionConstantPopSize-100_N10000.txt")#
#
beanplot(Selection4Ns_0$V1-200,Selection4Ns_50$V1-200,Selection4Ns_Minus50$V1-200,Selection4Ns_100$V1-200,Selection4Ns_Minus100$V1-200,names=c("0","50","-50","100","-100"),ylab="Estimated 4Ns values",xlab="Real 4Ns values",main="A) Inference of Selection",cex.axis=1.7,cex.lab=2,cex.main=2.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6",maxstripline=0.15,beanlinewd=0.5,overall=10000,what=c(FALSE,TRUE,FALSE,TRUE),overallline = "median",ll=0.5, bw="nrd0")#
abline(h=0,lty=3)#
abline(h=50,lty=3)#
abline(h=-50,lty=3)#
abline(h=100,lty=3)#
abline(h=-100,lty=3)#
beanplot(abs(Selection4Ns_0$V1-200),abs(Selection4Ns_50$V1-200),abs(Selection4Ns_Minus50$V1-200),abs(Selection4Ns_100$V1-200),abs(Selection4Ns_Minus100$V1-200),names=c("0","50","-50","100","-100"),ylab="Estimated |4Ns| values",xlab="Real 4Ns values",main="B) Inference of Selection\n in terms of |4Ns| values",cex.axis=1.7,cex.lab=2,cex.main=2.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6",maxstripline=0.15,beanlinewd=0.5,overall=10000,what=c(FALSE,TRUE,TRUE,TRUE),overallline = "median",ll=0.5)#
abline(h=0,lty=3)#
abline(h=50,lty=3)#
abline(h=-50,lty=3)#
abline(h=100,lty=3)#
abline(h=-100,lty=3)#
dev.off()
### Set directory to the place where you have the 'PlottingScripts' folder#
#
library(here)#
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
#
Plot <- paste("Figure3_ProbLInferenceSelection.pdf",sep="")#
ColorViridis <- viridis(5)#
#
pdf(Plot,width=12,height=12/2)#
par(mfrow=c(1,2))#
par(mar=c(5,5,5,2) + 0.1)#
# Image <- readJPEG("PotentialPaperFigures/HaplotypeDivision/Slide1.jpg")#
#plot(0.5,0.5,xaxt="n",yaxt="n",xlim=c(0,1.333333),ylim=c(0,1),main="A) Windows of pairwise haplotypic\n identity by state lengths (L)",cex.main=2)#
#rasterImage(Image,0.0,0.0,1.333333,1,bty="n")#
#
#LLSurface <- read.table("ResultsSelectionInferred/ExampleLLSurface.txt")#
#plot(1:401,LLSurface[1,],type="l",lwd=6,ylab="Log-likelihood",xlab="4Ns",cex.lab=2,cex.axis=2,xaxt="n",main="C) Example Log-Likelihood plot",cex.main=2)#
#axis(1,at=c(1,101,201,301,401),labels=c(-200,-100,0,100,200),cex.lab=2,cex.axis=2)#
#arrows(201,-15761.78,201,-15666.78)#
#legend(131,-15755.78,c("MLE"),bty="n",cex=2)#
#
Selection4Ns_0 <- read.table("SelectionConstantPopSize0_N10000.txt")#
Selection4Ns_50 <- read.table("SelectionConstantPopSize50_N10000.txt")#
Selection4Ns_100 <- read.table("SelectionConstantPopSize100_N10000.txt")#
Selection4Ns_Minus50 <- read.table("SelectionConstantPopSize-50_N10000.txt")#
Selection4Ns_Minus100 <- read.table("SelectionConstantPopSize-100_N10000.txt")#
#
beanplot(Selection4Ns_0$V1-200,Selection4Ns_50$V1-200,Selection4Ns_Minus50$V1-200,Selection4Ns_100$V1-200,Selection4Ns_Minus100$V1-200,names=c("0","50","-50","100","-100"),ylab="Estimated 4Ns values",xlab="Real 4Ns values",main="A) Inference of Selection",cex.axis=1.7,cex.lab=2,cex.main=2.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6",maxstripline=0.15,beanlinewd=0.5,overall=10000,what=c(FALSE,TRUE,FALSE,TRUE),overallline = "median",ll=0.5, bw="nrd0")#
abline(h=0,lty=3)#
abline(h=50,lty=3)#
abline(h=-50,lty=3)#
abline(h=100,lty=3)#
abline(h=-100,lty=3)#
beanplot(abs(Selection4Ns_0$V1-200),abs(Selection4Ns_50$V1-200),abs(Selection4Ns_Minus50$V1-200),abs(Selection4Ns_100$V1-200),abs(Selection4Ns_Minus100$V1-200),names=c("0","50","-50","100","-100"),ylab="Estimated |4Ns| values",xlab="Real 4Ns values",main="B) Inference of Selection\n in terms of |4Ns| values",cex.axis=1.7,cex.lab=2,cex.main=2.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6",maxstripline=0.15,beanlinewd=0.5,overall=10000,what=c(FALSE,TRUE,TRUE,TRUE),overallline = "median",ll=0.5, bw="nrd0")#
abline(h=0,lty=3)#
abline(h=50,lty=3)#
abline(h=-50,lty=3)#
abline(h=100,lty=3)#
abline(h=-100,lty=3)#
dev.off()
library(here)#
library(viridis)#
library(jpeg)#
library(plotrix)#
library(beanplot)#
library(RColorBrewer)#
#
### Figure 3#
Selection4Ns_0 <- read.table("SelectionPopExpansion0_N10000.txt")#
Selection4Ns_50 <- read.table("SelectionPopExpansion50_N10000.txt")#
Selection4Ns_100 <- read.table("SelectionPopExpansion100_N10000.txt")#
Selection4Ns_Minus50 <- read.table("SelectionPopExpansion-50_N10000.txt")#
Selection4Ns_Minus100 <- read.table("SelectionPopExpansion-100_N10000.txt")#
#
Plot <- paste("Figure5_PopExpansionSelInference.pdf",sep="")
pdf(Plot)#
par(mar=c(5,5,5,2) + 0.1)#
beanplot(Selection4Ns_0$V1-200,Selection4Ns_50$V1-200,Selection4Ns_Minus50$V1-200,Selection4Ns_100$V1-200,Selection4Ns_Minus100$V1-200,names=c("0","50","-50","100","-100"),ylab="Estimated 4Ns values",xlab="Real 4Ns values",main="Inference of Selection in a\nPopulation Expansion Model",cex.axis=2.2,cex.lab=2.5,cex.main=2.5,col = c("#CAB2D6", "#33A02C", "#B2DF8A"), border = "#CAB2D6",maxstripline=0.15,beanlinewd=0.5,overall=10000,what=c(FALSE,TRUE,TRUE,TRUE),overallline = "median",ll=0.5)#
abline(h=0,lty=3)#
abline(h=50,lty=3)#
abline(h=-50,lty=3)#
abline(h=100,lty=3)#
abline(h=-100,lty=3)#
#
dev.off()
1000/25
100*40
4000/3600
10000/200
50*40
2000/6
2000/60
1/4000
1/2000
